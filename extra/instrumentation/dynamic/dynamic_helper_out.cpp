// Generated by llvm2cpp - DO NOT MODIFY!

#include <llvm/Pass.h>
#include <llvm/PassManager.h>
#include <llvm/ADT/SmallVector.h>
#include <llvm/Analysis/Verifier.h>
#include <llvm/Assembly/PrintModulePass.h>
#include <llvm/IR/BasicBlock.h>
#include <llvm/IR/CallingConv.h>
#include <llvm/IR/Constants.h>
#include <llvm/IR/DerivedTypes.h>
#include <llvm/IR/Function.h>
#include <llvm/IR/GlobalVariable.h>
#include <llvm/IR/InlineAsm.h>
#include <llvm/IR/Instructions.h>
#include <llvm/IR/LLVMContext.h>
#include <llvm/IR/Module.h>
#include <llvm/Support/FormattedStream.h>
#include <llvm/Support/MathExtras.h>
#include <algorithm>
using namespace llvm;

Module* makeLLVMModule();

int main(int argc, char**argv) {
  Module* Mod = makeLLVMModule();
  verifyModule(*Mod, PrintMessageAction);
  PassManager PM;
  PM.add(createPrintModulePass(&outs()));
  PM.run(*Mod);
  return 0;
}


Module* makeLLVMModule() {
 // Module Construction
 Module* mod = new Module("dynamic_helper_out.bc", getGlobalContext());
 mod->setDataLayout("e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128");
 mod->setTargetTriple("x86_64-unknown-linux-gnu");
 
 // Type Definitions
 StructType *StructTy_class_std__ios_base__Init = mod->getTypeByName("class.std::ios_base::Init");
 if (!StructTy_class_std__ios_base__Init) {
 StructTy_class_std__ios_base__Init = StructType::create(mod->getContext(), "class.std::ios_base::Init");
 }
 std::vector<Type*>StructTy_class_std__ios_base__Init_fields;
 StructTy_class_std__ios_base__Init_fields.push_back(IntegerType::get(mod->getContext(), 8));
 if (StructTy_class_std__ios_base__Init->isOpaque()) {
 StructTy_class_std__ios_base__Init->setBody(StructTy_class_std__ios_base__Init_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_0 = PointerType::get(StructTy_class_std__ios_base__Init, 0);
 
 PointerType* PointerTy_1 = PointerType::get(IntegerType::get(mod->getContext(), 8), 0);
 
 StructType *StructTy_class_std__map = mod->getTypeByName("class.std::map");
 if (!StructTy_class_std__map) {
 StructTy_class_std__map = StructType::create(mod->getContext(), "class.std::map");
 }
 std::vector<Type*>StructTy_class_std__map_fields;
 StructType *StructTy_class_std___Rb_tree = mod->getTypeByName("class.std::_Rb_tree");
 if (!StructTy_class_std___Rb_tree) {
 StructTy_class_std___Rb_tree = StructType::create(mod->getContext(), "class.std::_Rb_tree");
 }
 std::vector<Type*>StructTy_class_std___Rb_tree_fields;
 StructType *StructTy_struct_std___Rb_tree_std__basic_string_char___std__pair_const_std__basic_string_char___int___std___Select1st_std__pair_const_std__basic_string_char___int_____std__less_std__basic_string_char_____std__allocator_std__pair_const_std__basic_string_char___int________Rb_tree_impl = mod->getTypeByName("struct.std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, int>, std::_Select1st<std::pair<const std::basic_string<char>, int> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, int> > >::_Rb_tree_impl");
 if (!StructTy_struct_std___Rb_tree_std__basic_string_char___std__pair_const_std__basic_string_char___int___std___Select1st_std__pair_const_std__basic_string_char___int_____std__less_std__basic_string_char_____std__allocator_std__pair_const_std__basic_string_char___int________Rb_tree_impl) {
 StructTy_struct_std___Rb_tree_std__basic_string_char___std__pair_const_std__basic_string_char___int___std___Select1st_std__pair_const_std__basic_string_char___int_____std__less_std__basic_string_char_____std__allocator_std__pair_const_std__basic_string_char___int________Rb_tree_impl = StructType::create(mod->getContext(), "struct.std::_Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, int>, std::_Select1st<std::pair<const std::basic_string<char>, int> >, std::less<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, int> > >::_Rb_tree_impl");
 }
 std::vector<Type*>StructTy_struct_std___Rb_tree_std__basic_string_char___std__pair_const_std__basic_string_char___int___std___Select1st_std__pair_const_std__basic_string_char___int_____std__less_std__basic_string_char_____std__allocator_std__pair_const_std__basic_string_char___int________Rb_tree_impl_fields;
 StructType *StructTy_struct_std__less = mod->getTypeByName("struct.std::less");
 if (!StructTy_struct_std__less) {
 StructTy_struct_std__less = StructType::create(mod->getContext(), "struct.std::less");
 }
 std::vector<Type*>StructTy_struct_std__less_fields;
 StructTy_struct_std__less_fields.push_back(IntegerType::get(mod->getContext(), 8));
 if (StructTy_struct_std__less->isOpaque()) {
 StructTy_struct_std__less->setBody(StructTy_struct_std__less_fields, /*isPacked=*/false);
 }
 
 StructTy_struct_std___Rb_tree_std__basic_string_char___std__pair_const_std__basic_string_char___int___std___Select1st_std__pair_const_std__basic_string_char___int_____std__less_std__basic_string_char_____std__allocator_std__pair_const_std__basic_string_char___int________Rb_tree_impl_fields.push_back(StructTy_struct_std__less);
 StructType *StructTy_struct_std___Rb_tree_node_base = mod->getTypeByName("struct.std::_Rb_tree_node_base");
 if (!StructTy_struct_std___Rb_tree_node_base) {
 StructTy_struct_std___Rb_tree_node_base = StructType::create(mod->getContext(), "struct.std::_Rb_tree_node_base");
 }
 std::vector<Type*>StructTy_struct_std___Rb_tree_node_base_fields;
 StructTy_struct_std___Rb_tree_node_base_fields.push_back(IntegerType::get(mod->getContext(), 32));
 PointerType* PointerTy_2 = PointerType::get(StructTy_struct_std___Rb_tree_node_base, 0);
 
 StructTy_struct_std___Rb_tree_node_base_fields.push_back(PointerTy_2);
 StructTy_struct_std___Rb_tree_node_base_fields.push_back(PointerTy_2);
 StructTy_struct_std___Rb_tree_node_base_fields.push_back(PointerTy_2);
 if (StructTy_struct_std___Rb_tree_node_base->isOpaque()) {
 StructTy_struct_std___Rb_tree_node_base->setBody(StructTy_struct_std___Rb_tree_node_base_fields, /*isPacked=*/false);
 }
 
 StructTy_struct_std___Rb_tree_std__basic_string_char___std__pair_const_std__basic_string_char___int___std___Select1st_std__pair_const_std__basic_string_char___int_____std__less_std__basic_string_char_____std__allocator_std__pair_const_std__basic_string_char___int________Rb_tree_impl_fields.push_back(StructTy_struct_std___Rb_tree_node_base);
 StructTy_struct_std___Rb_tree_std__basic_string_char___std__pair_const_std__basic_string_char___int___std___Select1st_std__pair_const_std__basic_string_char___int_____std__less_std__basic_string_char_____std__allocator_std__pair_const_std__basic_string_char___int________Rb_tree_impl_fields.push_back(IntegerType::get(mod->getContext(), 64));
 if (StructTy_struct_std___Rb_tree_std__basic_string_char___std__pair_const_std__basic_string_char___int___std___Select1st_std__pair_const_std__basic_string_char___int_____std__less_std__basic_string_char_____std__allocator_std__pair_const_std__basic_string_char___int________Rb_tree_impl->isOpaque()) {
 StructTy_struct_std___Rb_tree_std__basic_string_char___std__pair_const_std__basic_string_char___int___std___Select1st_std__pair_const_std__basic_string_char___int_____std__less_std__basic_string_char_____std__allocator_std__pair_const_std__basic_string_char___int________Rb_tree_impl->setBody(StructTy_struct_std___Rb_tree_std__basic_string_char___std__pair_const_std__basic_string_char___int___std___Select1st_std__pair_const_std__basic_string_char___int_____std__less_std__basic_string_char_____std__allocator_std__pair_const_std__basic_string_char___int________Rb_tree_impl_fields, /*isPacked=*/false);
 }
 
 StructTy_class_std___Rb_tree_fields.push_back(StructTy_struct_std___Rb_tree_std__basic_string_char___std__pair_const_std__basic_string_char___int___std___Select1st_std__pair_const_std__basic_string_char___int_____std__less_std__basic_string_char_____std__allocator_std__pair_const_std__basic_string_char___int________Rb_tree_impl);
 if (StructTy_class_std___Rb_tree->isOpaque()) {
 StructTy_class_std___Rb_tree->setBody(StructTy_class_std___Rb_tree_fields, /*isPacked=*/false);
 }
 
 StructTy_class_std__map_fields.push_back(StructTy_class_std___Rb_tree);
 if (StructTy_class_std__map->isOpaque()) {
 StructTy_class_std__map->setBody(StructTy_class_std__map_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_3 = PointerType::get(StructTy_class_std__map, 0);
 
 StructType *StructTy_struct__IO_FILE = mod->getTypeByName("struct._IO_FILE");
 if (!StructTy_struct__IO_FILE) {
 StructTy_struct__IO_FILE = StructType::create(mod->getContext(), "struct._IO_FILE");
 }
 std::vector<Type*>StructTy_struct__IO_FILE_fields;
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 32));
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructType *StructTy_struct__IO_marker = mod->getTypeByName("struct._IO_marker");
 if (!StructTy_struct__IO_marker) {
 StructTy_struct__IO_marker = StructType::create(mod->getContext(), "struct._IO_marker");
 }
 std::vector<Type*>StructTy_struct__IO_marker_fields;
 PointerType* PointerTy_6 = PointerType::get(StructTy_struct__IO_marker, 0);
 
 StructTy_struct__IO_marker_fields.push_back(PointerTy_6);
 PointerType* PointerTy_5 = PointerType::get(StructTy_struct__IO_FILE, 0);
 
 StructTy_struct__IO_marker_fields.push_back(PointerTy_5);
 StructTy_struct__IO_marker_fields.push_back(IntegerType::get(mod->getContext(), 32));
 if (StructTy_struct__IO_marker->isOpaque()) {
 StructTy_struct__IO_marker->setBody(StructTy_struct__IO_marker_fields, /*isPacked=*/false);
 }
 
 
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_6);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_5);
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 32));
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 32));
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 64));
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 16));
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 8));
 ArrayType* ArrayTy_7 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 1);
 
 StructTy_struct__IO_FILE_fields.push_back(ArrayTy_7);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 64));
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(PointerTy_1);
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 64));
 StructTy_struct__IO_FILE_fields.push_back(IntegerType::get(mod->getContext(), 32));
 ArrayType* ArrayTy_8 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 20);
 
 StructTy_struct__IO_FILE_fields.push_back(ArrayTy_8);
 if (StructTy_struct__IO_FILE->isOpaque()) {
 StructTy_struct__IO_FILE->setBody(StructTy_struct__IO_FILE_fields, /*isPacked=*/false);
 }
 
 
 PointerType* PointerTy_4 = PointerType::get(PointerTy_5, 0);
 
 ArrayType* ArrayTy_9 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 11);
 
 PointerType* PointerTy_10 = PointerType::get(ArrayTy_9, 0);
 
 ArrayType* ArrayTy_11 = ArrayType::get(IntegerType::get(mod->getContext(), 8), 6);
 
 PointerType* PointerTy_12 = PointerType::get(ArrayTy_11, 0);
 
 std::vector<Type*>StructTy_14_fields;
 StructTy_14_fields.push_back(IntegerType::get(mod->getContext(), 32));
 std::vector<Type*>FuncTy_16_args;
 FunctionType* FuncTy_16 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_16_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_15 = PointerType::get(FuncTy_16, 0);
 
 StructTy_14_fields.push_back(PointerTy_15);
 StructType *StructTy_14 = StructType::get(mod->getContext(), StructTy_14_fields, /*isPacked=*/false);
 
 ArrayType* ArrayTy_13 = ArrayType::get(StructTy_14, 1);
 
 PointerType* PointerTy_17 = PointerType::get(ArrayTy_13, 0);
 
 std::vector<Type*>FuncTy_19_args;
 FuncTy_19_args.push_back(PointerTy_0);
 FunctionType* FuncTy_19 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_19_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_18 = PointerType::get(FuncTy_19, 0);
 
 std::vector<Type*>FuncTy_21_args;
 FuncTy_21_args.push_back(PointerTy_1);
 FunctionType* FuncTy_21 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_21_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_20 = PointerType::get(FuncTy_21, 0);
 
 std::vector<Type*>FuncTy_23_args;
 FuncTy_23_args.push_back(PointerTy_20);
 FuncTy_23_args.push_back(PointerTy_1);
 FuncTy_23_args.push_back(PointerTy_1);
 FunctionType* FuncTy_23 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_23_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_22 = PointerType::get(FuncTy_23, 0);
 
 std::vector<Type*>FuncTy_25_args;
 FuncTy_25_args.push_back(PointerTy_3);
 FunctionType* FuncTy_25 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_25_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_24 = PointerType::get(FuncTy_25, 0);
 
 PointerType* PointerTy_26 = PointerType::get(PointerTy_3, 0);
 
 PointerType* PointerTy_27 = PointerType::get(StructTy_class_std___Rb_tree, 0);
 
 std::vector<Type*>FuncTy_29_args;
 FuncTy_29_args.push_back(PointerTy_27);
 FunctionType* FuncTy_29 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_29_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_28 = PointerType::get(FuncTy_29, 0);
 
 std::vector<Type*>FuncTy_30_args;
 FuncTy_30_args.push_back(PointerTy_1);
 FuncTy_30_args.push_back(IntegerType::get(mod->getContext(), 32));
 FunctionType* FuncTy_30 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_30_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_31 = PointerType::get(PointerTy_1, 0);
 
 PointerType* PointerTy_32 = PointerType::get(IntegerType::get(mod->getContext(), 32), 0);
 
 StructType *StructTy_class_std__basic_string = mod->getTypeByName("class.std::basic_string");
 if (!StructTy_class_std__basic_string) {
 StructTy_class_std__basic_string = StructType::create(mod->getContext(), "class.std::basic_string");
 }
 std::vector<Type*>StructTy_class_std__basic_string_fields;
 StructType *StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider = mod->getTypeByName("struct.std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider");
 if (!StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider) {
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider = StructType::create(mod->getContext(), "struct.std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider");
 }
 std::vector<Type*>StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider_fields;
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider_fields.push_back(PointerTy_1);
 if (StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider->isOpaque()) {
 StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider->setBody(StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider_fields, /*isPacked=*/false);
 }
 
 StructTy_class_std__basic_string_fields.push_back(StructTy_struct_std__basic_string_char__std__char_traits_char___std__allocator_char______Alloc_hider);
 if (StructTy_class_std__basic_string->isOpaque()) {
 StructTy_class_std__basic_string->setBody(StructTy_class_std__basic_string_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_33 = PointerType::get(StructTy_class_std__basic_string, 0);
 
 StructType *StructTy_class_std__allocator_0 = mod->getTypeByName("class.std::allocator.0");
 if (!StructTy_class_std__allocator_0) {
 StructTy_class_std__allocator_0 = StructType::create(mod->getContext(), "class.std::allocator.0");
 }
 std::vector<Type*>StructTy_class_std__allocator_0_fields;
 StructTy_class_std__allocator_0_fields.push_back(IntegerType::get(mod->getContext(), 8));
 if (StructTy_class_std__allocator_0->isOpaque()) {
 StructTy_class_std__allocator_0->setBody(StructTy_class_std__allocator_0_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_34 = PointerType::get(StructTy_class_std__allocator_0, 0);
 
 std::vector<Type*>FuncTy_36_args;
 FuncTy_36_args.push_back(PointerTy_34);
 FunctionType* FuncTy_36 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_36_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_35 = PointerType::get(FuncTy_36, 0);
 
 std::vector<Type*>FuncTy_38_args;
 FuncTy_38_args.push_back(PointerTy_33);
 FuncTy_38_args.push_back(PointerTy_1);
 FuncTy_38_args.push_back(PointerTy_34);
 FunctionType* FuncTy_38 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_38_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_37 = PointerType::get(FuncTy_38, 0);
 
 std::vector<Type*>FuncTy_40_args;
 FuncTy_40_args.push_back(PointerTy_3);
 FuncTy_40_args.push_back(PointerTy_33);
 FunctionType* FuncTy_40 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 64),
  /*Params=*/FuncTy_40_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_39 = PointerType::get(FuncTy_40, 0);
 
 std::vector<Type*>FuncTy_42_args;
 FuncTy_42_args.push_back(PointerTy_3);
 FuncTy_42_args.push_back(PointerTy_33);
 FunctionType* FuncTy_42 = FunctionType::get(
  /*Result=*/PointerTy_32,
  /*Params=*/FuncTy_42_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_41 = PointerType::get(FuncTy_42, 0);
 
 std::vector<Type*>StructTy_43_fields;
 StructTy_43_fields.push_back(PointerTy_1);
 StructTy_43_fields.push_back(IntegerType::get(mod->getContext(), 32));
 StructType *StructTy_43 = StructType::get(mod->getContext(), StructTy_43_fields, /*isPacked=*/false);
 
 std::vector<Type*>FuncTy_45_args;
 FuncTy_45_args.push_back(PointerTy_33);
 FunctionType* FuncTy_45 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_45_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_44 = PointerType::get(FuncTy_45, 0);
 
 std::vector<Type*>FuncTy_46_args;
 FunctionType* FuncTy_46 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_46_args,
  /*isVarArg=*/true);
 
 PointerType* PointerTy_47 = PointerType::get(PointerTy_33, 0);
 
 StructType *StructTy_struct_std___Rb_tree_const_iterator = mod->getTypeByName("struct.std::_Rb_tree_const_iterator");
 if (!StructTy_struct_std___Rb_tree_const_iterator) {
 StructTy_struct_std___Rb_tree_const_iterator = StructType::create(mod->getContext(), "struct.std::_Rb_tree_const_iterator");
 }
 std::vector<Type*>StructTy_struct_std___Rb_tree_const_iterator_fields;
 StructTy_struct_std___Rb_tree_const_iterator_fields.push_back(PointerTy_2);
 if (StructTy_struct_std___Rb_tree_const_iterator->isOpaque()) {
 StructTy_struct_std___Rb_tree_const_iterator->setBody(StructTy_struct_std___Rb_tree_const_iterator_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_48 = PointerType::get(StructTy_struct_std___Rb_tree_const_iterator, 0);
 
 std::vector<Type*>FuncTy_50_args;
 FuncTy_50_args.push_back(PointerTy_27);
 FuncTy_50_args.push_back(PointerTy_33);
 FunctionType* FuncTy_50 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_50_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_49 = PointerType::get(FuncTy_50, 0);
 
 PointerType* PointerTy_51 = PointerType::get(PointerTy_2, 0);
 
 std::vector<Type*>FuncTy_53_args;
 FuncTy_53_args.push_back(PointerTy_27);
 FunctionType* FuncTy_53 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_53_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_52 = PointerType::get(FuncTy_53, 0);
 
 std::vector<Type*>FuncTy_55_args;
 FuncTy_55_args.push_back(PointerTy_48);
 FuncTy_55_args.push_back(PointerTy_48);
 FunctionType* FuncTy_55 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 1),
  /*Params=*/FuncTy_55_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_54 = PointerType::get(FuncTy_55, 0);
 
 StructType *StructTy_struct_std___Rb_tree_iterator = mod->getTypeByName("struct.std::_Rb_tree_iterator");
 if (!StructTy_struct_std___Rb_tree_iterator) {
 StructTy_struct_std___Rb_tree_iterator = StructType::create(mod->getContext(), "struct.std::_Rb_tree_iterator");
 }
 std::vector<Type*>StructTy_struct_std___Rb_tree_iterator_fields;
 StructTy_struct_std___Rb_tree_iterator_fields.push_back(PointerTy_2);
 if (StructTy_struct_std___Rb_tree_iterator->isOpaque()) {
 StructTy_struct_std___Rb_tree_iterator->setBody(StructTy_struct_std___Rb_tree_iterator_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_56 = PointerType::get(StructTy_struct_std___Rb_tree_iterator, 0);
 
 PointerType* PointerTy_57 = PointerType::get(StructTy_struct_std__less, 0);
 
 StructType *StructTy_struct_std__pair = mod->getTypeByName("struct.std::pair");
 if (!StructTy_struct_std__pair) {
 StructTy_struct_std__pair = StructType::create(mod->getContext(), "struct.std::pair");
 }
 std::vector<Type*>StructTy_struct_std__pair_fields;
 StructTy_struct_std__pair_fields.push_back(StructTy_class_std__basic_string);
 StructTy_struct_std__pair_fields.push_back(IntegerType::get(mod->getContext(), 32));
 if (StructTy_struct_std__pair->isOpaque()) {
 StructTy_struct_std__pair->setBody(StructTy_struct_std__pair_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_58 = PointerType::get(StructTy_struct_std__pair, 0);
 
 std::vector<Type*>FuncTy_60_args;
 FuncTy_60_args.push_back(PointerTy_3);
 FuncTy_60_args.push_back(PointerTy_33);
 FunctionType* FuncTy_60 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_60_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_59 = PointerType::get(FuncTy_60, 0);
 
 std::vector<Type*>FuncTy_62_args;
 FuncTy_62_args.push_back(PointerTy_3);
 FunctionType* FuncTy_62 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_62_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_61 = PointerType::get(FuncTy_62, 0);
 
 std::vector<Type*>FuncTy_64_args;
 FuncTy_64_args.push_back(PointerTy_56);
 FuncTy_64_args.push_back(PointerTy_56);
 FunctionType* FuncTy_64 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 1),
  /*Params=*/FuncTy_64_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_63 = PointerType::get(FuncTy_64, 0);
 
 std::vector<Type*>FuncTy_66_args;
 FuncTy_66_args.push_back(PointerTy_56);
 FunctionType* FuncTy_66 = FunctionType::get(
  /*Result=*/PointerTy_58,
  /*Params=*/FuncTy_66_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_65 = PointerType::get(FuncTy_66, 0);
 
 std::vector<Type*>FuncTy_68_args;
 FuncTy_68_args.push_back(PointerTy_57);
 FuncTy_68_args.push_back(PointerTy_33);
 FuncTy_68_args.push_back(PointerTy_33);
 FunctionType* FuncTy_68 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 1),
  /*Params=*/FuncTy_68_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_67 = PointerType::get(FuncTy_68, 0);
 
 std::vector<Type*>FuncTy_70_args;
 FuncTy_70_args.push_back(PointerTy_1);
 FuncTy_70_args.push_back(PointerTy_1);
 FuncTy_70_args.push_back(IntegerType::get(mod->getContext(), 64));
 FuncTy_70_args.push_back(IntegerType::get(mod->getContext(), 32));
 FuncTy_70_args.push_back(IntegerType::get(mod->getContext(), 1));
 FunctionType* FuncTy_70 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_70_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_69 = PointerType::get(FuncTy_70, 0);
 
 std::vector<Type*>FuncTy_72_args;
 FuncTy_72_args.push_back(PointerTy_58);
 FuncTy_72_args.push_back(PointerTy_33);
 FuncTy_72_args.push_back(PointerTy_32);
 FunctionType* FuncTy_72 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_72_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_71 = PointerType::get(FuncTy_72, 0);
 
 std::vector<Type*>FuncTy_74_args;
 FuncTy_74_args.push_back(PointerTy_3);
 FuncTy_74_args.push_back(PointerTy_2);
 FuncTy_74_args.push_back(PointerTy_58);
 FunctionType* FuncTy_74 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_74_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_73 = PointerType::get(FuncTy_74, 0);
 
 std::vector<Type*>FuncTy_76_args;
 FuncTy_76_args.push_back(PointerTy_58);
 FunctionType* FuncTy_76 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_76_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_75 = PointerType::get(FuncTy_76, 0);
 
 std::vector<Type*>FuncTy_78_args;
 FuncTy_78_args.push_back(PointerTy_1);
 FunctionType* FuncTy_78 = FunctionType::get(
  /*Result=*/PointerTy_1,
  /*Params=*/FuncTy_78_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_77 = PointerType::get(FuncTy_78, 0);
 
 std::vector<Type*>FuncTy_80_args;
 FuncTy_80_args.push_back(PointerTy_33);
 FuncTy_80_args.push_back(PointerTy_33);
 FunctionType* FuncTy_80 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_80_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_79 = PointerType::get(FuncTy_80, 0);
 
 std::vector<Type*>FuncTy_82_args;
 FuncTy_82_args.push_back(PointerTy_33);
 FunctionType* FuncTy_82 = FunctionType::get(
  /*Result=*/PointerTy_1,
  /*Params=*/FuncTy_82_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_81 = PointerType::get(FuncTy_82, 0);
 
 std::vector<Type*>FuncTy_84_args;
 FuncTy_84_args.push_back(PointerTy_5);
 FuncTy_84_args.push_back(PointerTy_1);
 FunctionType* FuncTy_84 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_84_args,
  /*isVarArg=*/true);
 
 PointerType* PointerTy_83 = PointerType::get(FuncTy_84, 0);
 
 std::vector<Type*>FuncTy_86_args;
 FuncTy_86_args.push_back(PointerTy_56);
 FuncTy_86_args.push_back(IntegerType::get(mod->getContext(), 32));
 FunctionType* FuncTy_86 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_86_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_85 = PointerType::get(FuncTy_86, 0);
 
 PointerType* PointerTy_87 = PointerType::get(PointerTy_56, 0);
 
 StructType *StructTy_struct_std___Rb_tree_node = mod->getTypeByName("struct.std::_Rb_tree_node");
 if (!StructTy_struct_std___Rb_tree_node) {
 StructTy_struct_std___Rb_tree_node = StructType::create(mod->getContext(), "struct.std::_Rb_tree_node");
 }
 std::vector<Type*>StructTy_struct_std___Rb_tree_node_fields;
 StructTy_struct_std___Rb_tree_node_fields.push_back(StructTy_struct_std___Rb_tree_node_base);
 StructTy_struct_std___Rb_tree_node_fields.push_back(StructTy_struct_std__pair);
 if (StructTy_struct_std___Rb_tree_node->isOpaque()) {
 StructTy_struct_std___Rb_tree_node->setBody(StructTy_struct_std___Rb_tree_node_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_88 = PointerType::get(StructTy_struct_std___Rb_tree_node, 0);
 
 std::vector<Type*>FuncTy_90_args;
 FuncTy_90_args.push_back(PointerTy_58);
 FunctionType* FuncTy_90 = FunctionType::get(
  /*Result=*/PointerTy_58,
  /*Params=*/FuncTy_90_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_89 = PointerType::get(FuncTy_90, 0);
 
 std::vector<Type*>FuncTy_92_args;
 FuncTy_92_args.push_back(PointerTy_2);
 FunctionType* FuncTy_92 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_92_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_91 = PointerType::get(FuncTy_92, 0);
 
 PointerType* PointerTy_93 = PointerType::get(PointerTy_58, 0);
 
 PointerType* PointerTy_94 = PointerType::get(PointerTy_27, 0);
 
 PointerType* PointerTy_95 = PointerType::get(StructTy_struct_std___Rb_tree_std__basic_string_char___std__pair_const_std__basic_string_char___int___std___Select1st_std__pair_const_std__basic_string_char___int_____std__less_std__basic_string_char_____std__allocator_std__pair_const_std__basic_string_char___int________Rb_tree_impl, 0);
 
 std::vector<Type*>FuncTy_97_args;
 FuncTy_97_args.push_back(PointerTy_56);
 FuncTy_97_args.push_back(PointerTy_88);
 FunctionType* FuncTy_97 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_97_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_96 = PointerType::get(FuncTy_97, 0);
 
 PointerType* PointerTy_98 = PointerType::get(PointerTy_88, 0);
 
 PointerType* PointerTy_99 = PointerType::get(PointerTy_57, 0);
 
 std::vector<Type*>FuncTy_101_args;
 FuncTy_101_args.push_back(PointerTy_33);
 FuncTy_101_args.push_back(PointerTy_33);
 FunctionType* FuncTy_101 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 1),
  /*Params=*/FuncTy_101_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_100 = PointerType::get(FuncTy_101, 0);
 
 std::vector<Type*>FuncTy_103_args;
 FuncTy_103_args.push_back(PointerTy_48);
 FuncTy_103_args.push_back(PointerTy_56);
 FunctionType* FuncTy_103 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_103_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_102 = PointerType::get(FuncTy_103, 0);
 
 std::vector<Type*>FuncTy_105_args;
 FuncTy_105_args.push_back(PointerTy_27);
 FuncTy_105_args.push_back(PointerTy_2);
 FuncTy_105_args.push_back(PointerTy_58);
 FunctionType* FuncTy_105 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_105_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_104 = PointerType::get(FuncTy_105, 0);
 
 PointerType* PointerTy_106 = PointerType::get(PointerTy_32, 0);
 
 StructType *StructTy_struct_std__pair_3 = mod->getTypeByName("struct.std::pair.3");
 if (!StructTy_struct_std__pair_3) {
 StructTy_struct_std__pair_3 = StructType::create(mod->getContext(), "struct.std::pair.3");
 }
 std::vector<Type*>StructTy_struct_std__pair_3_fields;
 StructTy_struct_std__pair_3_fields.push_back(PointerTy_2);
 StructTy_struct_std__pair_3_fields.push_back(PointerTy_2);
 if (StructTy_struct_std__pair_3->isOpaque()) {
 StructTy_struct_std__pair_3->setBody(StructTy_struct_std__pair_3_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_107 = PointerType::get(StructTy_struct_std__pair_3, 0);
 
 StructType *StructTy_struct_std___Select1st = mod->getTypeByName("struct.std::_Select1st");
 if (!StructTy_struct_std___Select1st) {
 StructTy_struct_std___Select1st = StructType::create(mod->getContext(), "struct.std::_Select1st");
 }
 std::vector<Type*>StructTy_struct_std___Select1st_fields;
 StructTy_struct_std___Select1st_fields.push_back(IntegerType::get(mod->getContext(), 8));
 if (StructTy_struct_std___Select1st->isOpaque()) {
 StructTy_struct_std___Select1st->setBody(StructTy_struct_std___Select1st_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_108 = PointerType::get(StructTy_struct_std___Select1st, 0);
 
 std::vector<Type*>FuncTy_110_args;
 FuncTy_110_args.push_back(PointerTy_108);
 FuncTy_110_args.push_back(PointerTy_58);
 FunctionType* FuncTy_110 = FunctionType::get(
  /*Result=*/PointerTy_33,
  /*Params=*/FuncTy_110_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_109 = PointerType::get(FuncTy_110, 0);
 
 std::vector<Type*>StructTy_111_fields;
 StructTy_111_fields.push_back(PointerTy_2);
 StructTy_111_fields.push_back(PointerTy_2);
 StructType *StructTy_111 = StructType::get(mod->getContext(), StructTy_111_fields, /*isPacked=*/false);
 
 std::vector<Type*>FuncTy_113_args;
 FuncTy_113_args.push_back(PointerTy_27);
 FuncTy_113_args.push_back(PointerTy_2);
 FuncTy_113_args.push_back(PointerTy_33);
 FunctionType* FuncTy_113 = FunctionType::get(
  /*Result=*/StructTy_111,
  /*Params=*/FuncTy_113_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_112 = PointerType::get(FuncTy_113, 0);
 
 PointerType* PointerTy_114 = PointerType::get(StructTy_111, 0);
 
 std::vector<Type*>FuncTy_116_args;
 FuncTy_116_args.push_back(PointerTy_27);
 FuncTy_116_args.push_back(PointerTy_2);
 FuncTy_116_args.push_back(PointerTy_2);
 FuncTy_116_args.push_back(PointerTy_58);
 FunctionType* FuncTy_116 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_116_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_115 = PointerType::get(FuncTy_116, 0);
 
 PointerType* PointerTy_117 = PointerType::get(PointerTy_48, 0);
 
 std::vector<Type*>FuncTy_119_args;
 FuncTy_119_args.push_back(PointerTy_48);
 FunctionType* FuncTy_119 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_119_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_118 = PointerType::get(FuncTy_119, 0);
 
 std::vector<Type*>FuncTy_121_args;
 FuncTy_121_args.push_back(PointerTy_27);
 FunctionType* FuncTy_121 = FunctionType::get(
  /*Result=*/PointerTy_88,
  /*Params=*/FuncTy_121_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_120 = PointerType::get(FuncTy_121, 0);
 
 std::vector<Type*>FuncTy_123_args;
 FuncTy_123_args.push_back(PointerTy_27);
 FunctionType* FuncTy_123 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 64),
  /*Params=*/FuncTy_123_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_122 = PointerType::get(FuncTy_123, 0);
 
 std::vector<Type*>FuncTy_125_args;
 FuncTy_125_args.push_back(PointerTy_27);
 FunctionType* FuncTy_125 = FunctionType::get(
  /*Result=*/PointerTy_51,
  /*Params=*/FuncTy_125_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_124 = PointerType::get(FuncTy_125, 0);
 
 std::vector<Type*>FuncTy_127_args;
 FuncTy_127_args.push_back(PointerTy_2);
 FunctionType* FuncTy_127 = FunctionType::get(
  /*Result=*/PointerTy_33,
  /*Params=*/FuncTy_127_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_126 = PointerType::get(FuncTy_127, 0);
 
 std::vector<Type*>FuncTy_129_args;
 FuncTy_129_args.push_back(PointerTy_107);
 FuncTy_129_args.push_back(PointerTy_51);
 FuncTy_129_args.push_back(PointerTy_51);
 FunctionType* FuncTy_129 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_129_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_128 = PointerType::get(FuncTy_129, 0);
 
 std::vector<Type*>FuncTy_131_args;
 FuncTy_131_args.push_back(PointerTy_27);
 FuncTy_131_args.push_back(PointerTy_33);
 FunctionType* FuncTy_131 = FunctionType::get(
  /*Result=*/StructTy_111,
  /*Params=*/FuncTy_131_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_130 = PointerType::get(FuncTy_131, 0);
 
 std::vector<Type*>FuncTy_133_args;
 FuncTy_133_args.push_back(PointerTy_56);
 FunctionType* FuncTy_133 = FunctionType::get(
  /*Result=*/PointerTy_56,
  /*Params=*/FuncTy_133_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_132 = PointerType::get(FuncTy_133, 0);
 
 std::vector<Type*>FuncTy_135_args;
 FuncTy_135_args.push_back(PointerTy_2);
 FunctionType* FuncTy_135 = FunctionType::get(
  /*Result=*/PointerTy_88,
  /*Params=*/FuncTy_135_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_134 = PointerType::get(FuncTy_135, 0);
 
 PointerType* PointerTy_136 = PointerType::get(PointerTy_108, 0);
 
 std::vector<Type*>FuncTy_138_args;
 FuncTy_138_args.push_back(PointerTy_27);
 FuncTy_138_args.push_back(PointerTy_58);
 FunctionType* FuncTy_138 = FunctionType::get(
  /*Result=*/PointerTy_88,
  /*Params=*/FuncTy_138_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_137 = PointerType::get(FuncTy_138, 0);
 
 std::vector<Type*>FuncTy_140_args;
 FuncTy_140_args.push_back(IntegerType::get(mod->getContext(), 1));
 FuncTy_140_args.push_back(PointerTy_2);
 FuncTy_140_args.push_back(PointerTy_2);
 FuncTy_140_args.push_back(PointerTy_2);
 FunctionType* FuncTy_140 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_140_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_139 = PointerType::get(FuncTy_140, 0);
 
 PointerType* PointerTy_141 = PointerType::get(IntegerType::get(mod->getContext(), 64), 0);
 
 std::vector<Type*>FuncTy_143_args;
 FuncTy_143_args.push_back(PointerTy_2);
 FunctionType* FuncTy_143 = FunctionType::get(
  /*Result=*/PointerTy_58,
  /*Params=*/FuncTy_143_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_142 = PointerType::get(FuncTy_143, 0);
 
 StructType *StructTy_class_std__allocator_4 = mod->getTypeByName("class.std::allocator.4");
 if (!StructTy_class_std__allocator_4) {
 StructTy_class_std__allocator_4 = StructType::create(mod->getContext(), "class.std::allocator.4");
 }
 std::vector<Type*>StructTy_class_std__allocator_4_fields;
 StructTy_class_std__allocator_4_fields.push_back(IntegerType::get(mod->getContext(), 8));
 if (StructTy_class_std__allocator_4->isOpaque()) {
 StructTy_class_std__allocator_4->setBody(StructTy_class_std__allocator_4_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_144 = PointerType::get(StructTy_class_std__allocator_4, 0);
 
 std::vector<Type*>FuncTy_146_args;
 FuncTy_146_args.push_back(PointerTy_144);
 FuncTy_146_args.push_back(PointerTy_27);
 FunctionType* FuncTy_146 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_146_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_145 = PointerType::get(FuncTy_146, 0);
 
 StructType *StructTy_class___gnu_cxx__new_allocator_5 = mod->getTypeByName("class.__gnu_cxx::new_allocator.5");
 if (!StructTy_class___gnu_cxx__new_allocator_5) {
 StructTy_class___gnu_cxx__new_allocator_5 = StructType::create(mod->getContext(), "class.__gnu_cxx::new_allocator.5");
 }
 std::vector<Type*>StructTy_class___gnu_cxx__new_allocator_5_fields;
 StructTy_class___gnu_cxx__new_allocator_5_fields.push_back(IntegerType::get(mod->getContext(), 8));
 if (StructTy_class___gnu_cxx__new_allocator_5->isOpaque()) {
 StructTy_class___gnu_cxx__new_allocator_5->setBody(StructTy_class___gnu_cxx__new_allocator_5_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_147 = PointerType::get(StructTy_class___gnu_cxx__new_allocator_5, 0);
 
 std::vector<Type*>FuncTy_149_args;
 FuncTy_149_args.push_back(PointerTy_147);
 FuncTy_149_args.push_back(PointerTy_58);
 FuncTy_149_args.push_back(PointerTy_58);
 FunctionType* FuncTy_149 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_149_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_148 = PointerType::get(FuncTy_149, 0);
 
 std::vector<Type*>FuncTy_151_args;
 FuncTy_151_args.push_back(PointerTy_144);
 FunctionType* FuncTy_151 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_151_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_150 = PointerType::get(FuncTy_151, 0);
 
 std::vector<Type*>FuncTy_153_args;
 FuncTy_153_args.push_back(PointerTy_27);
 FuncTy_153_args.push_back(PointerTy_88);
 FunctionType* FuncTy_153 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_153_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_152 = PointerType::get(FuncTy_153, 0);
 
 StructType *StructTy_class_std__allocator = mod->getTypeByName("class.std::allocator");
 if (!StructTy_class_std__allocator) {
 StructTy_class_std__allocator = StructType::create(mod->getContext(), "class.std::allocator");
 }
 std::vector<Type*>StructTy_class_std__allocator_fields;
 StructTy_class_std__allocator_fields.push_back(IntegerType::get(mod->getContext(), 8));
 if (StructTy_class_std__allocator->isOpaque()) {
 StructTy_class_std__allocator->setBody(StructTy_class_std__allocator_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_154 = PointerType::get(StructTy_class_std__allocator, 0);
 
 StructType *StructTy_class___gnu_cxx__new_allocator = mod->getTypeByName("class.__gnu_cxx::new_allocator");
 if (!StructTy_class___gnu_cxx__new_allocator) {
 StructTy_class___gnu_cxx__new_allocator = StructType::create(mod->getContext(), "class.__gnu_cxx::new_allocator");
 }
 std::vector<Type*>StructTy_class___gnu_cxx__new_allocator_fields;
 StructTy_class___gnu_cxx__new_allocator_fields.push_back(IntegerType::get(mod->getContext(), 8));
 if (StructTy_class___gnu_cxx__new_allocator->isOpaque()) {
 StructTy_class___gnu_cxx__new_allocator->setBody(StructTy_class___gnu_cxx__new_allocator_fields, /*isPacked=*/false);
 }
 
 PointerType* PointerTy_155 = PointerType::get(StructTy_class___gnu_cxx__new_allocator, 0);
 
 std::vector<Type*>FuncTy_157_args;
 FuncTy_157_args.push_back(PointerTy_155);
 FuncTy_157_args.push_back(IntegerType::get(mod->getContext(), 64));
 FuncTy_157_args.push_back(PointerTy_1);
 FunctionType* FuncTy_157 = FunctionType::get(
  /*Result=*/PointerTy_88,
  /*Params=*/FuncTy_157_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_156 = PointerType::get(FuncTy_157, 0);
 
 std::vector<Type*>FuncTy_159_args;
 FuncTy_159_args.push_back(PointerTy_27);
 FunctionType* FuncTy_159 = FunctionType::get(
  /*Result=*/PointerTy_154,
  /*Params=*/FuncTy_159_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_158 = PointerType::get(FuncTy_159, 0);
 
 std::vector<Type*>FuncTy_161_args;
 FuncTy_161_args.push_back(PointerTy_144);
 FuncTy_161_args.push_back(PointerTy_154);
 FunctionType* FuncTy_161 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_161_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_160 = PointerType::get(FuncTy_161, 0);
 
 PointerType* PointerTy_162 = PointerType::get(PointerTy_147, 0);
 
 std::vector<Type*>FuncTy_164_args;
 FuncTy_164_args.push_back(PointerTy_58);
 FuncTy_164_args.push_back(PointerTy_58);
 FunctionType* FuncTy_164 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_164_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_163 = PointerType::get(FuncTy_164, 0);
 
 PointerType* PointerTy_165 = PointerType::get(PointerTy_144, 0);
 
 std::vector<Type*>FuncTy_167_args;
 FuncTy_167_args.push_back(PointerTy_147);
 FunctionType* FuncTy_167 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_167_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_166 = PointerType::get(FuncTy_167, 0);
 
 std::vector<Type*>FuncTy_169_args;
 FuncTy_169_args.push_back(PointerTy_155);
 FuncTy_169_args.push_back(PointerTy_88);
 FuncTy_169_args.push_back(IntegerType::get(mod->getContext(), 64));
 FunctionType* FuncTy_169 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_169_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_168 = PointerType::get(FuncTy_169, 0);
 
 PointerType* PointerTy_170 = PointerType::get(PointerTy_155, 0);
 
 PointerType* PointerTy_171 = PointerType::get(PointerTy_154, 0);
 
 std::vector<Type*>FuncTy_173_args;
 FuncTy_173_args.push_back(PointerTy_155);
 FunctionType* FuncTy_173 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 64),
  /*Params=*/FuncTy_173_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_172 = PointerType::get(FuncTy_173, 0);
 
 std::vector<Type*>FuncTy_175_args;
 FuncTy_175_args.push_back(IntegerType::get(mod->getContext(), 64));
 FunctionType* FuncTy_175 = FunctionType::get(
  /*Result=*/PointerTy_1,
  /*Params=*/FuncTy_175_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_174 = PointerType::get(FuncTy_175, 0);
 
 PointerType* PointerTy_176 = PointerType::get(PointerTy_107, 0);
 
 PointerType* PointerTy_177 = PointerType::get(PointerTy_51, 0);
 
 std::vector<Type*>FuncTy_179_args;
 FuncTy_179_args.push_back(PointerTy_88);
 FunctionType* FuncTy_179 = FunctionType::get(
  /*Result=*/PointerTy_33,
  /*Params=*/FuncTy_179_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_178 = PointerType::get(FuncTy_179, 0);
 
 std::vector<Type*>FuncTy_181_args;
 FuncTy_181_args.push_back(PointerTy_88);
 FunctionType* FuncTy_181 = FunctionType::get(
  /*Result=*/PointerTy_58,
  /*Params=*/FuncTy_181_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_180 = PointerType::get(FuncTy_181, 0);
 
 std::vector<Type*>FuncTy_183_args;
 FuncTy_183_args.push_back(PointerTy_33);
 FuncTy_183_args.push_back(PointerTy_33);
 FunctionType* FuncTy_183 = FunctionType::get(
  /*Result=*/IntegerType::get(mod->getContext(), 32),
  /*Params=*/FuncTy_183_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_182 = PointerType::get(FuncTy_183, 0);
 
 std::vector<Type*>FuncTy_185_args;
 FuncTy_185_args.push_back(PointerTy_27);
 FuncTy_185_args.push_back(PointerTy_88);
 FuncTy_185_args.push_back(PointerTy_88);
 FuncTy_185_args.push_back(PointerTy_33);
 FunctionType* FuncTy_185 = FunctionType::get(
  /*Result=*/PointerTy_2,
  /*Params=*/FuncTy_185_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_184 = PointerType::get(FuncTy_185, 0);
 
 std::vector<Type*>FuncTy_187_args;
 FuncTy_187_args.push_back(PointerTy_48);
 FuncTy_187_args.push_back(PointerTy_88);
 FunctionType* FuncTy_187 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_187_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_186 = PointerType::get(FuncTy_187, 0);
 
 std::vector<Type*>FuncTy_189_args;
 FuncTy_189_args.push_back(PointerTy_95);
 FunctionType* FuncTy_189 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_189_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_188 = PointerType::get(FuncTy_189, 0);
 
 PointerType* PointerTy_190 = PointerType::get(PointerTy_95, 0);
 
 std::vector<Type*>FuncTy_192_args;
 FuncTy_192_args.push_back(PointerTy_154);
 FunctionType* FuncTy_192 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_192_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_191 = PointerType::get(FuncTy_192, 0);
 
 std::vector<Type*>FuncTy_194_args;
 FuncTy_194_args.push_back(PointerTy_1);
 FuncTy_194_args.push_back(IntegerType::get(mod->getContext(), 8));
 FuncTy_194_args.push_back(IntegerType::get(mod->getContext(), 64));
 FuncTy_194_args.push_back(IntegerType::get(mod->getContext(), 32));
 FuncTy_194_args.push_back(IntegerType::get(mod->getContext(), 1));
 FunctionType* FuncTy_194 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_194_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_193 = PointerType::get(FuncTy_194, 0);
 
 std::vector<Type*>FuncTy_196_args;
 FuncTy_196_args.push_back(PointerTy_155);
 FunctionType* FuncTy_196 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_196_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_195 = PointerType::get(FuncTy_196, 0);
 
 std::vector<Type*>FuncTy_198_args;
 FuncTy_198_args.push_back(PointerTy_147);
 FuncTy_198_args.push_back(PointerTy_58);
 FunctionType* FuncTy_198 = FunctionType::get(
  /*Result=*/Type::getVoidTy(mod->getContext()),
  /*Params=*/FuncTy_198_args,
  /*isVarArg=*/false);
 
 PointerType* PointerTy_197 = PointerType::get(FuncTy_198, 0);
 
 
 // Function Declarations
 
 Function* func___cxx_global_var_init = mod->getFunction("__cxx_global_var_init");
 if (!func___cxx_global_var_init) {
 func___cxx_global_var_init = Function::Create(
  /*Type=*/FuncTy_16,
  /*Linkage=*/GlobalValue::InternalLinkage,
  /*Name=*/"__cxx_global_var_init", mod); 
 func___cxx_global_var_init->setCallingConv(CallingConv::C);
 func___cxx_global_var_init->setSection(".text.startup");
 }
 AttributeSet func___cxx_global_var_init_PAL;
 func___cxx_global_var_init->setAttributes(func___cxx_global_var_init_PAL);
 
 Function* func__ZNSt8ios_base4InitC1Ev = mod->getFunction("_ZNSt8ios_base4InitC1Ev");
 if (!func__ZNSt8ios_base4InitC1Ev) {
 func__ZNSt8ios_base4InitC1Ev = Function::Create(
  /*Type=*/FuncTy_19,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZNSt8ios_base4InitC1Ev", mod); // (external, no body)
 func__ZNSt8ios_base4InitC1Ev->setCallingConv(CallingConv::C);
 }
 AttributeSet func__ZNSt8ios_base4InitC1Ev_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSt8ios_base4InitC1Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSt8ios_base4InitC1Ev->setAttributes(func__ZNSt8ios_base4InitC1Ev_PAL);
 
 Function* func__ZNSt8ios_base4InitD1Ev = mod->getFunction("_ZNSt8ios_base4InitD1Ev");
 if (!func__ZNSt8ios_base4InitD1Ev) {
 func__ZNSt8ios_base4InitD1Ev = Function::Create(
  /*Type=*/FuncTy_19,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZNSt8ios_base4InitD1Ev", mod); // (external, no body)
 func__ZNSt8ios_base4InitD1Ev->setCallingConv(CallingConv::C);
 }
 AttributeSet func__ZNSt8ios_base4InitD1Ev_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSt8ios_base4InitD1Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSt8ios_base4InitD1Ev->setAttributes(func__ZNSt8ios_base4InitD1Ev_PAL);
 
 Function* func___cxa_atexit = mod->getFunction("__cxa_atexit");
 if (!func___cxa_atexit) {
 func___cxa_atexit = Function::Create(
  /*Type=*/FuncTy_23,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"__cxa_atexit", mod); // (external, no body)
 func___cxa_atexit->setCallingConv(CallingConv::C);
 }
 AttributeSet func___cxa_atexit_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func___cxa_atexit_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func___cxa_atexit->setAttributes(func___cxa_atexit_PAL);
 
 Function* func___cxx_global_var_init1 = mod->getFunction("__cxx_global_var_init1");
 if (!func___cxx_global_var_init1) {
 func___cxx_global_var_init1 = Function::Create(
  /*Type=*/FuncTy_16,
  /*Linkage=*/GlobalValue::InternalLinkage,
  /*Name=*/"__cxx_global_var_init1", mod); 
 func___cxx_global_var_init1->setCallingConv(CallingConv::C);
 func___cxx_global_var_init1->setSection(".text.startup");
 }
 AttributeSet func___cxx_global_var_init1_PAL;
 func___cxx_global_var_init1->setAttributes(func___cxx_global_var_init1_PAL);
 
 Function* func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev = mod->getFunction("_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev");
 if (!func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev) {
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev = Function::Create(
  /*Type=*/FuncTy_25,
  /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
  /*Name=*/"_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev", mod); 
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev->setCallingConv(CallingConv::C);
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev->setAlignment(2);
 }
 AttributeSet func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::UWTable);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev->setAttributes(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev_PAL);
 
 Function* func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev = mod->getFunction("_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev");
 if (!func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev) {
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev = Function::Create(
  /*Type=*/FuncTy_25,
  /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
  /*Name=*/"_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev", mod); 
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev->setCallingConv(CallingConv::C);
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev->setAlignment(2);
 }
 AttributeSet func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::InlineHint);
    B.addAttribute(Attribute::UWTable);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev->setAttributes(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev_PAL);
 
 Function* func__Z5CountPci = mod->getFunction("_Z5CountPci");
 if (!func__Z5CountPci) {
 func__Z5CountPci = Function::Create(
  /*Type=*/FuncTy_30,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_Z5CountPci", mod); 
 func__Z5CountPci->setCallingConv(CallingConv::C);
 }
 AttributeSet func__Z5CountPci_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::UWTable);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__Z5CountPci_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__Z5CountPci->setAttributes(func__Z5CountPci_PAL);
 
 Function* func__ZNSsC1EPKcRKSaIcE = mod->getFunction("_ZNSsC1EPKcRKSaIcE");
 if (!func__ZNSsC1EPKcRKSaIcE) {
 func__ZNSsC1EPKcRKSaIcE = Function::Create(
  /*Type=*/FuncTy_38,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZNSsC1EPKcRKSaIcE", mod); // (external, no body)
 func__ZNSsC1EPKcRKSaIcE->setCallingConv(CallingConv::C);
 }
 AttributeSet func__ZNSsC1EPKcRKSaIcE_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSsC1EPKcRKSaIcE_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSsC1EPKcRKSaIcE->setAttributes(func__ZNSsC1EPKcRKSaIcE_PAL);
 
 Function* func__ZNSaIcEC1Ev = mod->getFunction("_ZNSaIcEC1Ev");
 if (!func__ZNSaIcEC1Ev) {
 func__ZNSaIcEC1Ev = Function::Create(
  /*Type=*/FuncTy_36,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZNSaIcEC1Ev", mod); // (external, no body)
 func__ZNSaIcEC1Ev->setCallingConv(CallingConv::C);
 }
 AttributeSet func__ZNSaIcEC1Ev_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSaIcEC1Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSaIcEC1Ev->setAttributes(func__ZNSaIcEC1Ev_PAL);
 
 Function* func___gxx_personality_v0 = mod->getFunction("__gxx_personality_v0");
 if (!func___gxx_personality_v0) {
 func___gxx_personality_v0 = Function::Create(
  /*Type=*/FuncTy_46,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"__gxx_personality_v0", mod); // (external, no body)
 func___gxx_personality_v0->setCallingConv(CallingConv::C);
 }
 AttributeSet func___gxx_personality_v0_PAL;
 func___gxx_personality_v0->setAttributes(func___gxx_personality_v0_PAL);
 
 Function* func__ZNSaIcED1Ev = mod->getFunction("_ZNSaIcED1Ev");
 if (!func__ZNSaIcED1Ev) {
 func__ZNSaIcED1Ev = Function::Create(
  /*Type=*/FuncTy_36,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZNSaIcED1Ev", mod); // (external, no body)
 func__ZNSaIcED1Ev->setCallingConv(CallingConv::C);
 }
 AttributeSet func__ZNSaIcED1Ev_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSaIcED1Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSaIcED1Ev->setAttributes(func__ZNSaIcED1Ev_PAL);
 
 Function* func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_ = mod->getFunction("_ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_");
 if (!func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_) {
 func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_ = Function::Create(
  /*Type=*/FuncTy_40,
  /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
  /*Name=*/"_ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_", mod); 
 func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_->setCallingConv(CallingConv::C);
 func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_->setAlignment(2);
 }
 AttributeSet func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3__PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::UWTable);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3__PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_->setAttributes(func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3__PAL);
 
 Function* func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_ = mod->getFunction("_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_");
 if (!func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_) {
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_ = Function::Create(
  /*Type=*/FuncTy_42,
  /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
  /*Name=*/"_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_", mod); 
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_->setCallingConv(CallingConv::C);
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_->setAlignment(2);
 }
 AttributeSet func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3__PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::UWTable);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3__PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_->setAttributes(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3__PAL);
 
 Function* func__ZNSsD1Ev = mod->getFunction("_ZNSsD1Ev");
 if (!func__ZNSsD1Ev) {
 func__ZNSsD1Ev = Function::Create(
  /*Type=*/FuncTy_45,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZNSsD1Ev", mod); // (external, no body)
 func__ZNSsD1Ev->setCallingConv(CallingConv::C);
 }
 AttributeSet func__ZNSsD1Ev_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSsD1Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSsD1Ev->setAttributes(func__ZNSsD1Ev_PAL);
 
 Function* func___clang_call_terminate = mod->getFunction("__clang_call_terminate");
 if (!func___clang_call_terminate) {
 func___clang_call_terminate = Function::Create(
  /*Type=*/FuncTy_21,
  /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
  /*Name=*/"__clang_call_terminate", mod); 
 func___clang_call_terminate->setCallingConv(CallingConv::C);
 func___clang_call_terminate->setVisibility(GlobalValue::HiddenVisibility);
 }
 AttributeSet func___clang_call_terminate_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::NoInline);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func___clang_call_terminate_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func___clang_call_terminate->setAttributes(func___clang_call_terminate_PAL);
 
 Function* func___cxa_begin_catch = mod->getFunction("__cxa_begin_catch");
 if (!func___cxa_begin_catch) {
 func___cxa_begin_catch = Function::Create(
  /*Type=*/FuncTy_78,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"__cxa_begin_catch", mod); // (external, no body)
 func___cxa_begin_catch->setCallingConv(CallingConv::C);
 }
 AttributeSet func___cxa_begin_catch_PAL;
 func___cxa_begin_catch->setAttributes(func___cxa_begin_catch_PAL);
 
 Function* func__ZSt9terminatev = mod->getFunction("_ZSt9terminatev");
 if (!func__ZSt9terminatev) {
 func__ZSt9terminatev = Function::Create(
  /*Type=*/FuncTy_16,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_ZSt9terminatev", mod); // (external, no body)
 func__ZSt9terminatev->setCallingConv(CallingConv::C);
 }
 AttributeSet func__ZSt9terminatev_PAL;
 func__ZSt9terminatev->setAttributes(func__ZSt9terminatev_PAL);
 
 Function* func__Z7printDIv = mod->getFunction("_Z7printDIv");
 if (!func__Z7printDIv) {
 func__Z7printDIv = Function::Create(
  /*Type=*/FuncTy_16,
  /*Linkage=*/GlobalValue::ExternalLinkage,
  /*Name=*/"_Z7printDIv", mod); 
 func__Z7printDIv->setCallingConv(CallingConv::C);
 }
 AttributeSet func__Z7printDIv_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::UWTable);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__Z7printDIv_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__Z7printDIv->setAttributes(func__Z7printDIv_PAL);
 
 Function* func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv = mod->getFunction("_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv");
 if (!func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv) {
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv = Function::Create(
  /*Type=*/FuncTy_62,
  /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
  /*Name=*/"_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv", mod); 
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv->setCallingConv(CallingConv::C);
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv->setAlignment(2);
 }
 AttributeSet func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::UWTable);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv->setAttributes(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv_PAL);
 
 Function* func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_ = mod->getFunction("_ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_");
 if (!func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_) {
 func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_ = Function::Create(
  /*Type=*/FuncTy_64,
  /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
  /*Name=*/"_ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_", mod); 
 func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_->setCallingConv(CallingConv::C);
 func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_->setAlignment(2);
 }
 AttributeSet func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3__PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_->setAttributes(func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3__PAL);

Function* func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv = mod->getFunction("_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv");
if (!func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv) {
func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv = Function::Create(
 /*Type=*/FuncTy_62,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv", mod); 
func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv->setCallingConv(CallingConv::C);
func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv->setAlignment(2);
}
AttributeSet func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv->setAttributes(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv_PAL);

Function* func__ZNSsC1ERKSs = mod->getFunction("_ZNSsC1ERKSs");
if (!func__ZNSsC1ERKSs) {
func__ZNSsC1ERKSs = Function::Create(
 /*Type=*/FuncTy_80,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZNSsC1ERKSs", mod); // (external, no body)
func__ZNSsC1ERKSs->setCallingConv(CallingConv::C);
}
AttributeSet func__ZNSsC1ERKSs_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSsC1ERKSs_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSsC1ERKSs->setAttributes(func__ZNSsC1ERKSs_PAL);

Function* func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv = mod->getFunction("_ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv");
if (!func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv) {
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv = Function::Create(
 /*Type=*/FuncTy_66,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv", mod); 
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv->setCallingConv(CallingConv::C);
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv->setAlignment(2);
}
AttributeSet func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv->setAttributes(func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv_PAL);

Function* func_fprintf = mod->getFunction("fprintf");
if (!func_fprintf) {
func_fprintf = Function::Create(
 /*Type=*/FuncTy_84,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"fprintf", mod); // (external, no body)
func_fprintf->setCallingConv(CallingConv::C);
}
AttributeSet func_fprintf_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func_fprintf_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func_fprintf->setAttributes(func_fprintf_PAL);

Function* func__ZNKSs5c_strEv = mod->getFunction("_ZNKSs5c_strEv");
if (!func__ZNKSs5c_strEv) {
func__ZNKSs5c_strEv = Function::Create(
 /*Type=*/FuncTy_82,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZNKSs5c_strEv", mod); // (external, no body)
func__ZNKSs5c_strEv->setCallingConv(CallingConv::C);
}
AttributeSet func__ZNKSs5c_strEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSs5c_strEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSs5c_strEv->setAttributes(func__ZNKSs5c_strEv_PAL);

Function* func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi = mod->getFunction("_ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi");
if (!func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi) {
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi = Function::Create(
 /*Type=*/FuncTy_86,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi", mod); 
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi->setCallingConv(CallingConv::C);
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi->setAlignment(2);
}
AttributeSet func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi->setAttributes(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi_PAL);

Function* func__ZSt11__addressofISt4pairIKSsiEEPT_RS3_ = mod->getFunction("_ZSt11__addressofISt4pairIKSsiEEPT_RS3_");
if (!func__ZSt11__addressofISt4pairIKSsiEEPT_RS3_) {
func__ZSt11__addressofISt4pairIKSsiEEPT_RS3_ = Function::Create(
 /*Type=*/FuncTy_90,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZSt11__addressofISt4pairIKSsiEEPT_RS3_", mod); 
func__ZSt11__addressofISt4pairIKSsiEEPT_RS3_->setCallingConv(CallingConv::C);
}
AttributeSet func__ZSt11__addressofISt4pairIKSsiEEPT_RS3__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::InlineHint);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZSt11__addressofISt4pairIKSsiEEPT_RS3__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZSt11__addressofISt4pairIKSsiEEPT_RS3_->setAttributes(func__ZSt11__addressofISt4pairIKSsiEEPT_RS3__PAL);

Function* func_llvm_memcpy_p0i8_p0i8_i64 = mod->getFunction("llvm.memcpy.p0i8.p0i8.i64");
if (!func_llvm_memcpy_p0i8_p0i8_i64) {
func_llvm_memcpy_p0i8_p0i8_i64 = Function::Create(
 /*Type=*/FuncTy_70,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"llvm.memcpy.p0i8.p0i8.i64", mod); // (external, no body)
func_llvm_memcpy_p0i8_p0i8_i64->setCallingConv(CallingConv::C);
}
AttributeSet func_llvm_memcpy_p0i8_p0i8_i64_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoCapture);
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::ReadOnly);
  B.addAttribute(Attribute::NoCapture);
  PAS = AttributeSet::get(mod->getContext(), 2U, B);
 }

Attrs.push_back(PAS);
{
 AttrBuilder B;
 B.addAttribute(Attribute::NoUnwind);
 PAS = AttributeSet::get(mod->getContext(), ~0U, B);
}

Attrs.push_back(PAS);
func_llvm_memcpy_p0i8_p0i8_i64_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_llvm_memcpy_p0i8_p0i8_i64->setAttributes(func_llvm_memcpy_p0i8_p0i8_i64_PAL);

Function* func__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base = mod->getFunction("_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base");
if (!func__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base) {
func__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base = Function::Create(
 /*Type=*/FuncTy_92,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base", mod); // (external, no body)
func__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base->setCallingConv(CallingConv::C);
}
AttributeSet func__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::ReadOnly);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base->setAttributes(func__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv = Function::Create(
 /*Type=*/FuncTy_53,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv_PAL);

Function* func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E = mod->getFunction("_ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E");
if (!func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E) {
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E = Function::Create(
 /*Type=*/FuncTy_97,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E", mod); 
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E->setCallingConv(CallingConv::C);
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E->setAlignment(2);
}
AttributeSet func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E->setAttributes(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv = Function::Create(
 /*Type=*/FuncTy_53,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv_PAL);

Function* func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_ = mod->getFunction("_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_");
if (!func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_) {
func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_ = Function::Create(
 /*Type=*/FuncTy_60,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_", mod); 
func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_->setCallingConv(CallingConv::C);
func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_->setAlignment(2);
}
AttributeSet func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_->setAttributes(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3__PAL);

Function* func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_ = mod->getFunction("_ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_");
if (!func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_) {
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_ = Function::Create(
 /*Type=*/FuncTy_64,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_", mod); 
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_->setCallingConv(CallingConv::C);
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_->setAlignment(2);
}
AttributeSet func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::ZExt);
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::UWTable);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3__PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_->setAttributes(func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3__PAL);

Function* func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv = mod->getFunction("_ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv");
if (!func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv) {
func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv = Function::Create(
 /*Type=*/FuncTy_25,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv", mod); 
func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv->setCallingConv(CallingConv::C);
func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv->setAlignment(2);
}
AttributeSet func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv->setAttributes(func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv_PAL);

Function* func__ZNKSt4lessISsEclERKSsS2_ = mod->getFunction("_ZNKSt4lessISsEclERKSsS2_");
if (!func__ZNKSt4lessISsEclERKSsS2_) {
func__ZNKSt4lessISsEclERKSsS2_ = Function::Create(
 /*Type=*/FuncTy_68,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt4lessISsEclERKSsS2_", mod); 
func__ZNKSt4lessISsEclERKSsS2_->setCallingConv(CallingConv::C);
func__ZNKSt4lessISsEclERKSsS2_->setAlignment(2);
}
AttributeSet func__ZNKSt4lessISsEclERKSsS2__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::ZExt);
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::UWTable);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__ZNKSt4lessISsEclERKSsS2__PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZNKSt4lessISsEclERKSsS2_->setAttributes(func__ZNKSt4lessISsEclERKSsS2__PAL);

Function* func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv = mod->getFunction("_ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv");
if (!func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv) {
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv = Function::Create(
 /*Type=*/FuncTy_66,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv", mod); 
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv->setCallingConv(CallingConv::C);
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv->setAlignment(2);
}
AttributeSet func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv->setAttributes(func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv_PAL);

Function* func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_ = mod->getFunction("_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_");
if (!func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_) {
func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_ = Function::Create(
 /*Type=*/FuncTy_74,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_", mod); 
func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_->setCallingConv(CallingConv::C);
func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_->setAlignment(2);
}
AttributeSet func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_->setAttributes(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4__PAL);

Function* func__ZNSt4pairIKSsiEC2ERS0_RKi = mod->getFunction("_ZNSt4pairIKSsiEC2ERS0_RKi");
if (!func__ZNSt4pairIKSsiEC2ERS0_RKi) {
func__ZNSt4pairIKSsiEC2ERS0_RKi = Function::Create(
 /*Type=*/FuncTy_72,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt4pairIKSsiEC2ERS0_RKi", mod); 
func__ZNSt4pairIKSsiEC2ERS0_RKi->setCallingConv(CallingConv::C);
func__ZNSt4pairIKSsiEC2ERS0_RKi->setAlignment(2);
}
AttributeSet func__ZNSt4pairIKSsiEC2ERS0_RKi_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt4pairIKSsiEC2ERS0_RKi_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt4pairIKSsiEC2ERS0_RKi->setAttributes(func__ZNSt4pairIKSsiEC2ERS0_RKi_PAL);

Function* func__ZNSt4pairIKSsiED2Ev = mod->getFunction("_ZNSt4pairIKSsiED2Ev");
if (!func__ZNSt4pairIKSsiED2Ev) {
func__ZNSt4pairIKSsiED2Ev = Function::Create(
 /*Type=*/FuncTy_76,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt4pairIKSsiED2Ev", mod); 
func__ZNSt4pairIKSsiED2Ev->setCallingConv(CallingConv::C);
func__ZNSt4pairIKSsiED2Ev->setAlignment(2);
}
AttributeSet func__ZNSt4pairIKSsiED2Ev_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::InlineHint);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt4pairIKSsiED2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt4pairIKSsiED2Ev->setAttributes(func__ZNSt4pairIKSsiED2Ev_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_ = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_ = Function::Create(
 /*Type=*/FuncTy_105,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2__PAL);

Function* func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E = mod->getFunction("_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E");
if (!func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E) {
func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E = Function::Create(
 /*Type=*/FuncTy_103,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E", mod); 
func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E->setCallingConv(CallingConv::C);
func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E->setAlignment(2);
}
AttributeSet func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E->setAttributes(func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_ = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_ = Function::Create(
 /*Type=*/FuncTy_113,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1__PAL);

Function* func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_ = mod->getFunction("_ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_");
if (!func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_) {
func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_ = Function::Create(
 /*Type=*/FuncTy_110,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_", mod); 
func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_->setCallingConv(CallingConv::C);
func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_->setAlignment(2);
}
AttributeSet func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_->setAttributes(func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2__PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_ = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_ = Function::Create(
 /*Type=*/FuncTy_116,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2__PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv = Function::Create(
 /*Type=*/FuncTy_121,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base = Function::Create(
 /*Type=*/FuncTy_127,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_ = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_ = Function::Create(
 /*Type=*/FuncTy_138,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2__PAL);

Function* func__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ = mod->getFunction("_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_");
if (!func__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_) {
func__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ = Function::Create(
 /*Type=*/FuncTy_140,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_", mod); // (external, no body)
func__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_->setCallingConv(CallingConv::C);
}
AttributeSet func__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::ZExt);
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS__PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_->setAttributes(func__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS__PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv = Function::Create(
 /*Type=*/FuncTy_121,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv_PAL);

Function* func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv = mod->getFunction("_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv");
if (!func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv) {
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv = Function::Create(
 /*Type=*/FuncTy_146,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv", mod); 
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv->setCallingConv(CallingConv::C);
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv->setAlignment(2);
}
AttributeSet func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::StructRet);
   B.addAttribute(Attribute::NoAlias);
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::UWTable);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv->setAttributes(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv_PAL);

Function* func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_ = mod->getFunction("_ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_");
if (!func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_) {
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_ = Function::Create(
 /*Type=*/FuncTy_149,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_", mod); 
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_->setCallingConv(CallingConv::C);
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_->setAlignment(2);
}
AttributeSet func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_->setAttributes(func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3__PAL);

Function* func__ZNSaISt4pairIKSsiEED2Ev = mod->getFunction("_ZNSaISt4pairIKSsiEED2Ev");
if (!func__ZNSaISt4pairIKSsiEED2Ev) {
func__ZNSaISt4pairIKSsiEED2Ev = Function::Create(
 /*Type=*/FuncTy_151,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSaISt4pairIKSsiEED2Ev", mod); 
func__ZNSaISt4pairIKSsiEED2Ev->setCallingConv(CallingConv::C);
func__ZNSaISt4pairIKSsiEED2Ev->setAlignment(2);
}
AttributeSet func__ZNSaISt4pairIKSsiEED2Ev_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSaISt4pairIKSsiEED2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSaISt4pairIKSsiEED2Ev->setAttributes(func__ZNSaISt4pairIKSsiEED2Ev_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E = Function::Create(
 /*Type=*/FuncTy_153,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E_PAL);

Function* func___cxa_rethrow = mod->getFunction("__cxa_rethrow");
if (!func___cxa_rethrow) {
func___cxa_rethrow = Function::Create(
 /*Type=*/FuncTy_16,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"__cxa_rethrow", mod); // (external, no body)
func___cxa_rethrow->setCallingConv(CallingConv::C);
}
AttributeSet func___cxa_rethrow_PAL;
func___cxa_rethrow->setAttributes(func___cxa_rethrow_PAL);

Function* func___cxa_end_catch = mod->getFunction("__cxa_end_catch");
if (!func___cxa_end_catch) {
func___cxa_end_catch = Function::Create(
 /*Type=*/FuncTy_16,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"__cxa_end_catch", mod); // (external, no body)
func___cxa_end_catch->setCallingConv(CallingConv::C);
}
AttributeSet func___cxa_end_catch_PAL;
func___cxa_end_catch->setAttributes(func___cxa_end_catch_PAL);

Function* func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m = mod->getFunction("_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m");
if (!func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m) {
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m = Function::Create(
 /*Type=*/FuncTy_169,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m", mod); 
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m->setCallingConv(CallingConv::C);
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m->setAlignment(2);
}
AttributeSet func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m->setAttributes(func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m_PAL);

Function* func__ZdlPv = mod->getFunction("_ZdlPv");
if (!func__ZdlPv) {
func__ZdlPv = Function::Create(
 /*Type=*/FuncTy_21,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZdlPv", mod); // (external, no body)
func__ZdlPv->setCallingConv(CallingConv::C);
}
AttributeSet func__ZdlPv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZdlPv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZdlPv->setAttributes(func__ZdlPv_PAL);

Function* func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev = mod->getFunction("_ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev");
if (!func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev) {
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev = Function::Create(
 /*Type=*/FuncTy_167,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev", mod); 
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev->setCallingConv(CallingConv::C);
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev->setAlignment(2);
}
AttributeSet func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev->setAttributes(func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev_PAL);

Function* func__ZNSt4pairIKSsiEC2ERKS1_ = mod->getFunction("_ZNSt4pairIKSsiEC2ERKS1_");
if (!func__ZNSt4pairIKSsiEC2ERKS1_) {
func__ZNSt4pairIKSsiEC2ERKS1_ = Function::Create(
 /*Type=*/FuncTy_164,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt4pairIKSsiEC2ERKS1_", mod); 
func__ZNSt4pairIKSsiEC2ERKS1_->setCallingConv(CallingConv::C);
func__ZNSt4pairIKSsiEC2ERKS1_->setAlignment(2);
}
AttributeSet func__ZNSt4pairIKSsiEC2ERKS1__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::InlineHint);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt4pairIKSsiEC2ERKS1__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt4pairIKSsiEC2ERKS1_->setAttributes(func__ZNSt4pairIKSsiEC2ERKS1__PAL);

Function* func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E = mod->getFunction("_ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E");
if (!func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E) {
func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E = Function::Create(
 /*Type=*/FuncTy_161,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E", mod); 
func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E->setCallingConv(CallingConv::C);
func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E->setAlignment(2);
}
AttributeSet func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E->setAttributes(func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E_PAL);

Function* func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv = mod->getFunction("_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv");
if (!func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv) {
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv = Function::Create(
 /*Type=*/FuncTy_159,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv", mod); 
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv->setCallingConv(CallingConv::C);
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv->setAlignment(2);
}
AttributeSet func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv->setAttributes(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv_PAL);

Function* func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev = mod->getFunction("_ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev");
if (!func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev) {
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev = Function::Create(
 /*Type=*/FuncTy_167,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev", mod); 
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev->setCallingConv(CallingConv::C);
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev->setAlignment(2);
}
AttributeSet func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev->setAttributes(func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev_PAL);

Function* func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv = mod->getFunction("_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv");
if (!func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv) {
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv = Function::Create(
 /*Type=*/FuncTy_157,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv", mod); 
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv->setCallingConv(CallingConv::C);
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv->setAlignment(2);
}
AttributeSet func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv->setAttributes(func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv_PAL);

Function* func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv = mod->getFunction("_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv");
if (!func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv) {
func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv = Function::Create(
 /*Type=*/FuncTy_173,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv", mod); 
func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv->setCallingConv(CallingConv::C);
func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv->setAlignment(2);
}
AttributeSet func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv->setAttributes(func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv_PAL);

Function* func__ZSt17__throw_bad_allocv = mod->getFunction("_ZSt17__throw_bad_allocv");
if (!func__ZSt17__throw_bad_allocv) {
func__ZSt17__throw_bad_allocv = Function::Create(
 /*Type=*/FuncTy_16,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZSt17__throw_bad_allocv", mod); // (external, no body)
func__ZSt17__throw_bad_allocv->setCallingConv(CallingConv::C);
}
AttributeSet func__ZSt17__throw_bad_allocv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoReturn);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZSt17__throw_bad_allocv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZSt17__throw_bad_allocv->setAttributes(func__ZSt17__throw_bad_allocv_PAL);

Function* func__Znwm = mod->getFunction("_Znwm");
if (!func__Znwm) {
func__Znwm = Function::Create(
 /*Type=*/FuncTy_175,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_Znwm", mod); // (external, no body)
func__Znwm->setCallingConv(CallingConv::C);
}
AttributeSet func__Znwm_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoAlias);
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__Znwm_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__Znwm->setAttributes(func__Znwm_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base = Function::Create(
 /*Type=*/FuncTy_143,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base_PAL);

Function* func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv = mod->getFunction("_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv");
if (!func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv) {
func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv = Function::Create(
 /*Type=*/FuncTy_119,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv", mod); 
func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv->setCallingConv(CallingConv::C);
func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv->setAlignment(2);
}
AttributeSet func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv->setAttributes(func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv_PAL);

Function* func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv = mod->getFunction("_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv");
if (!func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv) {
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv = Function::Create(
 /*Type=*/FuncTy_123,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv", mod); 
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv->setCallingConv(CallingConv::C);
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv->setAlignment(2);
}
AttributeSet func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv->setAttributes(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv = Function::Create(
 /*Type=*/FuncTy_125,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv_PAL);

Function* func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_ = mod->getFunction("_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_");
if (!func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_) {
func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_ = Function::Create(
 /*Type=*/FuncTy_129,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_", mod); 
func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_->setCallingConv(CallingConv::C);
func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_->setAlignment(2);
}
AttributeSet func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_->setAttributes(func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4__PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_ = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_ = Function::Create(
 /*Type=*/FuncTy_131,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1__PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv = Function::Create(
 /*Type=*/FuncTy_125,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv_PAL);

Function* func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv = mod->getFunction("_ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv");
if (!func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv) {
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv = Function::Create(
 /*Type=*/FuncTy_133,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv", mod); 
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv->setCallingConv(CallingConv::C);
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv->setAlignment(2);
}
AttributeSet func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv->setAttributes(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base = Function::Create(
 /*Type=*/FuncTy_135,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base_PAL);

Function* func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv = mod->getFunction("_ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv");
if (!func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv) {
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv = Function::Create(
 /*Type=*/FuncTy_133,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv", mod); 
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv->setCallingConv(CallingConv::C);
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv->setAlignment(2);
}
AttributeSet func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv->setAttributes(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv_PAL);

Function* func__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base = mod->getFunction("_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base");
if (!func__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base) {
func__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base = Function::Create(
 /*Type=*/FuncTy_92,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base", mod); // (external, no body)
func__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base->setCallingConv(CallingConv::C);
}
AttributeSet func__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::ReadOnly);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base->setAttributes(func__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv = Function::Create(
 /*Type=*/FuncTy_121,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E = Function::Create(
 /*Type=*/FuncTy_179,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base = Function::Create(
 /*Type=*/FuncTy_135,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E = Function::Create(
 /*Type=*/FuncTy_181,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E_PAL);

Function* func__ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_ = mod->getFunction("_ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_");
if (!func__ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_) {
func__ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_ = Function::Create(
 /*Type=*/FuncTy_101,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_", mod); 
func__ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_->setCallingConv(CallingConv::C);
}
AttributeSet func__ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::ZExt);
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::InlineHint);
  B.addAttribute(Attribute::UWTable);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8__PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_->setAttributes(func__ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8__PAL);

Function* func__ZNKSs7compareERKSs = mod->getFunction("_ZNKSs7compareERKSs");
if (!func__ZNKSs7compareERKSs) {
func__ZNKSs7compareERKSs = Function::Create(
 /*Type=*/FuncTy_183,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"_ZNKSs7compareERKSs", mod); // (external, no body)
func__ZNKSs7compareERKSs->setCallingConv(CallingConv::C);
}
AttributeSet func__ZNKSs7compareERKSs_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSs7compareERKSs_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSs7compareERKSs->setAttributes(func__ZNKSs7compareERKSs_PAL);

Function* func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv = mod->getFunction("_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv");
if (!func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv) {
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv = Function::Create(
 /*Type=*/FuncTy_29,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv", mod); 
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv->setCallingConv(CallingConv::C);
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv->setAlignment(2);
}
AttributeSet func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv->setAttributes(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_ = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_ = Function::Create(
 /*Type=*/FuncTy_50,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1__PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_ = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_ = Function::Create(
 /*Type=*/FuncTy_185,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1__PAL);

Function* func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_ = mod->getFunction("_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_");
if (!func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_) {
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_ = Function::Create(
 /*Type=*/FuncTy_50,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_", mod); 
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_->setCallingConv(CallingConv::C);
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_->setAlignment(2);
}
AttributeSet func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_->setAttributes(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1__PAL);

Function* func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_ = mod->getFunction("_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_");
if (!func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_) {
func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_ = Function::Create(
 /*Type=*/FuncTy_55,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_", mod); 
func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_->setCallingConv(CallingConv::C);
func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_->setAlignment(2);
}
AttributeSet func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::ZExt);
   PAS = AttributeSet::get(mod->getContext(), 0U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  B.addAttribute(Attribute::UWTable);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3__PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_->setAttributes(func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3__PAL);

Function* func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv = mod->getFunction("_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv");
if (!func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv) {
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv = Function::Create(
 /*Type=*/FuncTy_53,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv", mod); 
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv->setCallingConv(CallingConv::C);
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv->setAlignment(2);
}
AttributeSet func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv->setAttributes(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv_PAL);

Function* func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E = mod->getFunction("_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E");
if (!func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E) {
func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E = Function::Create(
 /*Type=*/FuncTy_187,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E", mod); 
func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E->setCallingConv(CallingConv::C);
func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E->setAlignment(2);
}
AttributeSet func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E->setAttributes(func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E_PAL);

Function* func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_ = mod->getFunction("_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_");
if (!func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_) {
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_ = Function::Create(
 /*Type=*/FuncTy_185,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_", mod); 
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_->setCallingConv(CallingConv::C);
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_->setAlignment(2);
}
AttributeSet func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_->setAttributes(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1__PAL);

Function* func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv = mod->getFunction("_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv");
if (!func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv) {
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv = Function::Create(
 /*Type=*/FuncTy_121,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv", mod); 
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv->setCallingConv(CallingConv::C);
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv->setAlignment(2);
}
AttributeSet func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv->setAttributes(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv_PAL);

Function* func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv = mod->getFunction("_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv");
if (!func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv) {
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv = Function::Create(
 /*Type=*/FuncTy_121,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv", mod); 
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv->setCallingConv(CallingConv::C);
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv->setAlignment(2);
}
AttributeSet func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv->setAttributes(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base = Function::Create(
 /*Type=*/FuncTy_135,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base = Function::Create(
 /*Type=*/FuncTy_135,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev = Function::Create(
 /*Type=*/FuncTy_29,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev = Function::Create(
 /*Type=*/FuncTy_189,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev_PAL);

Function* func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev = mod->getFunction("_ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev");
if (!func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev) {
func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev = Function::Create(
 /*Type=*/FuncTy_192,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev", mod); 
func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev->setCallingConv(CallingConv::C);
func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev->setAlignment(2);
}
AttributeSet func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev->setAttributes(func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev_PAL);

Function* func_llvm_memset_p0i8_i64 = mod->getFunction("llvm.memset.p0i8.i64");
if (!func_llvm_memset_p0i8_i64) {
func_llvm_memset_p0i8_i64 = Function::Create(
 /*Type=*/FuncTy_194,
 /*Linkage=*/GlobalValue::ExternalLinkage,
 /*Name=*/"llvm.memset.p0i8.i64", mod); // (external, no body)
func_llvm_memset_p0i8_i64->setCallingConv(CallingConv::C);
}
AttributeSet func_llvm_memset_p0i8_i64_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoCapture);
   PAS = AttributeSet::get(mod->getContext(), 1U, B);
  }
 
 Attrs.push_back(PAS);
 {
  AttrBuilder B;
  B.addAttribute(Attribute::NoUnwind);
  PAS = AttributeSet::get(mod->getContext(), ~0U, B);
 }

Attrs.push_back(PAS);
func_llvm_memset_p0i8_i64_PAL = AttributeSet::get(mod->getContext(), Attrs);

}
func_llvm_memset_p0i8_i64->setAttributes(func_llvm_memset_p0i8_i64_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv = Function::Create(
 /*Type=*/FuncTy_189,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv_PAL);

Function* func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev = mod->getFunction("_ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev");
if (!func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev) {
func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev = Function::Create(
 /*Type=*/FuncTy_192,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev", mod); 
func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev->setCallingConv(CallingConv::C);
func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev->setAlignment(2);
}
AttributeSet func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev->setAttributes(func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev_PAL);

Function* func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev = mod->getFunction("_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev");
if (!func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev) {
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev = Function::Create(
 /*Type=*/FuncTy_196,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev", mod); 
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev->setCallingConv(CallingConv::C);
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev->setAlignment(2);
}
AttributeSet func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev->setAttributes(func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev_PAL);

Function* func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev = mod->getFunction("_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev");
if (!func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev) {
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev = Function::Create(
 /*Type=*/FuncTy_196,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev", mod); 
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev->setCallingConv(CallingConv::C);
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev->setAlignment(2);
}
AttributeSet func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev->setAttributes(func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev = Function::Create(
 /*Type=*/FuncTy_29,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E = Function::Create(
 /*Type=*/FuncTy_153,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev = Function::Create(
 /*Type=*/FuncTy_189,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   B.addAttribute(Attribute::InlineHint);
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev_PAL);

Function* func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E = mod->getFunction("_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E");
if (!func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E) {
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E = Function::Create(
 /*Type=*/FuncTy_153,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E", mod); 
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E->setCallingConv(CallingConv::C);
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E->setAlignment(2);
}
AttributeSet func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E_PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E->setAttributes(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E_PAL);

Function* func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_ = mod->getFunction("_ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_");
if (!func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_) {
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_ = Function::Create(
 /*Type=*/FuncTy_198,
 /*Linkage=*/GlobalValue::LinkOnceODRLinkage ,
 /*Name=*/"_ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_", mod); 
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_->setCallingConv(CallingConv::C);
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_->setAlignment(2);
}
AttributeSet func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3__PAL;
{
 SmallVector<AttributeSet, 4> Attrs;
 AttributeSet PAS;
  {
   AttrBuilder B;
   B.addAttribute(Attribute::UWTable);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3__PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_->setAttributes(func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3__PAL);

Function* func__GLOBAL__I_a = mod->getFunction("_GLOBAL__I_a");
if (!func__GLOBAL__I_a) {
func__GLOBAL__I_a = Function::Create(
 /*Type=*/FuncTy_16,
 /*Linkage=*/GlobalValue::InternalLinkage,
 /*Name=*/"_GLOBAL__I_a", mod); 
func__GLOBAL__I_a->setCallingConv(CallingConv::C);
func__GLOBAL__I_a->setSection(".text.startup");
}
AttributeSet func__GLOBAL__I_a_PAL;
func__GLOBAL__I_a->setAttributes(func__GLOBAL__I_a_PAL);

// Global Variable Declarations


GlobalVariable* gvar_struct__ZStL8__ioinit = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_class_std__ios_base__Init,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::InternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"_ZStL8__ioinit");
gvar_struct__ZStL8__ioinit->setAlignment(1);

GlobalVariable* gvar_int8___dso_handle = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/IntegerType::get(mod->getContext(), 8),
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, 
/*Name=*/"__dso_handle");

GlobalVariable* gvar_struct_CountMap = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/StructTy_class_std__map,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"CountMap");
gvar_struct_CountMap->setAlignment(8);

GlobalVariable* gvar_ptr_stderr = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/PointerTy_5,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::ExternalLinkage,
/*Initializer=*/0, 
/*Name=*/"stderr");

GlobalVariable* gvar_array__str = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_9,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str");
gvar_array__str->setAlignment(1);

GlobalVariable* gvar_array__str2 = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_11,
/*isConstant=*/true,
/*Linkage=*/GlobalValue::PrivateLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/".str2");
gvar_array__str2->setAlignment(1);

GlobalVariable* gvar_array_llvm_global_ctors = new GlobalVariable(/*Module=*/*mod, 
/*Type=*/ArrayTy_13,
/*isConstant=*/false,
/*Linkage=*/GlobalValue::AppendingLinkage,
/*Initializer=*/0, // has initializer, specified below
/*Name=*/"llvm.global_ctors");

// Constant Definitions
ConstantAggregateZero* const_struct_199 = ConstantAggregateZero::get(StructTy_class_std__ios_base__Init);
ConstantAggregateZero* const_struct_200 = ConstantAggregateZero::get(StructTy_class_std__map);
Constant *const_array_201 = ConstantDataArray::getString(mod->getContext(), "%-15s %5d\x0A", true);
Constant *const_array_202 = ConstantDataArray::getString(mod->getContext(), "TOTAL", true);
std::vector<Constant*> const_array_203_elems;
std::vector<Constant*> const_struct_204_fields;
ConstantInt* const_int32_205 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("65535"), 10));
const_struct_204_fields.push_back(const_int32_205);
const_struct_204_fields.push_back(func__GLOBAL__I_a);
Constant* const_struct_204 = ConstantStruct::get(StructTy_14, const_struct_204_fields);
const_array_203_elems.push_back(const_struct_204);
Constant* const_array_203 = ConstantArray::get(ArrayTy_13, const_array_203_elems);
Constant* const_ptr_206 = ConstantExpr::getCast(Instruction::BitCast, func__ZNSt8ios_base4InitD1Ev, PointerTy_20);
std::vector<Constant*> const_ptr_207_indices;
ConstantInt* const_int32_208 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("0"), 10));
const_ptr_207_indices.push_back(const_int32_208);
const_ptr_207_indices.push_back(const_int32_208);
Constant* const_ptr_207 = ConstantExpr::getGetElementPtr(gvar_struct__ZStL8__ioinit, const_ptr_207_indices);
Constant* const_ptr_209 = ConstantExpr::getCast(Instruction::BitCast, func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev, PointerTy_20);
std::vector<Constant*> const_ptr_210_indices;
const_ptr_210_indices.push_back(const_int32_208);
const_ptr_210_indices.push_back(const_int32_208);
const_ptr_210_indices.push_back(const_int32_208);
const_ptr_210_indices.push_back(const_int32_208);
const_ptr_210_indices.push_back(const_int32_208);
Constant* const_ptr_210 = ConstantExpr::getGetElementPtr(gvar_struct_CountMap, const_ptr_210_indices);
ConstantInt* const_int32_211 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("1"), 10));
ConstantInt* const_int64_212 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("0"), 10));
Constant* const_ptr_213 = ConstantExpr::getCast(Instruction::BitCast, func___gxx_personality_v0, PointerTy_1);
UndefValue* const_struct_214 = UndefValue::get(StructTy_43);
ConstantPointerNull* const_ptr_215 = ConstantPointerNull::get(PointerTy_1);
ConstantInt* const_int64_216 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("8"), 10));
ConstantInt* const_int32_217 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("8"), 10));
ConstantInt* const_int1_218 = ConstantInt::get(mod->getContext(), APInt(1, StringRef("0"), 10));
std::vector<Constant*> const_ptr_219_indices;
const_ptr_219_indices.push_back(const_int32_208);
const_ptr_219_indices.push_back(const_int32_208);
Constant* const_ptr_219 = ConstantExpr::getGetElementPtr(gvar_array__str, const_ptr_219_indices);
std::vector<Constant*> const_ptr_220_indices;
const_ptr_220_indices.push_back(const_int32_208);
const_ptr_220_indices.push_back(const_int32_208);
Constant* const_ptr_220 = ConstantExpr::getGetElementPtr(gvar_array__str2, const_ptr_220_indices);
ConstantInt* const_int32_221 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("2"), 10));
ConstantPointerNull* const_ptr_222 = ConstantPointerNull::get(PointerTy_2);
ConstantPointerNull* const_ptr_223 = ConstantPointerNull::get(PointerTy_88);
ConstantInt* const_int1_224 = ConstantInt::get(mod->getContext(), APInt(1, StringRef("-1"), 10));
ConstantInt* const_int64_225 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("1"), 10));
ConstantPointerNull* const_ptr_226 = ConstantPointerNull::get(PointerTy_58);
ConstantInt* const_int64_227 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("48"), 10));
ConstantInt* const_int64_228 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("384307168202282325"), 10));
ConstantInt* const_int32_229 = ConstantInt::get(mod->getContext(), APInt(32, StringRef("3"), 10));
ConstantInt* const_int8_230 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("1"), 10));
ConstantInt* const_int8_231 = ConstantInt::get(mod->getContext(), APInt(8, StringRef("0"), 10));
ConstantInt* const_int64_232 = ConstantInt::get(mod->getContext(), APInt(64, StringRef("32"), 10));

// Global Variable Definitions
gvar_struct__ZStL8__ioinit->setInitializer(const_struct_199);
gvar_struct_CountMap->setInitializer(const_struct_200);
gvar_array__str->setInitializer(const_array_201);
gvar_array__str2->setInitializer(const_array_202);
gvar_array_llvm_global_ctors->setInitializer(const_array_203);

// Function Definitions

// Function: __cxx_global_var_init (func___cxx_global_var_init)
{
 
 BasicBlock* label_entry = BasicBlock::Create(mod->getContext(), "entry",func___cxx_global_var_init,0);
 
 // Block entry (label_entry)
 CallInst* void_233 = CallInst::Create(func__ZNSt8ios_base4InitC1Ev, gvar_struct__ZStL8__ioinit, "", label_entry);
 void_233->setCallingConv(CallingConv::C);
 void_233->setTailCall(false);
 AttributeSet void_233_PAL;
 void_233->setAttributes(void_233_PAL);
 
 std::vector<Value*> int32_234_params;
 int32_234_params.push_back(const_ptr_206);
 int32_234_params.push_back(const_ptr_207);
 int32_234_params.push_back(gvar_int8___dso_handle);
 CallInst* int32_234 = CallInst::Create(func___cxa_atexit, int32_234_params, "", label_entry);
 int32_234->setCallingConv(CallingConv::C);
 int32_234->setTailCall(false);
 AttributeSet int32_234_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  int32_234_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_234->setAttributes(int32_234_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry);
 
}

// Function: __cxx_global_var_init1 (func___cxx_global_var_init1)
{
 
 BasicBlock* label_entry_236 = BasicBlock::Create(mod->getContext(), "entry",func___cxx_global_var_init1,0);
 
 // Block entry (label_entry_236)
 CallInst* void_237 = CallInst::Create(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev, gvar_struct_CountMap, "", label_entry_236);
 void_237->setCallingConv(CallingConv::C);
 void_237->setTailCall(false);
 AttributeSet void_237_PAL;
 void_237->setAttributes(void_237_PAL);
 
 std::vector<Value*> int32_238_params;
 int32_238_params.push_back(const_ptr_209);
 int32_238_params.push_back(const_ptr_210);
 int32_238_params.push_back(gvar_int8___dso_handle);
 CallInst* int32_238 = CallInst::Create(func___cxa_atexit, int32_238_params, "", label_entry_236);
 int32_238->setCallingConv(CallingConv::C);
 int32_238->setTailCall(false);
 AttributeSet int32_238_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  int32_238_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int32_238->setAttributes(int32_238_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_236);
 
}

// Function: _ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev (func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev)
{
 Function::arg_iterator args = func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev->arg_begin();
 Value* ptr_this = args++;
 ptr_this->setName("this");
 
 BasicBlock* label_entry_240 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEC2Ev,0);
 
 // Block entry (label_entry_240)
 AllocaInst* ptr_this_addr = new AllocaInst(PointerTy_3, "this.addr", label_entry_240);
 ptr_this_addr->setAlignment(8);
 StoreInst* void_241 = new StoreInst(ptr_this, ptr_this_addr, false, label_entry_240);
 void_241->setAlignment(8);
 LoadInst* ptr_this1 = new LoadInst(ptr_this_addr, "this1", false, label_entry_240);
 std::vector<Value*> ptr__M_t_indices;
 ptr__M_t_indices.push_back(const_int32_208);
 ptr__M_t_indices.push_back(const_int32_208);
 Instruction* ptr__M_t = GetElementPtrInst::Create(ptr_this1, ptr__M_t_indices, "_M_t", label_entry_240);
 CallInst* void_242 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev, ptr__M_t, "", label_entry_240);
 void_242->setCallingConv(CallingConv::C);
 void_242->setTailCall(false);
 AttributeSet void_242_PAL;
 void_242->setAttributes(void_242_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_240);
 
}

// Function: _ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev (func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev)
{
 Function::arg_iterator args = func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev->arg_begin();
 Value* ptr_this_244 = args++;
 ptr_this_244->setName("this");
 
 BasicBlock* label_entry_245 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEED2Ev,0);
 
 // Block entry (label_entry_245)
 AllocaInst* ptr_this_addr_246 = new AllocaInst(PointerTy_3, "this.addr", label_entry_245);
 ptr_this_addr_246->setAlignment(8);
 StoreInst* void_247 = new StoreInst(ptr_this_244, ptr_this_addr_246, false, label_entry_245);
 void_247->setAlignment(8);
 LoadInst* ptr_this1_248 = new LoadInst(ptr_this_addr_246, "this1", false, label_entry_245);
 std::vector<Value*> ptr__M_t_249_indices;
 ptr__M_t_249_indices.push_back(const_int32_208);
 ptr__M_t_249_indices.push_back(const_int32_208);
 Instruction* ptr__M_t_249 = GetElementPtrInst::Create(ptr_this1_248, ptr__M_t_249_indices, "_M_t", label_entry_245);
 CallInst* void_250 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev, ptr__M_t_249, "", label_entry_245);
 void_250->setCallingConv(CallingConv::C);
 void_250->setTailCall(false);
 AttributeSet void_250_PAL;
 void_250->setAttributes(void_250_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_245);
 
}

// Function: _Z5CountPci (func__Z5CountPci)
{
 Function::arg_iterator args = func__Z5CountPci->arg_begin();
 Value* ptr_opType = args++;
 ptr_opType->setName("opType");
 Value* int32_count = args++;
 int32_count->setName("count");
 
 BasicBlock* label_entry_252 = BasicBlock::Create(mod->getContext(), "entry",func__Z5CountPci,0);
 BasicBlock* label_invoke_cont = BasicBlock::Create(mod->getContext(), "invoke.cont",func__Z5CountPci,0);
 BasicBlock* label_invoke_cont2 = BasicBlock::Create(mod->getContext(), "invoke.cont2",func__Z5CountPci,0);
 BasicBlock* label_if_then = BasicBlock::Create(mod->getContext(), "if.then",func__Z5CountPci,0);
 BasicBlock* label_invoke_cont3 = BasicBlock::Create(mod->getContext(), "invoke.cont3",func__Z5CountPci,0);
 BasicBlock* label_lpad = BasicBlock::Create(mod->getContext(), "lpad",func__Z5CountPci,0);
 BasicBlock* label_lpad1 = BasicBlock::Create(mod->getContext(), "lpad1",func__Z5CountPci,0);
 BasicBlock* label_if_else = BasicBlock::Create(mod->getContext(), "if.else",func__Z5CountPci,0);
 BasicBlock* label_invoke_cont5 = BasicBlock::Create(mod->getContext(), "invoke.cont5",func__Z5CountPci,0);
 BasicBlock* label_if_end = BasicBlock::Create(mod->getContext(), "if.end",func__Z5CountPci,0);
 BasicBlock* label_invoke_cont7 = BasicBlock::Create(mod->getContext(), "invoke.cont7",func__Z5CountPci,0);
 BasicBlock* label_eh_resume = BasicBlock::Create(mod->getContext(), "eh.resume",func__Z5CountPci,0);
 BasicBlock* label_terminate_lpad = BasicBlock::Create(mod->getContext(), "terminate.lpad",func__Z5CountPci,0);
 
 // Block entry (label_entry_252)
 AllocaInst* ptr_opType_addr = new AllocaInst(PointerTy_1, "opType.addr", label_entry_252);
 ptr_opType_addr->setAlignment(8);
 AllocaInst* ptr_count_addr = new AllocaInst(IntegerType::get(mod->getContext(), 32), "count.addr", label_entry_252);
 ptr_count_addr->setAlignment(4);
 AllocaInst* ptr_temp = new AllocaInst(StructTy_class_std__basic_string, "temp", label_entry_252);
 ptr_temp->setAlignment(8);
 AllocaInst* ptr_ref_tmp = new AllocaInst(StructTy_class_std__allocator_0, "ref.tmp", label_entry_252);
 ptr_ref_tmp->setAlignment(1);
 AllocaInst* ptr_exn_slot = new AllocaInst(PointerTy_1, "exn.slot", label_entry_252);
 AllocaInst* ptr_ehselector_slot = new AllocaInst(IntegerType::get(mod->getContext(), 32), "ehselector.slot", label_entry_252);
 StoreInst* void_253 = new StoreInst(ptr_opType, ptr_opType_addr, false, label_entry_252);
 void_253->setAlignment(8);
 StoreInst* void_254 = new StoreInst(int32_count, ptr_count_addr, false, label_entry_252);
 void_254->setAlignment(4);
 LoadInst* ptr_255 = new LoadInst(ptr_opType_addr, "", false, label_entry_252);
 ptr_255->setAlignment(8);
 CallInst* void_256 = CallInst::Create(func__ZNSaIcEC1Ev, ptr_ref_tmp, "", label_entry_252);
 void_256->setCallingConv(CallingConv::C);
 void_256->setTailCall(false);
 AttributeSet void_256_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_256_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_256->setAttributes(void_256_PAL);
 
 std::vector<Value*> void_257_params;
 void_257_params.push_back(ptr_temp);
 void_257_params.push_back(ptr_255);
 void_257_params.push_back(ptr_ref_tmp);
 InvokeInst *void_257 = InvokeInst::Create(func__ZNSsC1EPKcRKSaIcE, label_invoke_cont, label_lpad, void_257_params, "", label_entry_252);
 void_257->setCallingConv(CallingConv::C);AttributeSet void_257_PAL;
 void_257->setAttributes(void_257_PAL);
 
 
 // Block invoke.cont (label_invoke_cont)
 CallInst* void_258 = CallInst::Create(func__ZNSaIcED1Ev, ptr_ref_tmp, "", label_invoke_cont);
 void_258->setCallingConv(CallingConv::C);
 void_258->setTailCall(false);
 AttributeSet void_258_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_258_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_258->setAttributes(void_258_PAL);
 
 std::vector<Value*> int64_call_params;
 int64_call_params.push_back(gvar_struct_CountMap);
 int64_call_params.push_back(ptr_temp);
 InvokeInst *int64_call = InvokeInst::Create(func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_, label_invoke_cont2, label_lpad1, int64_call_params, "call", label_invoke_cont);
 int64_call->setCallingConv(CallingConv::C);AttributeSet int64_call_PAL;
 int64_call->setAttributes(int64_call_PAL);
 
 
 // Block invoke.cont2 (label_invoke_cont2)
 ICmpInst* int1_cmp = new ICmpInst(*label_invoke_cont2, ICmpInst::ICMP_EQ, int64_call, const_int64_212, "cmp");
 BranchInst::Create(label_if_then, label_if_else, int1_cmp, label_invoke_cont2);
 
 // Block if.then (label_if_then)
 std::vector<Value*> ptr_call4_params;
 ptr_call4_params.push_back(gvar_struct_CountMap);
 ptr_call4_params.push_back(ptr_temp);
 InvokeInst *ptr_call4 = InvokeInst::Create(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_, label_invoke_cont3, label_lpad1, ptr_call4_params, "call4", label_if_then);
 ptr_call4->setCallingConv(CallingConv::C);AttributeSet ptr_call4_PAL;
 ptr_call4->setAttributes(ptr_call4_PAL);
 
 
 // Block invoke.cont3 (label_invoke_cont3)
 StoreInst* void_260 = new StoreInst(const_int32_211, ptr_call4, false, label_invoke_cont3);
 BranchInst::Create(label_if_end, label_invoke_cont3);
 
 // Block lpad (label_lpad)
 LandingPadInst* struct_262 = LandingPadInst::Create(StructTy_43, const_ptr_213, 0, "", label_lpad);
 struct_262->setCleanup(true);
 std::vector<unsigned> ptr_263_indices;
 ptr_263_indices.push_back(0);
 ExtractValueInst* ptr_263 = ExtractValueInst::Create(struct_262, ptr_263_indices, "", label_lpad);
 StoreInst* void_264 = new StoreInst(ptr_263, ptr_exn_slot, false, label_lpad);
 std::vector<unsigned> int32_265_indices;
 int32_265_indices.push_back(1);
 ExtractValueInst* int32_265 = ExtractValueInst::Create(struct_262, int32_265_indices, "", label_lpad);
 StoreInst* void_266 = new StoreInst(int32_265, ptr_ehselector_slot, false, label_lpad);
 CallInst* void_267 = CallInst::Create(func__ZNSaIcED1Ev, ptr_ref_tmp, "", label_lpad);
 void_267->setCallingConv(CallingConv::C);
 void_267->setTailCall(false);
 AttributeSet void_267_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_267_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_267->setAttributes(void_267_PAL);
 
 BranchInst::Create(label_eh_resume, label_lpad);
 
 // Block lpad1 (label_lpad1)
 LandingPadInst* struct_269 = LandingPadInst::Create(StructTy_43, const_ptr_213, 0, "", label_lpad1);
 struct_269->setCleanup(true);
 std::vector<unsigned> ptr_270_indices;
 ptr_270_indices.push_back(0);
 ExtractValueInst* ptr_270 = ExtractValueInst::Create(struct_269, ptr_270_indices, "", label_lpad1);
 StoreInst* void_271 = new StoreInst(ptr_270, ptr_exn_slot, false, label_lpad1);
 std::vector<unsigned> int32_272_indices;
 int32_272_indices.push_back(1);
 ExtractValueInst* int32_272 = ExtractValueInst::Create(struct_269, int32_272_indices, "", label_lpad1);
 StoreInst* void_273 = new StoreInst(int32_272, ptr_ehselector_slot, false, label_lpad1);
 std::vector<Value*> void_274_params;
 void_274_params.push_back(ptr_temp);
 InvokeInst *void_274 = InvokeInst::Create(func__ZNSsD1Ev, label_invoke_cont7, label_terminate_lpad, void_274_params, "", label_lpad1);
 void_274->setCallingConv(CallingConv::C);AttributeSet void_274_PAL;
 void_274->setAttributes(void_274_PAL);
 
 
 // Block if.else (label_if_else)
 LoadInst* int32_275 = new LoadInst(ptr_count_addr, "", false, label_if_else);
 int32_275->setAlignment(4);
 std::vector<Value*> ptr_call6_params;
 ptr_call6_params.push_back(gvar_struct_CountMap);
 ptr_call6_params.push_back(ptr_temp);
 InvokeInst *ptr_call6 = InvokeInst::Create(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_, label_invoke_cont5, label_lpad1, ptr_call6_params, "call6", label_if_else);
 ptr_call6->setCallingConv(CallingConv::C);AttributeSet ptr_call6_PAL;
 ptr_call6->setAttributes(ptr_call6_PAL);
 
 
 // Block invoke.cont5 (label_invoke_cont5)
 LoadInst* int32_276 = new LoadInst(ptr_call6, "", false, label_invoke_cont5);
 BinaryOperator* int32_add = BinaryOperator::Create(Instruction::Add, int32_276, int32_275, "add", label_invoke_cont5);
 StoreInst* void_277 = new StoreInst(int32_add, ptr_call6, false, label_invoke_cont5);
 BranchInst::Create(label_if_end, label_invoke_cont5);
 
 // Block if.end (label_if_end)
 CallInst* void_279 = CallInst::Create(func__ZNSsD1Ev, ptr_temp, "", label_if_end);
 void_279->setCallingConv(CallingConv::C);
 void_279->setTailCall(false);
 AttributeSet void_279_PAL;
 void_279->setAttributes(void_279_PAL);
 
 ReturnInst::Create(mod->getContext(), label_if_end);
 
 // Block invoke.cont7 (label_invoke_cont7)
 BranchInst::Create(label_eh_resume, label_invoke_cont7);
 
 // Block eh.resume (label_eh_resume)
 LoadInst* ptr_exn = new LoadInst(ptr_exn_slot, "exn", false, label_eh_resume);
 LoadInst* int32_sel = new LoadInst(ptr_ehselector_slot, "sel", false, label_eh_resume);
 std::vector<unsigned> struct_lpad_val_indices;
 struct_lpad_val_indices.push_back(0);
 InsertValueInst* struct_lpad_val = InsertValueInst::Create(const_struct_214, ptr_exn, struct_lpad_val_indices, "lpad.val", label_eh_resume);
 std::vector<unsigned> struct_lpad_val8_indices;
 struct_lpad_val8_indices.push_back(1);
 InsertValueInst* struct_lpad_val8 = InsertValueInst::Create(struct_lpad_val, int32_sel, struct_lpad_val8_indices, "lpad.val8", label_eh_resume);
 ResumeInst::Create(struct_lpad_val8, label_eh_resume);
 
 // Block terminate.lpad (label_terminate_lpad)
 LandingPadInst* struct_283 = LandingPadInst::Create(StructTy_43, const_ptr_213, 1, "", label_terminate_lpad);
 struct_283->setCleanup(false);
 struct_283->addClause(const_ptr_215);
 std::vector<unsigned> ptr_284_indices;
 ptr_284_indices.push_back(0);
 ExtractValueInst* ptr_284 = ExtractValueInst::Create(struct_283, ptr_284_indices, "", label_terminate_lpad);
 CallInst* void_285 = CallInst::Create(func___clang_call_terminate, ptr_284, "", label_terminate_lpad);
 void_285->setCallingConv(CallingConv::C);
 void_285->setTailCall(false);
 AttributeSet void_285_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_285_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_285->setAttributes(void_285_PAL);
 
 new UnreachableInst(mod->getContext(), label_terminate_lpad);
 
}

// Function: _ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_ (func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_)
{
 Function::arg_iterator args = func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_->arg_begin();
 Value* ptr_this_287 = args++;
 ptr_this_287->setName("this");
 Value* ptr___x = args++;
 ptr___x->setName("__x");
 
 BasicBlock* label_entry_288 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5countERS3_,0);
 
 // Block entry (label_entry_288)
 AllocaInst* ptr_this_addr_289 = new AllocaInst(PointerTy_3, "this.addr", label_entry_288);
 ptr_this_addr_289->setAlignment(8);
 AllocaInst* ptr___x_addr = new AllocaInst(PointerTy_33, "__x.addr", label_entry_288);
 ptr___x_addr->setAlignment(8);
 AllocaInst* ptr_coerce = new AllocaInst(StructTy_struct_std___Rb_tree_const_iterator, "coerce", label_entry_288);
 ptr_coerce->setAlignment(8);
 AllocaInst* ptr_ref_tmp_290 = new AllocaInst(StructTy_struct_std___Rb_tree_const_iterator, "ref.tmp", label_entry_288);
 ptr_ref_tmp_290->setAlignment(8);
 StoreInst* void_291 = new StoreInst(ptr_this_287, ptr_this_addr_289, false, label_entry_288);
 void_291->setAlignment(8);
 StoreInst* void_292 = new StoreInst(ptr___x, ptr___x_addr, false, label_entry_288);
 void_292->setAlignment(8);
 LoadInst* ptr_this1_293 = new LoadInst(ptr_this_addr_289, "this1", false, label_entry_288);
 std::vector<Value*> ptr__M_t_294_indices;
 ptr__M_t_294_indices.push_back(const_int32_208);
 ptr__M_t_294_indices.push_back(const_int32_208);
 Instruction* ptr__M_t_294 = GetElementPtrInst::Create(ptr_this1_293, ptr__M_t_294_indices, "_M_t", label_entry_288);
 LoadInst* ptr_295 = new LoadInst(ptr___x_addr, "", false, label_entry_288);
 ptr_295->setAlignment(8);
 std::vector<Value*> ptr_call_params;
 ptr_call_params.push_back(ptr__M_t_294);
 ptr_call_params.push_back(ptr_295);
 CallInst* ptr_call = CallInst::Create(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_, ptr_call_params, "call", label_entry_288);
 ptr_call->setCallingConv(CallingConv::C);
 ptr_call->setTailCall(false);
 AttributeSet ptr_call_PAL;
 ptr_call->setAttributes(ptr_call_PAL);
 
 std::vector<Value*> ptr_coerce_dive_indices;
 ptr_coerce_dive_indices.push_back(const_int32_208);
 ptr_coerce_dive_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive = GetElementPtrInst::Create(ptr_coerce, ptr_coerce_dive_indices, "coerce.dive", label_entry_288);
 StoreInst* void_296 = new StoreInst(ptr_call, ptr_coerce_dive, false, label_entry_288);
 std::vector<Value*> ptr__M_t2_indices;
 ptr__M_t2_indices.push_back(const_int32_208);
 ptr__M_t2_indices.push_back(const_int32_208);
 Instruction* ptr__M_t2 = GetElementPtrInst::Create(ptr_this1_293, ptr__M_t2_indices, "_M_t2", label_entry_288);
 CallInst* ptr_call3 = CallInst::Create(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv, ptr__M_t2, "call3", label_entry_288);
 ptr_call3->setCallingConv(CallingConv::C);
 ptr_call3->setTailCall(false);
 AttributeSet ptr_call3_PAL;
 ptr_call3->setAttributes(ptr_call3_PAL);
 
 std::vector<Value*> ptr_coerce_dive4_indices;
 ptr_coerce_dive4_indices.push_back(const_int32_208);
 ptr_coerce_dive4_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive4 = GetElementPtrInst::Create(ptr_ref_tmp_290, ptr_coerce_dive4_indices, "coerce.dive4", label_entry_288);
 StoreInst* void_297 = new StoreInst(ptr_call3, ptr_coerce_dive4, false, label_entry_288);
 std::vector<Value*> int1_call5_params;
 int1_call5_params.push_back(ptr_coerce);
 int1_call5_params.push_back(ptr_ref_tmp_290);
 CallInst* int1_call5 = CallInst::Create(func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_, int1_call5_params, "call5", label_entry_288);
 int1_call5->setCallingConv(CallingConv::C);
 int1_call5->setTailCall(false);
 AttributeSet int1_call5_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call5_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call5->setAttributes(int1_call5_PAL);
 
 SelectInst* int32_cond = SelectInst::Create(int1_call5, const_int32_208, const_int32_211, "cond", label_entry_288);
 CastInst* int64_conv = new SExtInst(int32_cond, IntegerType::get(mod->getContext(), 64), "conv", label_entry_288);
 ReturnInst::Create(mod->getContext(), int64_conv, label_entry_288);
 
}

// Function: _ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_ (func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_)
{
 Function::arg_iterator args = func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_->arg_begin();
 Value* ptr_this_299 = args++;
 ptr_this_299->setName("this");
 Value* ptr___k = args++;
 ptr___k->setName("__k");
 
 BasicBlock* label_entry_300 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_,0);
 BasicBlock* label_lor_lhs_false = BasicBlock::Create(mod->getContext(), "lor.lhs.false",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_,0);
 BasicBlock* label_if_then_301 = BasicBlock::Create(mod->getContext(), "if.then",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_,0);
 BasicBlock* label_invoke_cont_302 = BasicBlock::Create(mod->getContext(), "invoke.cont",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_,0);
 BasicBlock* label_lpad_303 = BasicBlock::Create(mod->getContext(), "lpad",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_,0);
 BasicBlock* label_invoke_cont13 = BasicBlock::Create(mod->getContext(), "invoke.cont13",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_,0);
 BasicBlock* label_if_end_304 = BasicBlock::Create(mod->getContext(), "if.end",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_,0);
 BasicBlock* label_eh_resume_305 = BasicBlock::Create(mod->getContext(), "eh.resume",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_,0);
 BasicBlock* label_terminate_lpad_306 = BasicBlock::Create(mod->getContext(), "terminate.lpad",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEEixERS3_,0);
 
 // Block entry (label_entry_300)
 AllocaInst* ptr_this_addr_307 = new AllocaInst(PointerTy_3, "this.addr", label_entry_300);
 ptr_this_addr_307->setAlignment(8);
 AllocaInst* ptr___k_addr = new AllocaInst(PointerTy_33, "__k.addr", label_entry_300);
 ptr___k_addr->setAlignment(8);
 AllocaInst* ptr___i = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "__i", label_entry_300);
 ptr___i->setAlignment(8);
 AllocaInst* ptr_ref_tmp_308 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "ref.tmp", label_entry_300);
 ptr_ref_tmp_308->setAlignment(8);
 AllocaInst* ptr_undef_agg_tmp = new AllocaInst(StructTy_struct_std__less, "undef.agg.tmp", label_entry_300);
 ptr_undef_agg_tmp->setAlignment(1);
 AllocaInst* ptr_ref_tmp7 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "ref.tmp7", label_entry_300);
 ptr_ref_tmp7->setAlignment(8);
 AllocaInst* ptr_agg_tmp = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "agg.tmp", label_entry_300);
 ptr_agg_tmp->setAlignment(8);
 AllocaInst* ptr_ref_tmp8 = new AllocaInst(StructTy_struct_std__pair, "ref.tmp8", label_entry_300);
 ptr_ref_tmp8->setAlignment(8);
 AllocaInst* ptr_ref_tmp9 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "ref.tmp9", label_entry_300);
 ptr_ref_tmp9->setAlignment(4);
 AllocaInst* ptr_exn_slot_309 = new AllocaInst(PointerTy_1, "exn.slot", label_entry_300);
 AllocaInst* ptr_ehselector_slot_310 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "ehselector.slot", label_entry_300);
 StoreInst* void_311 = new StoreInst(ptr_this_299, ptr_this_addr_307, false, label_entry_300);
 void_311->setAlignment(8);
 StoreInst* void_312 = new StoreInst(ptr___k, ptr___k_addr, false, label_entry_300);
 void_312->setAlignment(8);
 LoadInst* ptr_this1_313 = new LoadInst(ptr_this_addr_307, "this1", false, label_entry_300);
 LoadInst* ptr_314 = new LoadInst(ptr___k_addr, "", false, label_entry_300);
 ptr_314->setAlignment(8);
 std::vector<Value*> ptr_call_315_params;
 ptr_call_315_params.push_back(ptr_this1_313);
 ptr_call_315_params.push_back(ptr_314);
 CallInst* ptr_call_315 = CallInst::Create(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_, ptr_call_315_params, "call", label_entry_300);
 ptr_call_315->setCallingConv(CallingConv::C);
 ptr_call_315->setTailCall(false);
 AttributeSet ptr_call_315_PAL;
 ptr_call_315->setAttributes(ptr_call_315_PAL);
 
 std::vector<Value*> ptr_coerce_dive_316_indices;
 ptr_coerce_dive_316_indices.push_back(const_int32_208);
 ptr_coerce_dive_316_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_316 = GetElementPtrInst::Create(ptr___i, ptr_coerce_dive_316_indices, "coerce.dive", label_entry_300);
 StoreInst* void_317 = new StoreInst(ptr_call_315, ptr_coerce_dive_316, false, label_entry_300);
 CallInst* ptr_call2 = CallInst::Create(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv, ptr_this1_313, "call2", label_entry_300);
 ptr_call2->setCallingConv(CallingConv::C);
 ptr_call2->setTailCall(false);
 AttributeSet ptr_call2_PAL;
 ptr_call2->setAttributes(ptr_call2_PAL);
 
 std::vector<Value*> ptr_coerce_dive3_indices;
 ptr_coerce_dive3_indices.push_back(const_int32_208);
 ptr_coerce_dive3_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive3 = GetElementPtrInst::Create(ptr_ref_tmp_308, ptr_coerce_dive3_indices, "coerce.dive3", label_entry_300);
 StoreInst* void_318 = new StoreInst(ptr_call2, ptr_coerce_dive3, false, label_entry_300);
 std::vector<Value*> int1_call4_params;
 int1_call4_params.push_back(ptr___i);
 int1_call4_params.push_back(ptr_ref_tmp_308);
 CallInst* int1_call4 = CallInst::Create(func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_, int1_call4_params, "call4", label_entry_300);
 int1_call4->setCallingConv(CallingConv::C);
 int1_call4->setTailCall(false);
 AttributeSet int1_call4_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call4_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call4->setAttributes(int1_call4_PAL);
 
 BranchInst::Create(label_if_then_301, label_lor_lhs_false, int1_call4, label_entry_300);
 
 // Block lor.lhs.false (label_lor_lhs_false)
 CallInst* void_320 = CallInst::Create(func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv, ptr_this1_313, "", label_lor_lhs_false);
 void_320->setCallingConv(CallingConv::C);
 void_320->setTailCall(false);
 AttributeSet void_320_PAL;
 void_320->setAttributes(void_320_PAL);
 
 LoadInst* ptr_321 = new LoadInst(ptr___k_addr, "", false, label_lor_lhs_false);
 ptr_321->setAlignment(8);
 CallInst* ptr_call5 = CallInst::Create(func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv, ptr___i, "call5", label_lor_lhs_false);
 ptr_call5->setCallingConv(CallingConv::C);
 ptr_call5->setTailCall(false);
 AttributeSet ptr_call5_PAL;
 ptr_call5->setAttributes(ptr_call5_PAL);
 
 std::vector<Value*> ptr_first_indices;
 ptr_first_indices.push_back(const_int32_208);
 ptr_first_indices.push_back(const_int32_208);
 Instruction* ptr_first = GetElementPtrInst::Create(ptr_call5, ptr_first_indices, "first", label_lor_lhs_false);
 std::vector<Value*> int1_call6_params;
 int1_call6_params.push_back(ptr_undef_agg_tmp);
 int1_call6_params.push_back(ptr_321);
 int1_call6_params.push_back(ptr_first);
 CallInst* int1_call6 = CallInst::Create(func__ZNKSt4lessISsEclERKSsS2_, int1_call6_params, "call6", label_lor_lhs_false);
 int1_call6->setCallingConv(CallingConv::C);
 int1_call6->setTailCall(false);
 AttributeSet int1_call6_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call6_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call6->setAttributes(int1_call6_PAL);
 
 BranchInst::Create(label_if_then_301, label_if_end_304, int1_call6, label_lor_lhs_false);
 
 // Block if.then (label_if_then_301)
 CastInst* ptr_323 = new BitCastInst(ptr_agg_tmp, PointerTy_1, "", label_if_then_301);
 CastInst* ptr_324 = new BitCastInst(ptr___i, PointerTy_1, "", label_if_then_301);
 std::vector<Value*> void_325_params;
 void_325_params.push_back(ptr_323);
 void_325_params.push_back(ptr_324);
 void_325_params.push_back(const_int64_216);
 void_325_params.push_back(const_int32_217);
 void_325_params.push_back(const_int1_218);
 CallInst* void_325 = CallInst::Create(func_llvm_memcpy_p0i8_p0i8_i64, void_325_params, "", label_if_then_301);
 void_325->setCallingConv(CallingConv::C);
 void_325->setTailCall(false);
 AttributeSet void_325_PAL;
 void_325->setAttributes(void_325_PAL);
 
 LoadInst* ptr_326 = new LoadInst(ptr___k_addr, "", false, label_if_then_301);
 ptr_326->setAlignment(8);
 StoreInst* void_327 = new StoreInst(const_int32_208, ptr_ref_tmp9, false, label_if_then_301);
 std::vector<Value*> void_328_params;
 void_328_params.push_back(ptr_ref_tmp8);
 void_328_params.push_back(ptr_326);
 void_328_params.push_back(ptr_ref_tmp9);
 CallInst* void_328 = CallInst::Create(func__ZNSt4pairIKSsiEC2ERS0_RKi, void_328_params, "", label_if_then_301);
 void_328->setCallingConv(CallingConv::C);
 void_328->setTailCall(false);
 AttributeSet void_328_PAL;
 void_328->setAttributes(void_328_PAL);
 
 std::vector<Value*> ptr_coerce_dive10_indices;
 ptr_coerce_dive10_indices.push_back(const_int32_208);
 ptr_coerce_dive10_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive10 = GetElementPtrInst::Create(ptr_agg_tmp, ptr_coerce_dive10_indices, "coerce.dive10", label_if_then_301);
 LoadInst* ptr_329 = new LoadInst(ptr_coerce_dive10, "", false, label_if_then_301);
 std::vector<Value*> ptr_call11_params;
 ptr_call11_params.push_back(ptr_this1_313);
 ptr_call11_params.push_back(ptr_329);
 ptr_call11_params.push_back(ptr_ref_tmp8);
 InvokeInst *ptr_call11 = InvokeInst::Create(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_, label_invoke_cont_302, label_lpad_303, ptr_call11_params, "call11", label_if_then_301);
 ptr_call11->setCallingConv(CallingConv::C);AttributeSet ptr_call11_PAL;
 ptr_call11->setAttributes(ptr_call11_PAL);
 
 
 // Block invoke.cont (label_invoke_cont_302)
 std::vector<Value*> ptr_coerce_dive12_indices;
 ptr_coerce_dive12_indices.push_back(const_int32_208);
 ptr_coerce_dive12_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive12 = GetElementPtrInst::Create(ptr_ref_tmp7, ptr_coerce_dive12_indices, "coerce.dive12", label_invoke_cont_302);
 StoreInst* void_330 = new StoreInst(ptr_call11, ptr_coerce_dive12, false, label_invoke_cont_302);
 CastInst* ptr_331 = new BitCastInst(ptr___i, PointerTy_1, "", label_invoke_cont_302);
 CastInst* ptr_332 = new BitCastInst(ptr_ref_tmp7, PointerTy_1, "", label_invoke_cont_302);
 std::vector<Value*> void_333_params;
 void_333_params.push_back(ptr_331);
 void_333_params.push_back(ptr_332);
 void_333_params.push_back(const_int64_216);
 void_333_params.push_back(const_int32_217);
 void_333_params.push_back(const_int1_218);
 CallInst* void_333 = CallInst::Create(func_llvm_memcpy_p0i8_p0i8_i64, void_333_params, "", label_invoke_cont_302);
 void_333->setCallingConv(CallingConv::C);
 void_333->setTailCall(false);
 AttributeSet void_333_PAL;
 void_333->setAttributes(void_333_PAL);
 
 CallInst* void_334 = CallInst::Create(func__ZNSt4pairIKSsiED2Ev, ptr_ref_tmp8, "", label_invoke_cont_302);
 void_334->setCallingConv(CallingConv::C);
 void_334->setTailCall(false);
 AttributeSet void_334_PAL;
 void_334->setAttributes(void_334_PAL);
 
 BranchInst::Create(label_if_end_304, label_invoke_cont_302);
 
 // Block lpad (label_lpad_303)
 LandingPadInst* struct_336 = LandingPadInst::Create(StructTy_43, const_ptr_213, 0, "", label_lpad_303);
 struct_336->setCleanup(true);
 std::vector<unsigned> ptr_337_indices;
 ptr_337_indices.push_back(0);
 ExtractValueInst* ptr_337 = ExtractValueInst::Create(struct_336, ptr_337_indices, "", label_lpad_303);
 StoreInst* void_338 = new StoreInst(ptr_337, ptr_exn_slot_309, false, label_lpad_303);
 std::vector<unsigned> int32_339_indices;
 int32_339_indices.push_back(1);
 ExtractValueInst* int32_339 = ExtractValueInst::Create(struct_336, int32_339_indices, "", label_lpad_303);
 StoreInst* void_340 = new StoreInst(int32_339, ptr_ehselector_slot_310, false, label_lpad_303);
 std::vector<Value*> void_341_params;
 void_341_params.push_back(ptr_ref_tmp8);
 InvokeInst *void_341 = InvokeInst::Create(func__ZNSt4pairIKSsiED2Ev, label_invoke_cont13, label_terminate_lpad_306, void_341_params, "", label_lpad_303);
 void_341->setCallingConv(CallingConv::C);AttributeSet void_341_PAL;
 void_341->setAttributes(void_341_PAL);
 
 
 // Block invoke.cont13 (label_invoke_cont13)
 BranchInst::Create(label_eh_resume_305, label_invoke_cont13);
 
 // Block if.end (label_if_end_304)
 CallInst* ptr_call14 = CallInst::Create(func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv, ptr___i, "call14", label_if_end_304);
 ptr_call14->setCallingConv(CallingConv::C);
 ptr_call14->setTailCall(false);
 AttributeSet ptr_call14_PAL;
 ptr_call14->setAttributes(ptr_call14_PAL);
 
 std::vector<Value*> ptr_second_indices;
 ptr_second_indices.push_back(const_int32_208);
 ptr_second_indices.push_back(const_int32_211);
 Instruction* ptr_second = GetElementPtrInst::Create(ptr_call14, ptr_second_indices, "second", label_if_end_304);
 ReturnInst::Create(mod->getContext(), ptr_second, label_if_end_304);
 
 // Block eh.resume (label_eh_resume_305)
 LoadInst* ptr_exn_344 = new LoadInst(ptr_exn_slot_309, "exn", false, label_eh_resume_305);
 LoadInst* int32_sel_345 = new LoadInst(ptr_ehselector_slot_310, "sel", false, label_eh_resume_305);
 std::vector<unsigned> struct_lpad_val_346_indices;
 struct_lpad_val_346_indices.push_back(0);
 InsertValueInst* struct_lpad_val_346 = InsertValueInst::Create(const_struct_214, ptr_exn_344, struct_lpad_val_346_indices, "lpad.val", label_eh_resume_305);
 std::vector<unsigned> struct_lpad_val15_indices;
 struct_lpad_val15_indices.push_back(1);
 InsertValueInst* struct_lpad_val15 = InsertValueInst::Create(struct_lpad_val_346, int32_sel_345, struct_lpad_val15_indices, "lpad.val15", label_eh_resume_305);
 ResumeInst::Create(struct_lpad_val15, label_eh_resume_305);
 
 // Block terminate.lpad (label_terminate_lpad_306)
 LandingPadInst* struct_348 = LandingPadInst::Create(StructTy_43, const_ptr_213, 1, "", label_terminate_lpad_306);
 struct_348->setCleanup(false);
 struct_348->addClause(const_ptr_215);
 std::vector<unsigned> ptr_349_indices;
 ptr_349_indices.push_back(0);
 ExtractValueInst* ptr_349 = ExtractValueInst::Create(struct_348, ptr_349_indices, "", label_terminate_lpad_306);
 CallInst* void_350 = CallInst::Create(func___clang_call_terminate, ptr_349, "", label_terminate_lpad_306);
 void_350->setCallingConv(CallingConv::C);
 void_350->setTailCall(false);
 AttributeSet void_350_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_350_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_350->setAttributes(void_350_PAL);
 
 new UnreachableInst(mod->getContext(), label_terminate_lpad_306);
 
}

// Function: __clang_call_terminate (func___clang_call_terminate)
{
 Function::arg_iterator args = func___clang_call_terminate->arg_begin();
 Value* ptr_352 = args++;
 
 BasicBlock* label_353 = BasicBlock::Create(mod->getContext(), "",func___clang_call_terminate,0);
 
 // Block  (label_353)
 CallInst* ptr_354 = CallInst::Create(func___cxa_begin_catch, ptr_352, "", label_353);
 ptr_354->setCallingConv(CallingConv::C);
 ptr_354->setTailCall(false);
 AttributeSet ptr_354_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  ptr_354_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 ptr_354->setAttributes(ptr_354_PAL);
 
 CallInst* void_355 = CallInst::Create(func__ZSt9terminatev, "", label_353);
 void_355->setCallingConv(CallingConv::C);
 void_355->setTailCall(false);
 AttributeSet void_355_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_355_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_355->setAttributes(void_355_PAL);
 
 new UnreachableInst(mod->getContext(), label_353);
 
}

// Function: _Z7printDIv (func__Z7printDIv)
{
 
 BasicBlock* label_entry_357 = BasicBlock::Create(mod->getContext(), "entry",func__Z7printDIv,0);
 BasicBlock* label_for_cond = BasicBlock::Create(mod->getContext(), "for.cond",func__Z7printDIv,0);
 BasicBlock* label_for_body = BasicBlock::Create(mod->getContext(), "for.body",func__Z7printDIv,0);
 BasicBlock* label_invoke_cont_358 = BasicBlock::Create(mod->getContext(), "invoke.cont",func__Z7printDIv,0);
 BasicBlock* label_invoke_cont6 = BasicBlock::Create(mod->getContext(), "invoke.cont6",func__Z7printDIv,0);
 BasicBlock* label_invoke_cont8 = BasicBlock::Create(mod->getContext(), "invoke.cont8",func__Z7printDIv,0);
 BasicBlock* label_for_inc = BasicBlock::Create(mod->getContext(), "for.inc",func__Z7printDIv,0);
 BasicBlock* label_lpad_359 = BasicBlock::Create(mod->getContext(), "lpad",func__Z7printDIv,0);
 BasicBlock* label_invoke_cont10 = BasicBlock::Create(mod->getContext(), "invoke.cont10",func__Z7printDIv,0);
 BasicBlock* label_for_end = BasicBlock::Create(mod->getContext(), "for.end",func__Z7printDIv,0);
 BasicBlock* label_eh_resume_360 = BasicBlock::Create(mod->getContext(), "eh.resume",func__Z7printDIv,0);
 BasicBlock* label_terminate_lpad_361 = BasicBlock::Create(mod->getContext(), "terminate.lpad",func__Z7printDIv,0);
 
 // Block entry (label_entry_357)
 AllocaInst* ptr_total = new AllocaInst(IntegerType::get(mod->getContext(), 32), "total", label_entry_357);
 ptr_total->setAlignment(4);
 AllocaInst* ptr_it = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "it", label_entry_357);
 ptr_it->setAlignment(8);
 AllocaInst* ptr_ref_tmp_362 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "ref.tmp", label_entry_357);
 ptr_ref_tmp_362->setAlignment(8);
 AllocaInst* ptr_opType_363 = new AllocaInst(StructTy_class_std__basic_string, "opType", label_entry_357);
 ptr_opType_363->setAlignment(8);
 AllocaInst* ptr_count = new AllocaInst(IntegerType::get(mod->getContext(), 32), "count", label_entry_357);
 ptr_count->setAlignment(4);
 AllocaInst* ptr_exn_slot_364 = new AllocaInst(PointerTy_1, "exn.slot", label_entry_357);
 AllocaInst* ptr_ehselector_slot_365 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "ehselector.slot", label_entry_357);
 AllocaInst* ptr_coerce_366 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "coerce", label_entry_357);
 ptr_coerce_366->setAlignment(8);
 StoreInst* void_367 = new StoreInst(const_int32_208, ptr_total, false, label_entry_357);
 void_367->setAlignment(4);
 CallInst* ptr_call_368 = CallInst::Create(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv, gvar_struct_CountMap, "call", label_entry_357);
 ptr_call_368->setCallingConv(CallingConv::C);
 ptr_call_368->setTailCall(false);
 AttributeSet ptr_call_368_PAL;
 ptr_call_368->setAttributes(ptr_call_368_PAL);
 
 std::vector<Value*> ptr_coerce_dive_369_indices;
 ptr_coerce_dive_369_indices.push_back(const_int32_208);
 ptr_coerce_dive_369_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_369 = GetElementPtrInst::Create(ptr_it, ptr_coerce_dive_369_indices, "coerce.dive", label_entry_357);
 StoreInst* void_370 = new StoreInst(ptr_call_368, ptr_coerce_dive_369, false, label_entry_357);
 BranchInst::Create(label_for_cond, label_entry_357);
 
 // Block for.cond (label_for_cond)
 CallInst* ptr_call1 = CallInst::Create(func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv, gvar_struct_CountMap, "call1", label_for_cond);
 ptr_call1->setCallingConv(CallingConv::C);
 ptr_call1->setTailCall(false);
 AttributeSet ptr_call1_PAL;
 ptr_call1->setAttributes(ptr_call1_PAL);
 
 std::vector<Value*> ptr_coerce_dive2_indices;
 ptr_coerce_dive2_indices.push_back(const_int32_208);
 ptr_coerce_dive2_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive2 = GetElementPtrInst::Create(ptr_ref_tmp_362, ptr_coerce_dive2_indices, "coerce.dive2", label_for_cond);
 StoreInst* void_372 = new StoreInst(ptr_call1, ptr_coerce_dive2, false, label_for_cond);
 std::vector<Value*> int1_call3_params;
 int1_call3_params.push_back(ptr_it);
 int1_call3_params.push_back(ptr_ref_tmp_362);
 CallInst* int1_call3 = CallInst::Create(func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_, int1_call3_params, "call3", label_for_cond);
 int1_call3->setCallingConv(CallingConv::C);
 int1_call3->setTailCall(false);
 AttributeSet int1_call3_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call3_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call3->setAttributes(int1_call3_PAL);
 
 BranchInst::Create(label_for_body, label_for_end, int1_call3, label_for_cond);
 
 // Block for.body (label_for_body)
 CallInst* ptr_call4_374 = CallInst::Create(func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv, ptr_it, "call4", label_for_body);
 ptr_call4_374->setCallingConv(CallingConv::C);
 ptr_call4_374->setTailCall(false);
 AttributeSet ptr_call4_374_PAL;
 ptr_call4_374->setAttributes(ptr_call4_374_PAL);
 
 std::vector<Value*> ptr_first_375_indices;
 ptr_first_375_indices.push_back(const_int32_208);
 ptr_first_375_indices.push_back(const_int32_208);
 Instruction* ptr_first_375 = GetElementPtrInst::Create(ptr_call4_374, ptr_first_375_indices, "first", label_for_body);
 std::vector<Value*> void_376_params;
 void_376_params.push_back(ptr_opType_363);
 void_376_params.push_back(ptr_first_375);
 CallInst* void_376 = CallInst::Create(func__ZNSsC1ERKSs, void_376_params, "", label_for_body);
 void_376->setCallingConv(CallingConv::C);
 void_376->setTailCall(false);
 AttributeSet void_376_PAL;
 void_376->setAttributes(void_376_PAL);
 
 std::vector<Value*> ptr_call5_377_params;
 ptr_call5_377_params.push_back(ptr_it);
 InvokeInst *ptr_call5_377 = InvokeInst::Create(func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv, label_invoke_cont_358, label_lpad_359, ptr_call5_377_params, "call5", label_for_body);
 ptr_call5_377->setCallingConv(CallingConv::C);AttributeSet ptr_call5_377_PAL;
 ptr_call5_377->setAttributes(ptr_call5_377_PAL);
 
 
 // Block invoke.cont (label_invoke_cont_358)
 std::vector<Value*> ptr_second_378_indices;
 ptr_second_378_indices.push_back(const_int32_208);
 ptr_second_378_indices.push_back(const_int32_211);
 Instruction* ptr_second_378 = GetElementPtrInst::Create(ptr_call5_377, ptr_second_378_indices, "second", label_invoke_cont_358);
 LoadInst* int32_379 = new LoadInst(ptr_second_378, "", false, label_invoke_cont_358);
 int32_379->setAlignment(4);
 StoreInst* void_380 = new StoreInst(int32_379, ptr_count, false, label_invoke_cont_358);
 void_380->setAlignment(4);
 LoadInst* int32_381 = new LoadInst(ptr_count, "", false, label_invoke_cont_358);
 int32_381->setAlignment(4);
 LoadInst* int32_382 = new LoadInst(ptr_total, "", false, label_invoke_cont_358);
 int32_382->setAlignment(4);
 BinaryOperator* int32_add_383 = BinaryOperator::Create(Instruction::Add, int32_382, int32_381, "add", label_invoke_cont_358);
 StoreInst* void_384 = new StoreInst(int32_add_383, ptr_total, false, label_invoke_cont_358);
 void_384->setAlignment(4);
 LoadInst* ptr_385 = new LoadInst(gvar_ptr_stderr, "", false, label_invoke_cont_358);
 ptr_385->setAlignment(8);
 std::vector<Value*> ptr_call7_params;
 ptr_call7_params.push_back(ptr_opType_363);
 InvokeInst *ptr_call7 = InvokeInst::Create(func__ZNKSs5c_strEv, label_invoke_cont6, label_lpad_359, ptr_call7_params, "call7", label_invoke_cont_358);
 ptr_call7->setCallingConv(CallingConv::C);AttributeSet ptr_call7_PAL;
 ptr_call7->setAttributes(ptr_call7_PAL);
 
 
 // Block invoke.cont6 (label_invoke_cont6)
 LoadInst* int32_386 = new LoadInst(ptr_count, "", false, label_invoke_cont6);
 int32_386->setAlignment(4);
 std::vector<Value*> int32_call9_params;
 int32_call9_params.push_back(ptr_385);
 int32_call9_params.push_back(const_ptr_219);
 int32_call9_params.push_back(ptr_call7);
 int32_call9_params.push_back(int32_386);
 InvokeInst *int32_call9 = InvokeInst::Create(func_fprintf, label_invoke_cont8, label_lpad_359, int32_call9_params, "call9", label_invoke_cont6);
 int32_call9->setCallingConv(CallingConv::C);AttributeSet int32_call9_PAL;
 int32_call9->setAttributes(int32_call9_PAL);
 
 
 // Block invoke.cont8 (label_invoke_cont8)
 CallInst* void_387 = CallInst::Create(func__ZNSsD1Ev, ptr_opType_363, "", label_invoke_cont8);
 void_387->setCallingConv(CallingConv::C);
 void_387->setTailCall(false);
 AttributeSet void_387_PAL;
 void_387->setAttributes(void_387_PAL);
 
 BranchInst::Create(label_for_inc, label_invoke_cont8);
 
 // Block for.inc (label_for_inc)
 std::vector<Value*> ptr_call11_389_params;
 ptr_call11_389_params.push_back(ptr_it);
 ptr_call11_389_params.push_back(const_int32_208);
 CallInst* ptr_call11_389 = CallInst::Create(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi, ptr_call11_389_params, "call11", label_for_inc);
 ptr_call11_389->setCallingConv(CallingConv::C);
 ptr_call11_389->setTailCall(false);
 AttributeSet ptr_call11_389_PAL;
 ptr_call11_389->setAttributes(ptr_call11_389_PAL);
 
 std::vector<Value*> ptr_coerce_dive12_390_indices;
 ptr_coerce_dive12_390_indices.push_back(const_int32_208);
 ptr_coerce_dive12_390_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive12_390 = GetElementPtrInst::Create(ptr_coerce_366, ptr_coerce_dive12_390_indices, "coerce.dive12", label_for_inc);
 StoreInst* void_391 = new StoreInst(ptr_call11_389, ptr_coerce_dive12_390, false, label_for_inc);
 BranchInst::Create(label_for_cond, label_for_inc);
 
 // Block lpad (label_lpad_359)
 LandingPadInst* struct_393 = LandingPadInst::Create(StructTy_43, const_ptr_213, 0, "", label_lpad_359);
 struct_393->setCleanup(true);
 std::vector<unsigned> ptr_394_indices;
 ptr_394_indices.push_back(0);
 ExtractValueInst* ptr_394 = ExtractValueInst::Create(struct_393, ptr_394_indices, "", label_lpad_359);
 StoreInst* void_395 = new StoreInst(ptr_394, ptr_exn_slot_364, false, label_lpad_359);
 std::vector<unsigned> int32_396_indices;
 int32_396_indices.push_back(1);
 ExtractValueInst* int32_396 = ExtractValueInst::Create(struct_393, int32_396_indices, "", label_lpad_359);
 StoreInst* void_397 = new StoreInst(int32_396, ptr_ehselector_slot_365, false, label_lpad_359);
 std::vector<Value*> void_398_params;
 void_398_params.push_back(ptr_opType_363);
 InvokeInst *void_398 = InvokeInst::Create(func__ZNSsD1Ev, label_invoke_cont10, label_terminate_lpad_361, void_398_params, "", label_lpad_359);
 void_398->setCallingConv(CallingConv::C);AttributeSet void_398_PAL;
 void_398->setAttributes(void_398_PAL);
 
 
 // Block invoke.cont10 (label_invoke_cont10)
 BranchInst::Create(label_eh_resume_360, label_invoke_cont10);
 
 // Block for.end (label_for_end)
 LoadInst* ptr_400 = new LoadInst(gvar_ptr_stderr, "", false, label_for_end);
 ptr_400->setAlignment(8);
 LoadInst* int32_401 = new LoadInst(ptr_total, "", false, label_for_end);
 int32_401->setAlignment(4);
 std::vector<Value*> int32_call13_params;
 int32_call13_params.push_back(ptr_400);
 int32_call13_params.push_back(const_ptr_219);
 int32_call13_params.push_back(const_ptr_220);
 int32_call13_params.push_back(int32_401);
 CallInst* int32_call13 = CallInst::Create(func_fprintf, int32_call13_params, "call13", label_for_end);
 int32_call13->setCallingConv(CallingConv::C);
 int32_call13->setTailCall(false);
 AttributeSet int32_call13_PAL;
 int32_call13->setAttributes(int32_call13_PAL);
 
 ReturnInst::Create(mod->getContext(), label_for_end);
 
 // Block eh.resume (label_eh_resume_360)
 LoadInst* ptr_exn_403 = new LoadInst(ptr_exn_slot_364, "exn", false, label_eh_resume_360);
 LoadInst* int32_sel_404 = new LoadInst(ptr_ehselector_slot_365, "sel", false, label_eh_resume_360);
 std::vector<unsigned> struct_lpad_val_405_indices;
 struct_lpad_val_405_indices.push_back(0);
 InsertValueInst* struct_lpad_val_405 = InsertValueInst::Create(const_struct_214, ptr_exn_403, struct_lpad_val_405_indices, "lpad.val", label_eh_resume_360);
 std::vector<unsigned> struct_lpad_val14_indices;
 struct_lpad_val14_indices.push_back(1);
 InsertValueInst* struct_lpad_val14 = InsertValueInst::Create(struct_lpad_val_405, int32_sel_404, struct_lpad_val14_indices, "lpad.val14", label_eh_resume_360);
 ResumeInst::Create(struct_lpad_val14, label_eh_resume_360);
 
 // Block terminate.lpad (label_terminate_lpad_361)
 LandingPadInst* struct_407 = LandingPadInst::Create(StructTy_43, const_ptr_213, 1, "", label_terminate_lpad_361);
 struct_407->setCleanup(false);
 struct_407->addClause(const_ptr_215);
 std::vector<unsigned> ptr_408_indices;
 ptr_408_indices.push_back(0);
 ExtractValueInst* ptr_408 = ExtractValueInst::Create(struct_407, ptr_408_indices, "", label_terminate_lpad_361);
 CallInst* void_409 = CallInst::Create(func___clang_call_terminate, ptr_408, "", label_terminate_lpad_361);
 void_409->setCallingConv(CallingConv::C);
 void_409->setTailCall(false);
 AttributeSet void_409_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_409_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_409->setAttributes(void_409_PAL);
 
 new UnreachableInst(mod->getContext(), label_terminate_lpad_361);
 
}

// Function: _ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv (func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv)
{
 Function::arg_iterator args = func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv->arg_begin();
 Value* ptr_this_411 = args++;
 ptr_this_411->setName("this");
 
 BasicBlock* label_entry_412 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE5beginEv,0);
 
 // Block entry (label_entry_412)
 AllocaInst* ptr_retval = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "retval", label_entry_412);
 ptr_retval->setAlignment(8);
 AllocaInst* ptr_this_addr_413 = new AllocaInst(PointerTy_3, "this.addr", label_entry_412);
 ptr_this_addr_413->setAlignment(8);
 StoreInst* void_414 = new StoreInst(ptr_this_411, ptr_this_addr_413, false, label_entry_412);
 void_414->setAlignment(8);
 LoadInst* ptr_this1_415 = new LoadInst(ptr_this_addr_413, "this1", false, label_entry_412);
 std::vector<Value*> ptr__M_t_416_indices;
 ptr__M_t_416_indices.push_back(const_int32_208);
 ptr__M_t_416_indices.push_back(const_int32_208);
 Instruction* ptr__M_t_416 = GetElementPtrInst::Create(ptr_this1_415, ptr__M_t_416_indices, "_M_t", label_entry_412);
 CallInst* ptr_call_417 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv, ptr__M_t_416, "call", label_entry_412);
 ptr_call_417->setCallingConv(CallingConv::C);
 ptr_call_417->setTailCall(false);
 AttributeSet ptr_call_417_PAL;
 ptr_call_417->setAttributes(ptr_call_417_PAL);
 
 std::vector<Value*> ptr_coerce_dive_418_indices;
 ptr_coerce_dive_418_indices.push_back(const_int32_208);
 ptr_coerce_dive_418_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_418 = GetElementPtrInst::Create(ptr_retval, ptr_coerce_dive_418_indices, "coerce.dive", label_entry_412);
 StoreInst* void_419 = new StoreInst(ptr_call_417, ptr_coerce_dive_418, false, label_entry_412);
 std::vector<Value*> ptr_coerce_dive2_420_indices;
 ptr_coerce_dive2_420_indices.push_back(const_int32_208);
 ptr_coerce_dive2_420_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive2_420 = GetElementPtrInst::Create(ptr_retval, ptr_coerce_dive2_420_indices, "coerce.dive2", label_entry_412);
 LoadInst* ptr_421 = new LoadInst(ptr_coerce_dive2_420, "", false, label_entry_412);
 ReturnInst::Create(mod->getContext(), ptr_421, label_entry_412);
 
}

// Function: _ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_ (func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_)
{
 Function::arg_iterator args = func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_->arg_begin();
 Value* ptr_this_423 = args++;
 ptr_this_423->setName("this");
 Value* ptr___x_424 = args++;
 ptr___x_424->setName("__x");
 
 BasicBlock* label_entry_425 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEneERKS3_,0);
 
 // Block entry (label_entry_425)
 AllocaInst* ptr_this_addr_426 = new AllocaInst(PointerTy_56, "this.addr", label_entry_425);
 ptr_this_addr_426->setAlignment(8);
 AllocaInst* ptr___x_addr_427 = new AllocaInst(PointerTy_56, "__x.addr", label_entry_425);
 ptr___x_addr_427->setAlignment(8);
 StoreInst* void_428 = new StoreInst(ptr_this_423, ptr_this_addr_426, false, label_entry_425);
 void_428->setAlignment(8);
 StoreInst* void_429 = new StoreInst(ptr___x_424, ptr___x_addr_427, false, label_entry_425);
 void_429->setAlignment(8);
 LoadInst* ptr_this1_430 = new LoadInst(ptr_this_addr_426, "this1", false, label_entry_425);
 std::vector<Value*> ptr__M_node_indices;
 ptr__M_node_indices.push_back(const_int32_208);
 ptr__M_node_indices.push_back(const_int32_208);
 Instruction* ptr__M_node = GetElementPtrInst::Create(ptr_this1_430, ptr__M_node_indices, "_M_node", label_entry_425);
 LoadInst* ptr_431 = new LoadInst(ptr__M_node, "", false, label_entry_425);
 ptr_431->setAlignment(8);
 LoadInst* ptr_432 = new LoadInst(ptr___x_addr_427, "", false, label_entry_425);
 ptr_432->setAlignment(8);
 std::vector<Value*> ptr__M_node2_indices;
 ptr__M_node2_indices.push_back(const_int32_208);
 ptr__M_node2_indices.push_back(const_int32_208);
 Instruction* ptr__M_node2 = GetElementPtrInst::Create(ptr_432, ptr__M_node2_indices, "_M_node2", label_entry_425);
 LoadInst* ptr_433 = new LoadInst(ptr__M_node2, "", false, label_entry_425);
 ptr_433->setAlignment(8);
 ICmpInst* int1_cmp_434 = new ICmpInst(*label_entry_425, ICmpInst::ICMP_NE, ptr_431, ptr_433, "cmp");
 ReturnInst::Create(mod->getContext(), int1_cmp_434, label_entry_425);
 
}

// Function: _ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv (func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv)
{
 Function::arg_iterator args = func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv->arg_begin();
 Value* ptr_this_436 = args++;
 ptr_this_436->setName("this");
 
 BasicBlock* label_entry_437 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE3endEv,0);
 
 // Block entry (label_entry_437)
 AllocaInst* ptr_retval_438 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "retval", label_entry_437);
 ptr_retval_438->setAlignment(8);
 AllocaInst* ptr_this_addr_439 = new AllocaInst(PointerTy_3, "this.addr", label_entry_437);
 ptr_this_addr_439->setAlignment(8);
 StoreInst* void_440 = new StoreInst(ptr_this_436, ptr_this_addr_439, false, label_entry_437);
 void_440->setAlignment(8);
 LoadInst* ptr_this1_441 = new LoadInst(ptr_this_addr_439, "this1", false, label_entry_437);
 std::vector<Value*> ptr__M_t_442_indices;
 ptr__M_t_442_indices.push_back(const_int32_208);
 ptr__M_t_442_indices.push_back(const_int32_208);
 Instruction* ptr__M_t_442 = GetElementPtrInst::Create(ptr_this1_441, ptr__M_t_442_indices, "_M_t", label_entry_437);
 CallInst* ptr_call_443 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv, ptr__M_t_442, "call", label_entry_437);
 ptr_call_443->setCallingConv(CallingConv::C);
 ptr_call_443->setTailCall(false);
 AttributeSet ptr_call_443_PAL;
 ptr_call_443->setAttributes(ptr_call_443_PAL);
 
 std::vector<Value*> ptr_coerce_dive_444_indices;
 ptr_coerce_dive_444_indices.push_back(const_int32_208);
 ptr_coerce_dive_444_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_444 = GetElementPtrInst::Create(ptr_retval_438, ptr_coerce_dive_444_indices, "coerce.dive", label_entry_437);
 StoreInst* void_445 = new StoreInst(ptr_call_443, ptr_coerce_dive_444, false, label_entry_437);
 std::vector<Value*> ptr_coerce_dive2_446_indices;
 ptr_coerce_dive2_446_indices.push_back(const_int32_208);
 ptr_coerce_dive2_446_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive2_446 = GetElementPtrInst::Create(ptr_retval_438, ptr_coerce_dive2_446_indices, "coerce.dive2", label_entry_437);
 LoadInst* ptr_447 = new LoadInst(ptr_coerce_dive2_446, "", false, label_entry_437);
 ReturnInst::Create(mod->getContext(), ptr_447, label_entry_437);
 
}

// Function: _ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv (func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv)
{
 Function::arg_iterator args = func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv->arg_begin();
 Value* ptr_this_449 = args++;
 ptr_this_449->setName("this");
 
 BasicBlock* label_entry_450 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEptEv,0);
 
 // Block entry (label_entry_450)
 AllocaInst* ptr_this_addr_451 = new AllocaInst(PointerTy_56, "this.addr", label_entry_450);
 ptr_this_addr_451->setAlignment(8);
 StoreInst* void_452 = new StoreInst(ptr_this_449, ptr_this_addr_451, false, label_entry_450);
 void_452->setAlignment(8);
 LoadInst* ptr_this1_453 = new LoadInst(ptr_this_addr_451, "this1", false, label_entry_450);
 std::vector<Value*> ptr__M_node_454_indices;
 ptr__M_node_454_indices.push_back(const_int32_208);
 ptr__M_node_454_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_454 = GetElementPtrInst::Create(ptr_this1_453, ptr__M_node_454_indices, "_M_node", label_entry_450);
 LoadInst* ptr_455 = new LoadInst(ptr__M_node_454, "", false, label_entry_450);
 ptr_455->setAlignment(8);
 CastInst* ptr_456 = new BitCastInst(ptr_455, PointerTy_88, "", label_entry_450);
 std::vector<Value*> ptr__M_value_field_indices;
 ptr__M_value_field_indices.push_back(const_int32_208);
 ptr__M_value_field_indices.push_back(const_int32_211);
 Instruction* ptr__M_value_field = GetElementPtrInst::Create(ptr_456, ptr__M_value_field_indices, "_M_value_field", label_entry_450);
 CallInst* ptr_call_457 = CallInst::Create(func__ZSt11__addressofISt4pairIKSsiEEPT_RS3_, ptr__M_value_field, "call", label_entry_450);
 ptr_call_457->setCallingConv(CallingConv::C);
 ptr_call_457->setTailCall(false);
 AttributeSet ptr_call_457_PAL;
 ptr_call_457->setAttributes(ptr_call_457_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_call_457, label_entry_450);
 
}

// Function: _ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi (func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi)
{
 Function::arg_iterator args = func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi->arg_begin();
 Value* ptr_this_459 = args++;
 ptr_this_459->setName("this");
 Value* int32_460 = args++;
 
 BasicBlock* label_entry_461 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEi,0);
 
 // Block entry (label_entry_461)
 AllocaInst* ptr_retval_462 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "retval", label_entry_461);
 ptr_retval_462->setAlignment(8);
 AllocaInst* ptr_this_addr_463 = new AllocaInst(PointerTy_56, "this.addr", label_entry_461);
 ptr_this_addr_463->setAlignment(8);
 AllocaInst* ptr__addr = new AllocaInst(IntegerType::get(mod->getContext(), 32), ".addr", label_entry_461);
 ptr__addr->setAlignment(4);
 StoreInst* void_464 = new StoreInst(ptr_this_459, ptr_this_addr_463, false, label_entry_461);
 void_464->setAlignment(8);
 StoreInst* void_465 = new StoreInst(int32_460, ptr__addr, false, label_entry_461);
 void_465->setAlignment(4);
 LoadInst* ptr_this1_466 = new LoadInst(ptr_this_addr_463, "this1", false, label_entry_461);
 CastInst* ptr_467 = new BitCastInst(ptr_retval_462, PointerTy_1, "", label_entry_461);
 CastInst* ptr_468 = new BitCastInst(ptr_this1_466, PointerTy_1, "", label_entry_461);
 std::vector<Value*> void_469_params;
 void_469_params.push_back(ptr_467);
 void_469_params.push_back(ptr_468);
 void_469_params.push_back(const_int64_216);
 void_469_params.push_back(const_int32_217);
 void_469_params.push_back(const_int1_218);
 CallInst* void_469 = CallInst::Create(func_llvm_memcpy_p0i8_p0i8_i64, void_469_params, "", label_entry_461);
 void_469->setCallingConv(CallingConv::C);
 void_469->setTailCall(false);
 AttributeSet void_469_PAL;
 void_469->setAttributes(void_469_PAL);
 
 std::vector<Value*> ptr__M_node_470_indices;
 ptr__M_node_470_indices.push_back(const_int32_208);
 ptr__M_node_470_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_470 = GetElementPtrInst::Create(ptr_this1_466, ptr__M_node_470_indices, "_M_node", label_entry_461);
 LoadInst* ptr_471 = new LoadInst(ptr__M_node_470, "", false, label_entry_461);
 ptr_471->setAlignment(8);
 CallInst* ptr_call_472 = CallInst::Create(func__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base, ptr_471, "call", label_entry_461);
 ptr_call_472->setCallingConv(CallingConv::C);
 ptr_call_472->setTailCall(false);
 AttributeSet ptr_call_472_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::ReadOnly);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  ptr_call_472_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 ptr_call_472->setAttributes(ptr_call_472_PAL);
 
 std::vector<Value*> ptr__M_node2_473_indices;
 ptr__M_node2_473_indices.push_back(const_int32_208);
 ptr__M_node2_473_indices.push_back(const_int32_208);
 Instruction* ptr__M_node2_473 = GetElementPtrInst::Create(ptr_this1_466, ptr__M_node2_473_indices, "_M_node2", label_entry_461);
 StoreInst* void_474 = new StoreInst(ptr_call_472, ptr__M_node2_473, false, label_entry_461);
 void_474->setAlignment(8);
 std::vector<Value*> ptr_coerce_dive_475_indices;
 ptr_coerce_dive_475_indices.push_back(const_int32_208);
 ptr_coerce_dive_475_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_475 = GetElementPtrInst::Create(ptr_retval_462, ptr_coerce_dive_475_indices, "coerce.dive", label_entry_461);
 LoadInst* ptr_476 = new LoadInst(ptr_coerce_dive_475, "", false, label_entry_461);
 ReturnInst::Create(mod->getContext(), ptr_476, label_entry_461);
 
}

// Function: _ZSt11__addressofISt4pairIKSsiEEPT_RS3_ (func__ZSt11__addressofISt4pairIKSsiEEPT_RS3_)
{
 Function::arg_iterator args = func__ZSt11__addressofISt4pairIKSsiEEPT_RS3_->arg_begin();
 Value* ptr___r = args++;
 ptr___r->setName("__r");
 
 BasicBlock* label_entry_478 = BasicBlock::Create(mod->getContext(), "entry",func__ZSt11__addressofISt4pairIKSsiEEPT_RS3_,0);
 
 // Block entry (label_entry_478)
 AllocaInst* ptr___r_addr = new AllocaInst(PointerTy_58, "__r.addr", label_entry_478);
 ptr___r_addr->setAlignment(8);
 StoreInst* void_479 = new StoreInst(ptr___r, ptr___r_addr, false, label_entry_478);
 void_479->setAlignment(8);
 LoadInst* ptr_480 = new LoadInst(ptr___r_addr, "", false, label_entry_478);
 ptr_480->setAlignment(8);
 CastInst* ptr_481 = new BitCastInst(ptr_480, PointerTy_1, "", label_entry_478);
 CastInst* ptr_482 = new BitCastInst(ptr_481, PointerTy_58, "", label_entry_478);
 ReturnInst::Create(mod->getContext(), ptr_482, label_entry_478);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv->arg_begin();
 Value* ptr_this_484 = args++;
 ptr_this_484->setName("this");
 
 BasicBlock* label_entry_485 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv,0);
 
 // Block entry (label_entry_485)
 AllocaInst* ptr_retval_486 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "retval", label_entry_485);
 ptr_retval_486->setAlignment(8);
 AllocaInst* ptr_this_addr_487 = new AllocaInst(PointerTy_27, "this.addr", label_entry_485);
 ptr_this_addr_487->setAlignment(8);
 StoreInst* void_488 = new StoreInst(ptr_this_484, ptr_this_addr_487, false, label_entry_485);
 void_488->setAlignment(8);
 LoadInst* ptr_this1_489 = new LoadInst(ptr_this_addr_487, "this1", false, label_entry_485);
 std::vector<Value*> ptr__M_impl_indices;
 ptr__M_impl_indices.push_back(const_int32_208);
 ptr__M_impl_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl = GetElementPtrInst::Create(ptr_this1_489, ptr__M_impl_indices, "_M_impl", label_entry_485);
 std::vector<Value*> ptr__M_header_indices;
 ptr__M_header_indices.push_back(const_int32_208);
 ptr__M_header_indices.push_back(const_int32_211);
 Instruction* ptr__M_header = GetElementPtrInst::Create(ptr__M_impl, ptr__M_header_indices, "_M_header", label_entry_485);
 CastInst* ptr_490 = new BitCastInst(ptr__M_header, PointerTy_88, "", label_entry_485);
 std::vector<Value*> void_491_params;
 void_491_params.push_back(ptr_retval_486);
 void_491_params.push_back(ptr_490);
 CallInst* void_491 = CallInst::Create(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E, void_491_params, "", label_entry_485);
 void_491->setCallingConv(CallingConv::C);
 void_491->setTailCall(false);
 AttributeSet void_491_PAL;
 void_491->setAttributes(void_491_PAL);
 
 std::vector<Value*> ptr_coerce_dive_492_indices;
 ptr_coerce_dive_492_indices.push_back(const_int32_208);
 ptr_coerce_dive_492_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_492 = GetElementPtrInst::Create(ptr_retval_486, ptr_coerce_dive_492_indices, "coerce.dive", label_entry_485);
 LoadInst* ptr_493 = new LoadInst(ptr_coerce_dive_492, "", false, label_entry_485);
 ReturnInst::Create(mod->getContext(), ptr_493, label_entry_485);
 
}

// Function: _ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E (func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E)
{
 Function::arg_iterator args = func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E->arg_begin();
 Value* ptr_this_495 = args++;
 ptr_this_495->setName("this");
 Value* ptr___x_496 = args++;
 ptr___x_496->setName("__x");
 
 BasicBlock* label_entry_497 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E,0);
 
 // Block entry (label_entry_497)
 AllocaInst* ptr_this_addr_498 = new AllocaInst(PointerTy_56, "this.addr", label_entry_497);
 ptr_this_addr_498->setAlignment(8);
 AllocaInst* ptr___x_addr_499 = new AllocaInst(PointerTy_88, "__x.addr", label_entry_497);
 ptr___x_addr_499->setAlignment(8);
 StoreInst* void_500 = new StoreInst(ptr_this_495, ptr_this_addr_498, false, label_entry_497);
 void_500->setAlignment(8);
 StoreInst* void_501 = new StoreInst(ptr___x_496, ptr___x_addr_499, false, label_entry_497);
 void_501->setAlignment(8);
 LoadInst* ptr_this1_502 = new LoadInst(ptr_this_addr_498, "this1", false, label_entry_497);
 std::vector<Value*> ptr__M_node_503_indices;
 ptr__M_node_503_indices.push_back(const_int32_208);
 ptr__M_node_503_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_503 = GetElementPtrInst::Create(ptr_this1_502, ptr__M_node_503_indices, "_M_node", label_entry_497);
 LoadInst* ptr_504 = new LoadInst(ptr___x_addr_499, "", false, label_entry_497);
 ptr_504->setAlignment(8);
 CastInst* ptr_505 = new BitCastInst(ptr_504, PointerTy_2, "", label_entry_497);
 StoreInst* void_506 = new StoreInst(ptr_505, ptr__M_node_503, false, label_entry_497);
 void_506->setAlignment(8);
 ReturnInst::Create(mod->getContext(), label_entry_497);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv->arg_begin();
 Value* ptr_this_508 = args++;
 ptr_this_508->setName("this");
 
 BasicBlock* label_entry_509 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv,0);
 
 // Block entry (label_entry_509)
 AllocaInst* ptr_retval_510 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "retval", label_entry_509);
 ptr_retval_510->setAlignment(8);
 AllocaInst* ptr_this_addr_511 = new AllocaInst(PointerTy_27, "this.addr", label_entry_509);
 ptr_this_addr_511->setAlignment(8);
 StoreInst* void_512 = new StoreInst(ptr_this_508, ptr_this_addr_511, false, label_entry_509);
 void_512->setAlignment(8);
 LoadInst* ptr_this1_513 = new LoadInst(ptr_this_addr_511, "this1", false, label_entry_509);
 std::vector<Value*> ptr__M_impl_514_indices;
 ptr__M_impl_514_indices.push_back(const_int32_208);
 ptr__M_impl_514_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_514 = GetElementPtrInst::Create(ptr_this1_513, ptr__M_impl_514_indices, "_M_impl", label_entry_509);
 std::vector<Value*> ptr__M_header_515_indices;
 ptr__M_header_515_indices.push_back(const_int32_208);
 ptr__M_header_515_indices.push_back(const_int32_211);
 Instruction* ptr__M_header_515 = GetElementPtrInst::Create(ptr__M_impl_514, ptr__M_header_515_indices, "_M_header", label_entry_509);
 std::vector<Value*> ptr__M_left_indices;
 ptr__M_left_indices.push_back(const_int32_208);
 ptr__M_left_indices.push_back(const_int32_221);
 Instruction* ptr__M_left = GetElementPtrInst::Create(ptr__M_header_515, ptr__M_left_indices, "_M_left", label_entry_509);
 LoadInst* ptr_516 = new LoadInst(ptr__M_left, "", false, label_entry_509);
 ptr_516->setAlignment(8);
 CastInst* ptr_517 = new BitCastInst(ptr_516, PointerTy_88, "", label_entry_509);
 std::vector<Value*> void_518_params;
 void_518_params.push_back(ptr_retval_510);
 void_518_params.push_back(ptr_517);
 CallInst* void_518 = CallInst::Create(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E, void_518_params, "", label_entry_509);
 void_518->setCallingConv(CallingConv::C);
 void_518->setTailCall(false);
 AttributeSet void_518_PAL;
 void_518->setAttributes(void_518_PAL);
 
 std::vector<Value*> ptr_coerce_dive_519_indices;
 ptr_coerce_dive_519_indices.push_back(const_int32_208);
 ptr_coerce_dive_519_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_519 = GetElementPtrInst::Create(ptr_retval_510, ptr_coerce_dive_519_indices, "coerce.dive", label_entry_509);
 LoadInst* ptr_520 = new LoadInst(ptr_coerce_dive_519, "", false, label_entry_509);
 ReturnInst::Create(mod->getContext(), ptr_520, label_entry_509);
 
}

// Function: _ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_ (func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_)
{
 Function::arg_iterator args = func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_->arg_begin();
 Value* ptr_this_522 = args++;
 ptr_this_522->setName("this");
 Value* ptr___x_523 = args++;
 ptr___x_523->setName("__x");
 
 BasicBlock* label_entry_524 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE11lower_boundERS3_,0);
 
 // Block entry (label_entry_524)
 AllocaInst* ptr_retval_525 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "retval", label_entry_524);
 ptr_retval_525->setAlignment(8);
 AllocaInst* ptr_this_addr_526 = new AllocaInst(PointerTy_3, "this.addr", label_entry_524);
 ptr_this_addr_526->setAlignment(8);
 AllocaInst* ptr___x_addr_527 = new AllocaInst(PointerTy_33, "__x.addr", label_entry_524);
 ptr___x_addr_527->setAlignment(8);
 StoreInst* void_528 = new StoreInst(ptr_this_522, ptr_this_addr_526, false, label_entry_524);
 void_528->setAlignment(8);
 StoreInst* void_529 = new StoreInst(ptr___x_523, ptr___x_addr_527, false, label_entry_524);
 void_529->setAlignment(8);
 LoadInst* ptr_this1_530 = new LoadInst(ptr_this_addr_526, "this1", false, label_entry_524);
 std::vector<Value*> ptr__M_t_531_indices;
 ptr__M_t_531_indices.push_back(const_int32_208);
 ptr__M_t_531_indices.push_back(const_int32_208);
 Instruction* ptr__M_t_531 = GetElementPtrInst::Create(ptr_this1_530, ptr__M_t_531_indices, "_M_t", label_entry_524);
 LoadInst* ptr_532 = new LoadInst(ptr___x_addr_527, "", false, label_entry_524);
 ptr_532->setAlignment(8);
 std::vector<Value*> ptr_call_533_params;
 ptr_call_533_params.push_back(ptr__M_t_531);
 ptr_call_533_params.push_back(ptr_532);
 CallInst* ptr_call_533 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_, ptr_call_533_params, "call", label_entry_524);
 ptr_call_533->setCallingConv(CallingConv::C);
 ptr_call_533->setTailCall(false);
 AttributeSet ptr_call_533_PAL;
 ptr_call_533->setAttributes(ptr_call_533_PAL);
 
 std::vector<Value*> ptr_coerce_dive_534_indices;
 ptr_coerce_dive_534_indices.push_back(const_int32_208);
 ptr_coerce_dive_534_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_534 = GetElementPtrInst::Create(ptr_retval_525, ptr_coerce_dive_534_indices, "coerce.dive", label_entry_524);
 StoreInst* void_535 = new StoreInst(ptr_call_533, ptr_coerce_dive_534, false, label_entry_524);
 std::vector<Value*> ptr_coerce_dive2_536_indices;
 ptr_coerce_dive2_536_indices.push_back(const_int32_208);
 ptr_coerce_dive2_536_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive2_536 = GetElementPtrInst::Create(ptr_retval_525, ptr_coerce_dive2_536_indices, "coerce.dive2", label_entry_524);
 LoadInst* ptr_537 = new LoadInst(ptr_coerce_dive2_536, "", false, label_entry_524);
 ReturnInst::Create(mod->getContext(), ptr_537, label_entry_524);
 
}

// Function: _ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_ (func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_)
{
 Function::arg_iterator args = func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_->arg_begin();
 Value* ptr_this_539 = args++;
 ptr_this_539->setName("this");
 Value* ptr___x_540 = args++;
 ptr___x_540->setName("__x");
 
 BasicBlock* label_entry_541 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_,0);
 
 // Block entry (label_entry_541)
 AllocaInst* ptr_this_addr_542 = new AllocaInst(PointerTy_56, "this.addr", label_entry_541);
 ptr_this_addr_542->setAlignment(8);
 AllocaInst* ptr___x_addr_543 = new AllocaInst(PointerTy_56, "__x.addr", label_entry_541);
 ptr___x_addr_543->setAlignment(8);
 StoreInst* void_544 = new StoreInst(ptr_this_539, ptr_this_addr_542, false, label_entry_541);
 void_544->setAlignment(8);
 StoreInst* void_545 = new StoreInst(ptr___x_540, ptr___x_addr_543, false, label_entry_541);
 void_545->setAlignment(8);
 LoadInst* ptr_this1_546 = new LoadInst(ptr_this_addr_542, "this1", false, label_entry_541);
 std::vector<Value*> ptr__M_node_547_indices;
 ptr__M_node_547_indices.push_back(const_int32_208);
 ptr__M_node_547_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_547 = GetElementPtrInst::Create(ptr_this1_546, ptr__M_node_547_indices, "_M_node", label_entry_541);
 LoadInst* ptr_548 = new LoadInst(ptr__M_node_547, "", false, label_entry_541);
 ptr_548->setAlignment(8);
 LoadInst* ptr_549 = new LoadInst(ptr___x_addr_543, "", false, label_entry_541);
 ptr_549->setAlignment(8);
 std::vector<Value*> ptr__M_node2_550_indices;
 ptr__M_node2_550_indices.push_back(const_int32_208);
 ptr__M_node2_550_indices.push_back(const_int32_208);
 Instruction* ptr__M_node2_550 = GetElementPtrInst::Create(ptr_549, ptr__M_node2_550_indices, "_M_node2", label_entry_541);
 LoadInst* ptr_551 = new LoadInst(ptr__M_node2_550, "", false, label_entry_541);
 ptr_551->setAlignment(8);
 ICmpInst* int1_cmp_552 = new ICmpInst(*label_entry_541, ICmpInst::ICMP_EQ, ptr_548, ptr_551, "cmp");
 ReturnInst::Create(mod->getContext(), int1_cmp_552, label_entry_541);
 
}

// Function: _ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv (func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv)
{
 Function::arg_iterator args = func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv->arg_begin();
 Value* ptr_this_554 = args++;
 ptr_this_554->setName("this");
 
 BasicBlock* label_entry_555 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE8key_compEv,0);
 
 // Block entry (label_entry_555)
 AllocaInst* ptr_retval_556 = new AllocaInst(StructTy_struct_std__less, "retval", label_entry_555);
 ptr_retval_556->setAlignment(1);
 AllocaInst* ptr_this_addr_557 = new AllocaInst(PointerTy_3, "this.addr", label_entry_555);
 ptr_this_addr_557->setAlignment(8);
 AllocaInst* ptr_undef_agg_tmp_558 = new AllocaInst(StructTy_struct_std__less, "undef.agg.tmp", label_entry_555);
 ptr_undef_agg_tmp_558->setAlignment(1);
 StoreInst* void_559 = new StoreInst(ptr_this_554, ptr_this_addr_557, false, label_entry_555);
 void_559->setAlignment(8);
 LoadInst* ptr_this1_560 = new LoadInst(ptr_this_addr_557, "this1", false, label_entry_555);
 std::vector<Value*> ptr__M_t_561_indices;
 ptr__M_t_561_indices.push_back(const_int32_208);
 ptr__M_t_561_indices.push_back(const_int32_208);
 Instruction* ptr__M_t_561 = GetElementPtrInst::Create(ptr_this1_560, ptr__M_t_561_indices, "_M_t", label_entry_555);
 CallInst* void_562 = CallInst::Create(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv, ptr__M_t_561, "", label_entry_555);
 void_562->setCallingConv(CallingConv::C);
 void_562->setTailCall(false);
 AttributeSet void_562_PAL;
 void_562->setAttributes(void_562_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_555);
 
}

// Function: _ZNKSt4lessISsEclERKSsS2_ (func__ZNKSt4lessISsEclERKSsS2_)
{
 Function::arg_iterator args = func__ZNKSt4lessISsEclERKSsS2_->arg_begin();
 Value* ptr_this_564 = args++;
 ptr_this_564->setName("this");
 Value* ptr___x_565 = args++;
 ptr___x_565->setName("__x");
 Value* ptr___y = args++;
 ptr___y->setName("__y");
 
 BasicBlock* label_entry_566 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt4lessISsEclERKSsS2_,0);
 
 // Block entry (label_entry_566)
 AllocaInst* ptr_this_addr_567 = new AllocaInst(PointerTy_57, "this.addr", label_entry_566);
 ptr_this_addr_567->setAlignment(8);
 AllocaInst* ptr___x_addr_568 = new AllocaInst(PointerTy_33, "__x.addr", label_entry_566);
 ptr___x_addr_568->setAlignment(8);
 AllocaInst* ptr___y_addr = new AllocaInst(PointerTy_33, "__y.addr", label_entry_566);
 ptr___y_addr->setAlignment(8);
 StoreInst* void_569 = new StoreInst(ptr_this_564, ptr_this_addr_567, false, label_entry_566);
 void_569->setAlignment(8);
 StoreInst* void_570 = new StoreInst(ptr___x_565, ptr___x_addr_568, false, label_entry_566);
 void_570->setAlignment(8);
 StoreInst* void_571 = new StoreInst(ptr___y, ptr___y_addr, false, label_entry_566);
 void_571->setAlignment(8);
 LoadInst* ptr_this1_572 = new LoadInst(ptr_this_addr_567, "this1", false, label_entry_566);
 LoadInst* ptr_573 = new LoadInst(ptr___x_addr_568, "", false, label_entry_566);
 ptr_573->setAlignment(8);
 LoadInst* ptr_574 = new LoadInst(ptr___y_addr, "", false, label_entry_566);
 ptr_574->setAlignment(8);
 std::vector<Value*> int1_call_params;
 int1_call_params.push_back(ptr_573);
 int1_call_params.push_back(ptr_574);
 CallInst* int1_call = CallInst::Create(func__ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_, int1_call_params, "call", label_entry_566);
 int1_call->setCallingConv(CallingConv::C);
 int1_call->setTailCall(false);
 AttributeSet int1_call_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call->setAttributes(int1_call_PAL);
 
 ReturnInst::Create(mod->getContext(), int1_call, label_entry_566);
 
}

// Function: _ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv (func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv)
{
 Function::arg_iterator args = func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv->arg_begin();
 Value* ptr_this_576 = args++;
 ptr_this_576->setName("this");
 
 BasicBlock* label_entry_577 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEdeEv,0);
 
 // Block entry (label_entry_577)
 AllocaInst* ptr_this_addr_578 = new AllocaInst(PointerTy_56, "this.addr", label_entry_577);
 ptr_this_addr_578->setAlignment(8);
 StoreInst* void_579 = new StoreInst(ptr_this_576, ptr_this_addr_578, false, label_entry_577);
 void_579->setAlignment(8);
 LoadInst* ptr_this1_580 = new LoadInst(ptr_this_addr_578, "this1", false, label_entry_577);
 std::vector<Value*> ptr__M_node_581_indices;
 ptr__M_node_581_indices.push_back(const_int32_208);
 ptr__M_node_581_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_581 = GetElementPtrInst::Create(ptr_this1_580, ptr__M_node_581_indices, "_M_node", label_entry_577);
 LoadInst* ptr_582 = new LoadInst(ptr__M_node_581, "", false, label_entry_577);
 ptr_582->setAlignment(8);
 CastInst* ptr_583 = new BitCastInst(ptr_582, PointerTy_88, "", label_entry_577);
 std::vector<Value*> ptr__M_value_field_584_indices;
 ptr__M_value_field_584_indices.push_back(const_int32_208);
 ptr__M_value_field_584_indices.push_back(const_int32_211);
 Instruction* ptr__M_value_field_584 = GetElementPtrInst::Create(ptr_583, ptr__M_value_field_584_indices, "_M_value_field", label_entry_577);
 ReturnInst::Create(mod->getContext(), ptr__M_value_field_584, label_entry_577);
 
}

// Function: _ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_ (func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_)
{
 Function::arg_iterator args = func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_->arg_begin();
 Value* ptr_this_586 = args++;
 ptr_this_586->setName("this");
 Value* ptr___position_coerce = args++;
 ptr___position_coerce->setName("__position.coerce");
 Value* ptr___x_587 = args++;
 ptr___x_587->setName("__x");
 
 BasicBlock* label_entry_588 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt3mapISsiSt4lessISsESaISt4pairIKSsiEEE6insertESt17_Rb_tree_iteratorIS4_ERKS4_,0);
 
 // Block entry (label_entry_588)
 AllocaInst* ptr_retval_589 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "retval", label_entry_588);
 ptr_retval_589->setAlignment(8);
 AllocaInst* ptr_this_addr_590 = new AllocaInst(PointerTy_3, "this.addr", label_entry_588);
 ptr_this_addr_590->setAlignment(8);
 AllocaInst* ptr___position = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "__position", label_entry_588);
 ptr___position->setAlignment(8);
 AllocaInst* ptr___x_addr_591 = new AllocaInst(PointerTy_58, "__x.addr", label_entry_588);
 ptr___x_addr_591->setAlignment(8);
 AllocaInst* ptr_agg_tmp_592 = new AllocaInst(StructTy_struct_std___Rb_tree_const_iterator, "agg.tmp", label_entry_588);
 ptr_agg_tmp_592->setAlignment(8);
 StoreInst* void_593 = new StoreInst(ptr_this_586, ptr_this_addr_590, false, label_entry_588);
 void_593->setAlignment(8);
 std::vector<Value*> ptr_coerce_dive_594_indices;
 ptr_coerce_dive_594_indices.push_back(const_int32_208);
 ptr_coerce_dive_594_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_594 = GetElementPtrInst::Create(ptr___position, ptr_coerce_dive_594_indices, "coerce.dive", label_entry_588);
 StoreInst* void_595 = new StoreInst(ptr___position_coerce, ptr_coerce_dive_594, false, label_entry_588);
 StoreInst* void_596 = new StoreInst(ptr___x_587, ptr___x_addr_591, false, label_entry_588);
 void_596->setAlignment(8);
 LoadInst* ptr_this1_597 = new LoadInst(ptr_this_addr_590, "this1", false, label_entry_588);
 std::vector<Value*> ptr__M_t_598_indices;
 ptr__M_t_598_indices.push_back(const_int32_208);
 ptr__M_t_598_indices.push_back(const_int32_208);
 Instruction* ptr__M_t_598 = GetElementPtrInst::Create(ptr_this1_597, ptr__M_t_598_indices, "_M_t", label_entry_588);
 std::vector<Value*> void_599_params;
 void_599_params.push_back(ptr_agg_tmp_592);
 void_599_params.push_back(ptr___position);
 CallInst* void_599 = CallInst::Create(func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E, void_599_params, "", label_entry_588);
 void_599->setCallingConv(CallingConv::C);
 void_599->setTailCall(false);
 AttributeSet void_599_PAL;
 void_599->setAttributes(void_599_PAL);
 
 LoadInst* ptr_600 = new LoadInst(ptr___x_addr_591, "", false, label_entry_588);
 ptr_600->setAlignment(8);
 std::vector<Value*> ptr_coerce_dive2_601_indices;
 ptr_coerce_dive2_601_indices.push_back(const_int32_208);
 ptr_coerce_dive2_601_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive2_601 = GetElementPtrInst::Create(ptr_agg_tmp_592, ptr_coerce_dive2_601_indices, "coerce.dive2", label_entry_588);
 LoadInst* ptr_602 = new LoadInst(ptr_coerce_dive2_601, "", false, label_entry_588);
 std::vector<Value*> ptr_call_603_params;
 ptr_call_603_params.push_back(ptr__M_t_598);
 ptr_call_603_params.push_back(ptr_602);
 ptr_call_603_params.push_back(ptr_600);
 CallInst* ptr_call_603 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_, ptr_call_603_params, "call", label_entry_588);
 ptr_call_603->setCallingConv(CallingConv::C);
 ptr_call_603->setTailCall(false);
 AttributeSet ptr_call_603_PAL;
 ptr_call_603->setAttributes(ptr_call_603_PAL);
 
 std::vector<Value*> ptr_coerce_dive3_604_indices;
 ptr_coerce_dive3_604_indices.push_back(const_int32_208);
 ptr_coerce_dive3_604_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive3_604 = GetElementPtrInst::Create(ptr_retval_589, ptr_coerce_dive3_604_indices, "coerce.dive3", label_entry_588);
 StoreInst* void_605 = new StoreInst(ptr_call_603, ptr_coerce_dive3_604, false, label_entry_588);
 std::vector<Value*> ptr_coerce_dive4_606_indices;
 ptr_coerce_dive4_606_indices.push_back(const_int32_208);
 ptr_coerce_dive4_606_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive4_606 = GetElementPtrInst::Create(ptr_retval_589, ptr_coerce_dive4_606_indices, "coerce.dive4", label_entry_588);
 LoadInst* ptr_607 = new LoadInst(ptr_coerce_dive4_606, "", false, label_entry_588);
 ReturnInst::Create(mod->getContext(), ptr_607, label_entry_588);
 
}

// Function: _ZNSt4pairIKSsiEC2ERS0_RKi (func__ZNSt4pairIKSsiEC2ERS0_RKi)
{
 Function::arg_iterator args = func__ZNSt4pairIKSsiEC2ERS0_RKi->arg_begin();
 Value* ptr_this_609 = args++;
 ptr_this_609->setName("this");
 Value* ptr___a = args++;
 ptr___a->setName("__a");
 Value* ptr___b = args++;
 ptr___b->setName("__b");
 
 BasicBlock* label_entry_610 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt4pairIKSsiEC2ERS0_RKi,0);
 
 // Block entry (label_entry_610)
 AllocaInst* ptr_this_addr_611 = new AllocaInst(PointerTy_58, "this.addr", label_entry_610);
 ptr_this_addr_611->setAlignment(8);
 AllocaInst* ptr___a_addr = new AllocaInst(PointerTy_33, "__a.addr", label_entry_610);
 ptr___a_addr->setAlignment(8);
 AllocaInst* ptr___b_addr = new AllocaInst(PointerTy_32, "__b.addr", label_entry_610);
 ptr___b_addr->setAlignment(8);
 StoreInst* void_612 = new StoreInst(ptr_this_609, ptr_this_addr_611, false, label_entry_610);
 void_612->setAlignment(8);
 StoreInst* void_613 = new StoreInst(ptr___a, ptr___a_addr, false, label_entry_610);
 void_613->setAlignment(8);
 StoreInst* void_614 = new StoreInst(ptr___b, ptr___b_addr, false, label_entry_610);
 void_614->setAlignment(8);
 LoadInst* ptr_this1_615 = new LoadInst(ptr_this_addr_611, "this1", false, label_entry_610);
 std::vector<Value*> ptr_first_616_indices;
 ptr_first_616_indices.push_back(const_int32_208);
 ptr_first_616_indices.push_back(const_int32_208);
 Instruction* ptr_first_616 = GetElementPtrInst::Create(ptr_this1_615, ptr_first_616_indices, "first", label_entry_610);
 LoadInst* ptr_617 = new LoadInst(ptr___a_addr, "", false, label_entry_610);
 ptr_617->setAlignment(8);
 std::vector<Value*> void_618_params;
 void_618_params.push_back(ptr_first_616);
 void_618_params.push_back(ptr_617);
 CallInst* void_618 = CallInst::Create(func__ZNSsC1ERKSs, void_618_params, "", label_entry_610);
 void_618->setCallingConv(CallingConv::C);
 void_618->setTailCall(false);
 AttributeSet void_618_PAL;
 void_618->setAttributes(void_618_PAL);
 
 std::vector<Value*> ptr_second_619_indices;
 ptr_second_619_indices.push_back(const_int32_208);
 ptr_second_619_indices.push_back(const_int32_211);
 Instruction* ptr_second_619 = GetElementPtrInst::Create(ptr_this1_615, ptr_second_619_indices, "second", label_entry_610);
 LoadInst* ptr_620 = new LoadInst(ptr___b_addr, "", false, label_entry_610);
 ptr_620->setAlignment(8);
 LoadInst* int32_621 = new LoadInst(ptr_620, "", false, label_entry_610);
 int32_621->setAlignment(4);
 StoreInst* void_622 = new StoreInst(int32_621, ptr_second_619, false, label_entry_610);
 void_622->setAlignment(4);
 ReturnInst::Create(mod->getContext(), label_entry_610);
 
}

// Function: _ZNSt4pairIKSsiED2Ev (func__ZNSt4pairIKSsiED2Ev)
{
 Function::arg_iterator args = func__ZNSt4pairIKSsiED2Ev->arg_begin();
 Value* ptr_this_624 = args++;
 ptr_this_624->setName("this");
 
 BasicBlock* label_entry_625 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt4pairIKSsiED2Ev,0);
 
 // Block entry (label_entry_625)
 AllocaInst* ptr_this_addr_626 = new AllocaInst(PointerTy_58, "this.addr", label_entry_625);
 ptr_this_addr_626->setAlignment(8);
 StoreInst* void_627 = new StoreInst(ptr_this_624, ptr_this_addr_626, false, label_entry_625);
 void_627->setAlignment(8);
 LoadInst* ptr_this1_628 = new LoadInst(ptr_this_addr_626, "this1", false, label_entry_625);
 std::vector<Value*> ptr_first_629_indices;
 ptr_first_629_indices.push_back(const_int32_208);
 ptr_first_629_indices.push_back(const_int32_208);
 Instruction* ptr_first_629 = GetElementPtrInst::Create(ptr_this1_628, ptr_first_629_indices, "first", label_entry_625);
 CallInst* void_630 = CallInst::Create(func__ZNSsD1Ev, ptr_first_629, "", label_entry_625);
 void_630->setCallingConv(CallingConv::C);
 void_630->setTailCall(false);
 AttributeSet void_630_PAL;
 void_630->setAttributes(void_630_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_625);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_ (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_->arg_begin();
 Value* ptr_this_632 = args++;
 ptr_this_632->setName("this");
 Value* ptr___position_coerce_633 = args++;
 ptr___position_coerce_633->setName("__position.coerce");
 Value* ptr___v = args++;
 ptr___v->setName("__v");
 
 BasicBlock* label_entry_634 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_,0);
 BasicBlock* label_if_then_635 = BasicBlock::Create(mod->getContext(), "if.then",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_,0);
 BasicBlock* label_if_end_636 = BasicBlock::Create(mod->getContext(), "if.end",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_,0);
 BasicBlock* label_return = BasicBlock::Create(mod->getContext(), "return",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE17_M_insert_unique_ESt23_Rb_tree_const_iteratorIS2_ERKS2_,0);
 
 // Block entry (label_entry_634)
 AllocaInst* ptr_retval_637 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "retval", label_entry_634);
 ptr_retval_637->setAlignment(8);
 AllocaInst* ptr_this_addr_638 = new AllocaInst(PointerTy_27, "this.addr", label_entry_634);
 ptr_this_addr_638->setAlignment(8);
 AllocaInst* ptr___position_639 = new AllocaInst(StructTy_struct_std___Rb_tree_const_iterator, "__position", label_entry_634);
 ptr___position_639->setAlignment(8);
 AllocaInst* ptr___v_addr = new AllocaInst(PointerTy_58, "__v.addr", label_entry_634);
 ptr___v_addr->setAlignment(8);
 AllocaInst* ptr___res = new AllocaInst(StructTy_struct_std__pair_3, "__res", label_entry_634);
 ptr___res->setAlignment(8);
 AllocaInst* ptr_agg_tmp_640 = new AllocaInst(StructTy_struct_std___Rb_tree_const_iterator, "agg.tmp", label_entry_634);
 ptr_agg_tmp_640->setAlignment(8);
 AllocaInst* ptr_tmp = new AllocaInst(StructTy_struct_std___Select1st, "tmp", label_entry_634);
 ptr_tmp->setAlignment(1);
 StoreInst* void_641 = new StoreInst(ptr_this_632, ptr_this_addr_638, false, label_entry_634);
 void_641->setAlignment(8);
 std::vector<Value*> ptr_coerce_dive_642_indices;
 ptr_coerce_dive_642_indices.push_back(const_int32_208);
 ptr_coerce_dive_642_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_642 = GetElementPtrInst::Create(ptr___position_639, ptr_coerce_dive_642_indices, "coerce.dive", label_entry_634);
 StoreInst* void_643 = new StoreInst(ptr___position_coerce_633, ptr_coerce_dive_642, false, label_entry_634);
 StoreInst* void_644 = new StoreInst(ptr___v, ptr___v_addr, false, label_entry_634);
 void_644->setAlignment(8);
 LoadInst* ptr_this1_645 = new LoadInst(ptr_this_addr_638, "this1", false, label_entry_634);
 CastInst* ptr_646 = new BitCastInst(ptr_agg_tmp_640, PointerTy_1, "", label_entry_634);
 CastInst* ptr_647 = new BitCastInst(ptr___position_639, PointerTy_1, "", label_entry_634);
 std::vector<Value*> void_648_params;
 void_648_params.push_back(ptr_646);
 void_648_params.push_back(ptr_647);
 void_648_params.push_back(const_int64_216);
 void_648_params.push_back(const_int32_217);
 void_648_params.push_back(const_int1_218);
 CallInst* void_648 = CallInst::Create(func_llvm_memcpy_p0i8_p0i8_i64, void_648_params, "", label_entry_634);
 void_648->setCallingConv(CallingConv::C);
 void_648->setTailCall(false);
 AttributeSet void_648_PAL;
 void_648->setAttributes(void_648_PAL);
 
 LoadInst* ptr_649 = new LoadInst(ptr___v_addr, "", false, label_entry_634);
 ptr_649->setAlignment(8);
 std::vector<Value*> ptr_call_650_params;
 ptr_call_650_params.push_back(ptr_tmp);
 ptr_call_650_params.push_back(ptr_649);
 CallInst* ptr_call_650 = CallInst::Create(func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_, ptr_call_650_params, "call", label_entry_634);
 ptr_call_650->setCallingConv(CallingConv::C);
 ptr_call_650->setTailCall(false);
 AttributeSet ptr_call_650_PAL;
 ptr_call_650->setAttributes(ptr_call_650_PAL);
 
 std::vector<Value*> ptr_coerce_dive2_651_indices;
 ptr_coerce_dive2_651_indices.push_back(const_int32_208);
 ptr_coerce_dive2_651_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive2_651 = GetElementPtrInst::Create(ptr_agg_tmp_640, ptr_coerce_dive2_651_indices, "coerce.dive2", label_entry_634);
 LoadInst* ptr_652 = new LoadInst(ptr_coerce_dive2_651, "", false, label_entry_634);
 std::vector<Value*> struct_call3_params;
 struct_call3_params.push_back(ptr_this1_645);
 struct_call3_params.push_back(ptr_652);
 struct_call3_params.push_back(ptr_call_650);
 CallInst* struct_call3 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_, struct_call3_params, "call3", label_entry_634);
 struct_call3->setCallingConv(CallingConv::C);
 struct_call3->setTailCall(false);
 AttributeSet struct_call3_PAL;
 struct_call3->setAttributes(struct_call3_PAL);
 
 CastInst* ptr_653 = new BitCastInst(ptr___res, PointerTy_114, "", label_entry_634);
 std::vector<Value*> ptr_654_indices;
 ptr_654_indices.push_back(const_int32_208);
 ptr_654_indices.push_back(const_int32_208);
 Instruction* ptr_654 = GetElementPtrInst::Create(ptr_653, ptr_654_indices, "", label_entry_634);
 std::vector<unsigned> ptr_655_indices;
 ptr_655_indices.push_back(0);
 ExtractValueInst* ptr_655 = ExtractValueInst::Create(struct_call3, ptr_655_indices, "", label_entry_634);
 StoreInst* void_656 = new StoreInst(ptr_655, ptr_654, false, label_entry_634);
 void_656->setAlignment(1);
 std::vector<Value*> ptr_657_indices;
 ptr_657_indices.push_back(const_int32_208);
 ptr_657_indices.push_back(const_int32_211);
 Instruction* ptr_657 = GetElementPtrInst::Create(ptr_653, ptr_657_indices, "", label_entry_634);
 std::vector<unsigned> ptr_658_indices;
 ptr_658_indices.push_back(1);
 ExtractValueInst* ptr_658 = ExtractValueInst::Create(struct_call3, ptr_658_indices, "", label_entry_634);
 StoreInst* void_659 = new StoreInst(ptr_658, ptr_657, false, label_entry_634);
 void_659->setAlignment(1);
 std::vector<Value*> ptr_second_660_indices;
 ptr_second_660_indices.push_back(const_int32_208);
 ptr_second_660_indices.push_back(const_int32_211);
 Instruction* ptr_second_660 = GetElementPtrInst::Create(ptr___res, ptr_second_660_indices, "second", label_entry_634);
 LoadInst* ptr_661 = new LoadInst(ptr_second_660, "", false, label_entry_634);
 ptr_661->setAlignment(8);
 ICmpInst* int1_tobool = new ICmpInst(*label_entry_634, ICmpInst::ICMP_NE, ptr_661, const_ptr_222, "tobool");
 BranchInst::Create(label_if_then_635, label_if_end_636, int1_tobool, label_entry_634);
 
 // Block if.then (label_if_then_635)
 std::vector<Value*> ptr_first_663_indices;
 ptr_first_663_indices.push_back(const_int32_208);
 ptr_first_663_indices.push_back(const_int32_208);
 Instruction* ptr_first_663 = GetElementPtrInst::Create(ptr___res, ptr_first_663_indices, "first", label_if_then_635);
 LoadInst* ptr_664 = new LoadInst(ptr_first_663, "", false, label_if_then_635);
 ptr_664->setAlignment(8);
 std::vector<Value*> ptr_second4_indices;
 ptr_second4_indices.push_back(const_int32_208);
 ptr_second4_indices.push_back(const_int32_211);
 Instruction* ptr_second4 = GetElementPtrInst::Create(ptr___res, ptr_second4_indices, "second4", label_if_then_635);
 LoadInst* ptr_665 = new LoadInst(ptr_second4, "", false, label_if_then_635);
 ptr_665->setAlignment(8);
 LoadInst* ptr_666 = new LoadInst(ptr___v_addr, "", false, label_if_then_635);
 ptr_666->setAlignment(8);
 std::vector<Value*> ptr_call5_667_params;
 ptr_call5_667_params.push_back(ptr_this1_645);
 ptr_call5_667_params.push_back(ptr_664);
 ptr_call5_667_params.push_back(ptr_665);
 ptr_call5_667_params.push_back(ptr_666);
 CallInst* ptr_call5_667 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_, ptr_call5_667_params, "call5", label_if_then_635);
 ptr_call5_667->setCallingConv(CallingConv::C);
 ptr_call5_667->setTailCall(false);
 AttributeSet ptr_call5_667_PAL;
 ptr_call5_667->setAttributes(ptr_call5_667_PAL);
 
 std::vector<Value*> ptr_coerce_dive6_indices;
 ptr_coerce_dive6_indices.push_back(const_int32_208);
 ptr_coerce_dive6_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive6 = GetElementPtrInst::Create(ptr_retval_637, ptr_coerce_dive6_indices, "coerce.dive6", label_if_then_635);
 StoreInst* void_668 = new StoreInst(ptr_call5_667, ptr_coerce_dive6, false, label_if_then_635);
 BranchInst::Create(label_return, label_if_then_635);
 
 // Block if.end (label_if_end_636)
 std::vector<Value*> ptr_first7_indices;
 ptr_first7_indices.push_back(const_int32_208);
 ptr_first7_indices.push_back(const_int32_208);
 Instruction* ptr_first7 = GetElementPtrInst::Create(ptr___res, ptr_first7_indices, "first7", label_if_end_636);
 LoadInst* ptr_670 = new LoadInst(ptr_first7, "", false, label_if_end_636);
 ptr_670->setAlignment(8);
 CastInst* ptr_671 = new BitCastInst(ptr_670, PointerTy_88, "", label_if_end_636);
 std::vector<Value*> void_672_params;
 void_672_params.push_back(ptr_retval_637);
 void_672_params.push_back(ptr_671);
 CallInst* void_672 = CallInst::Create(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E, void_672_params, "", label_if_end_636);
 void_672->setCallingConv(CallingConv::C);
 void_672->setTailCall(false);
 AttributeSet void_672_PAL;
 void_672->setAttributes(void_672_PAL);
 
 BranchInst::Create(label_return, label_if_end_636);
 
 // Block return (label_return)
 std::vector<Value*> ptr_coerce_dive8_indices;
 ptr_coerce_dive8_indices.push_back(const_int32_208);
 ptr_coerce_dive8_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive8 = GetElementPtrInst::Create(ptr_retval_637, ptr_coerce_dive8_indices, "coerce.dive8", label_return);
 LoadInst* ptr_674 = new LoadInst(ptr_coerce_dive8, "", false, label_return);
 ReturnInst::Create(mod->getContext(), ptr_674, label_return);
 
}

// Function: _ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E (func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E)
{
 Function::arg_iterator args = func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E->arg_begin();
 Value* ptr_this_676 = args++;
 ptr_this_676->setName("this");
 Value* ptr___it = args++;
 ptr___it->setName("__it");
 
 BasicBlock* label_entry_677 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2ERKSt17_Rb_tree_iteratorIS2_E,0);
 
 // Block entry (label_entry_677)
 AllocaInst* ptr_this_addr_678 = new AllocaInst(PointerTy_48, "this.addr", label_entry_677);
 ptr_this_addr_678->setAlignment(8);
 AllocaInst* ptr___it_addr = new AllocaInst(PointerTy_56, "__it.addr", label_entry_677);
 ptr___it_addr->setAlignment(8);
 StoreInst* void_679 = new StoreInst(ptr_this_676, ptr_this_addr_678, false, label_entry_677);
 void_679->setAlignment(8);
 StoreInst* void_680 = new StoreInst(ptr___it, ptr___it_addr, false, label_entry_677);
 void_680->setAlignment(8);
 LoadInst* ptr_this1_681 = new LoadInst(ptr_this_addr_678, "this1", false, label_entry_677);
 std::vector<Value*> ptr__M_node_682_indices;
 ptr__M_node_682_indices.push_back(const_int32_208);
 ptr__M_node_682_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_682 = GetElementPtrInst::Create(ptr_this1_681, ptr__M_node_682_indices, "_M_node", label_entry_677);
 LoadInst* ptr_683 = new LoadInst(ptr___it_addr, "", false, label_entry_677);
 ptr_683->setAlignment(8);
 std::vector<Value*> ptr__M_node2_684_indices;
 ptr__M_node2_684_indices.push_back(const_int32_208);
 ptr__M_node2_684_indices.push_back(const_int32_208);
 Instruction* ptr__M_node2_684 = GetElementPtrInst::Create(ptr_683, ptr__M_node2_684_indices, "_M_node2", label_entry_677);
 LoadInst* ptr_685 = new LoadInst(ptr__M_node2_684, "", false, label_entry_677);
 ptr_685->setAlignment(8);
 StoreInst* void_686 = new StoreInst(ptr_685, ptr__M_node_682, false, label_entry_677);
 void_686->setAlignment(8);
 ReturnInst::Create(mod->getContext(), label_entry_677);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_ (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_->arg_begin();
 Value* ptr_this_688 = args++;
 ptr_this_688->setName("this");
 Value* ptr___position_coerce_689 = args++;
 ptr___position_coerce_689->setName("__position.coerce");
 Value* ptr___k_690 = args++;
 ptr___k_690->setName("__k");
 
 BasicBlock* label_entry_691 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_then_692 = BasicBlock::Create(mod->getContext(), "if.then",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_land_lhs_true = BasicBlock::Create(mod->getContext(), "land.lhs.true",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_then9 = BasicBlock::Create(mod->getContext(), "if.then9",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_else_693 = BasicBlock::Create(mod->getContext(), "if.else",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_else12 = BasicBlock::Create(mod->getContext(), "if.else12",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_then18 = BasicBlock::Create(mod->getContext(), "if.then18",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_then22 = BasicBlock::Create(mod->getContext(), "if.then22",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_else25 = BasicBlock::Create(mod->getContext(), "if.else25",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_then32 = BasicBlock::Create(mod->getContext(), "if.then32",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_then36 = BasicBlock::Create(mod->getContext(), "if.then36",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_else39 = BasicBlock::Create(mod->getContext(), "if.else39",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_else42 = BasicBlock::Create(mod->getContext(), "if.else42",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_else44 = BasicBlock::Create(mod->getContext(), "if.else44",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_then50 = BasicBlock::Create(mod->getContext(), "if.then50",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_then54 = BasicBlock::Create(mod->getContext(), "if.then54",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_else57 = BasicBlock::Create(mod->getContext(), "if.else57",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_then64 = BasicBlock::Create(mod->getContext(), "if.then64",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_then68 = BasicBlock::Create(mod->getContext(), "if.then68",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_else71 = BasicBlock::Create(mod->getContext(), "if.else71",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_else74 = BasicBlock::Create(mod->getContext(), "if.else74",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_if_else76 = BasicBlock::Create(mod->getContext(), "if.else76",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 BasicBlock* label_return_694 = BasicBlock::Create(mod->getContext(), "return",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_,0);
 
 // Block entry (label_entry_691)
 AllocaInst* ptr_retval_695 = new AllocaInst(StructTy_struct_std__pair_3, "retval", label_entry_691);
 ptr_retval_695->setAlignment(8);
 AllocaInst* ptr_this_addr_696 = new AllocaInst(PointerTy_27, "this.addr", label_entry_691);
 ptr_this_addr_696->setAlignment(8);
 AllocaInst* ptr___position_697 = new AllocaInst(StructTy_struct_std___Rb_tree_const_iterator, "__position", label_entry_691);
 ptr___position_697->setAlignment(8);
 AllocaInst* ptr___k_addr_698 = new AllocaInst(PointerTy_33, "__k.addr", label_entry_691);
 ptr___k_addr_698->setAlignment(8);
 AllocaInst* ptr___pos = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "__pos", label_entry_691);
 ptr___pos->setAlignment(8);
 AllocaInst* ptr_ref_tmp_699 = new AllocaInst(PointerTy_2, "ref.tmp", label_entry_691);
 ptr_ref_tmp_699->setAlignment(8);
 AllocaInst* ptr___before = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "__before", label_entry_691);
 ptr___before->setAlignment(8);
 AllocaInst* ptr_ref_tmp37 = new AllocaInst(PointerTy_2, "ref.tmp37", label_entry_691);
 ptr_ref_tmp37->setAlignment(8);
 AllocaInst* ptr___after = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "__after", label_entry_691);
 ptr___after->setAlignment(8);
 AllocaInst* ptr_ref_tmp55 = new AllocaInst(PointerTy_2, "ref.tmp55", label_entry_691);
 ptr_ref_tmp55->setAlignment(8);
 AllocaInst* ptr_ref_tmp69 = new AllocaInst(PointerTy_2, "ref.tmp69", label_entry_691);
 ptr_ref_tmp69->setAlignment(8);
 AllocaInst* ptr_ref_tmp78 = new AllocaInst(PointerTy_2, "ref.tmp78", label_entry_691);
 ptr_ref_tmp78->setAlignment(8);
 StoreInst* void_700 = new StoreInst(ptr_this_688, ptr_this_addr_696, false, label_entry_691);
 void_700->setAlignment(8);
 std::vector<Value*> ptr_coerce_dive_701_indices;
 ptr_coerce_dive_701_indices.push_back(const_int32_208);
 ptr_coerce_dive_701_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_701 = GetElementPtrInst::Create(ptr___position_697, ptr_coerce_dive_701_indices, "coerce.dive", label_entry_691);
 StoreInst* void_702 = new StoreInst(ptr___position_coerce_689, ptr_coerce_dive_701, false, label_entry_691);
 StoreInst* void_703 = new StoreInst(ptr___k_690, ptr___k_addr_698, false, label_entry_691);
 void_703->setAlignment(8);
 LoadInst* ptr_this1_704 = new LoadInst(ptr_this_addr_696, "this1", false, label_entry_691);
 CallInst* ptr_call_705 = CallInst::Create(func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv, ptr___position_697, "call", label_entry_691);
 ptr_call_705->setCallingConv(CallingConv::C);
 ptr_call_705->setTailCall(false);
 AttributeSet ptr_call_705_PAL;
 ptr_call_705->setAttributes(ptr_call_705_PAL);
 
 std::vector<Value*> ptr_coerce_dive2_706_indices;
 ptr_coerce_dive2_706_indices.push_back(const_int32_208);
 ptr_coerce_dive2_706_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive2_706 = GetElementPtrInst::Create(ptr___pos, ptr_coerce_dive2_706_indices, "coerce.dive2", label_entry_691);
 StoreInst* void_707 = new StoreInst(ptr_call_705, ptr_coerce_dive2_706, false, label_entry_691);
 std::vector<Value*> ptr__M_node_708_indices;
 ptr__M_node_708_indices.push_back(const_int32_208);
 ptr__M_node_708_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_708 = GetElementPtrInst::Create(ptr___pos, ptr__M_node_708_indices, "_M_node", label_entry_691);
 LoadInst* ptr_709 = new LoadInst(ptr__M_node_708, "", false, label_entry_691);
 ptr_709->setAlignment(8);
 CallInst* ptr_call3_710 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv, ptr_this1_704, "call3", label_entry_691);
 ptr_call3_710->setCallingConv(CallingConv::C);
 ptr_call3_710->setTailCall(false);
 AttributeSet ptr_call3_710_PAL;
 ptr_call3_710->setAttributes(ptr_call3_710_PAL);
 
 CastInst* ptr_711 = new BitCastInst(ptr_call3_710, PointerTy_2, "", label_entry_691);
 ICmpInst* int1_cmp_712 = new ICmpInst(*label_entry_691, ICmpInst::ICMP_EQ, ptr_709, ptr_711, "cmp");
 BranchInst::Create(label_if_then_692, label_if_else12, int1_cmp_712, label_entry_691);
 
 // Block if.then (label_if_then_692)
 CallInst* int64_call4 = CallInst::Create(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv, ptr_this1_704, "call4", label_if_then_692);
 int64_call4->setCallingConv(CallingConv::C);
 int64_call4->setTailCall(false);
 AttributeSet int64_call4_PAL;
 int64_call4->setAttributes(int64_call4_PAL);
 
 ICmpInst* int1_cmp5 = new ICmpInst(*label_if_then_692, ICmpInst::ICMP_UGT, int64_call4, const_int64_212, "cmp5");
 BranchInst::Create(label_land_lhs_true, label_if_else_693, int1_cmp5, label_if_then_692);
 
 // Block land.lhs.true (label_land_lhs_true)
 std::vector<Value*> ptr__M_impl_715_indices;
 ptr__M_impl_715_indices.push_back(const_int32_208);
 ptr__M_impl_715_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_715 = GetElementPtrInst::Create(ptr_this1_704, ptr__M_impl_715_indices, "_M_impl", label_land_lhs_true);
 std::vector<Value*> ptr__M_key_compare_indices;
 ptr__M_key_compare_indices.push_back(const_int32_208);
 ptr__M_key_compare_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare = GetElementPtrInst::Create(ptr__M_impl_715, ptr__M_key_compare_indices, "_M_key_compare", label_land_lhs_true);
 CallInst* ptr_call6_716 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv, ptr_this1_704, "call6", label_land_lhs_true);
 ptr_call6_716->setCallingConv(CallingConv::C);
 ptr_call6_716->setTailCall(false);
 AttributeSet ptr_call6_716_PAL;
 ptr_call6_716->setAttributes(ptr_call6_716_PAL);
 
 LoadInst* ptr_717 = new LoadInst(ptr_call6_716, "", false, label_land_lhs_true);
 CallInst* ptr_call7_718 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base, ptr_717, "call7", label_land_lhs_true);
 ptr_call7_718->setCallingConv(CallingConv::C);
 ptr_call7_718->setTailCall(false);
 AttributeSet ptr_call7_718_PAL;
 ptr_call7_718->setAttributes(ptr_call7_718_PAL);
 
 LoadInst* ptr_719 = new LoadInst(ptr___k_addr_698, "", false, label_land_lhs_true);
 ptr_719->setAlignment(8);
 std::vector<Value*> int1_call8_params;
 int1_call8_params.push_back(ptr__M_key_compare);
 int1_call8_params.push_back(ptr_call7_718);
 int1_call8_params.push_back(ptr_719);
 CallInst* int1_call8 = CallInst::Create(func__ZNKSt4lessISsEclERKSsS2_, int1_call8_params, "call8", label_land_lhs_true);
 int1_call8->setCallingConv(CallingConv::C);
 int1_call8->setTailCall(false);
 AttributeSet int1_call8_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call8_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call8->setAttributes(int1_call8_PAL);
 
 BranchInst::Create(label_if_then9, label_if_else_693, int1_call8, label_land_lhs_true);
 
 // Block if.then9 (label_if_then9)
 StoreInst* void_721 = new StoreInst(const_ptr_222, ptr_ref_tmp_699, false, label_if_then9);
 CallInst* ptr_call10 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv, ptr_this1_704, "call10", label_if_then9);
 ptr_call10->setCallingConv(CallingConv::C);
 ptr_call10->setTailCall(false);
 AttributeSet ptr_call10_PAL;
 ptr_call10->setAttributes(ptr_call10_PAL);
 
 std::vector<Value*> void_722_params;
 void_722_params.push_back(ptr_retval_695);
 void_722_params.push_back(ptr_ref_tmp_699);
 void_722_params.push_back(ptr_call10);
 CallInst* void_722 = CallInst::Create(func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_, void_722_params, "", label_if_then9);
 void_722->setCallingConv(CallingConv::C);
 void_722->setTailCall(false);
 AttributeSet void_722_PAL;
 void_722->setAttributes(void_722_PAL);
 
 BranchInst::Create(label_return_694, label_if_then9);
 
 // Block if.else (label_if_else_693)
 LoadInst* ptr_724 = new LoadInst(ptr___k_addr_698, "", false, label_if_else_693);
 ptr_724->setAlignment(8);
 std::vector<Value*> struct_call11_params;
 struct_call11_params.push_back(ptr_this1_704);
 struct_call11_params.push_back(ptr_724);
 CallInst* struct_call11 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_, struct_call11_params, "call11", label_if_else_693);
 struct_call11->setCallingConv(CallingConv::C);
 struct_call11->setTailCall(false);
 AttributeSet struct_call11_PAL;
 struct_call11->setAttributes(struct_call11_PAL);
 
 CastInst* ptr_725 = new BitCastInst(ptr_retval_695, PointerTy_114, "", label_if_else_693);
 std::vector<Value*> ptr_726_indices;
 ptr_726_indices.push_back(const_int32_208);
 ptr_726_indices.push_back(const_int32_208);
 Instruction* ptr_726 = GetElementPtrInst::Create(ptr_725, ptr_726_indices, "", label_if_else_693);
 std::vector<unsigned> ptr_727_indices;
 ptr_727_indices.push_back(0);
 ExtractValueInst* ptr_727 = ExtractValueInst::Create(struct_call11, ptr_727_indices, "", label_if_else_693);
 StoreInst* void_728 = new StoreInst(ptr_727, ptr_726, false, label_if_else_693);
 void_728->setAlignment(1);
 std::vector<Value*> ptr_729_indices;
 ptr_729_indices.push_back(const_int32_208);
 ptr_729_indices.push_back(const_int32_211);
 Instruction* ptr_729 = GetElementPtrInst::Create(ptr_725, ptr_729_indices, "", label_if_else_693);
 std::vector<unsigned> ptr_730_indices;
 ptr_730_indices.push_back(1);
 ExtractValueInst* ptr_730 = ExtractValueInst::Create(struct_call11, ptr_730_indices, "", label_if_else_693);
 StoreInst* void_731 = new StoreInst(ptr_730, ptr_729, false, label_if_else_693);
 void_731->setAlignment(1);
 BranchInst::Create(label_return_694, label_if_else_693);
 
 // Block if.else12 (label_if_else12)
 std::vector<Value*> ptr__M_impl13_indices;
 ptr__M_impl13_indices.push_back(const_int32_208);
 ptr__M_impl13_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl13 = GetElementPtrInst::Create(ptr_this1_704, ptr__M_impl13_indices, "_M_impl13", label_if_else12);
 std::vector<Value*> ptr__M_key_compare14_indices;
 ptr__M_key_compare14_indices.push_back(const_int32_208);
 ptr__M_key_compare14_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare14 = GetElementPtrInst::Create(ptr__M_impl13, ptr__M_key_compare14_indices, "_M_key_compare14", label_if_else12);
 LoadInst* ptr_733 = new LoadInst(ptr___k_addr_698, "", false, label_if_else12);
 ptr_733->setAlignment(8);
 std::vector<Value*> ptr__M_node15_indices;
 ptr__M_node15_indices.push_back(const_int32_208);
 ptr__M_node15_indices.push_back(const_int32_208);
 Instruction* ptr__M_node15 = GetElementPtrInst::Create(ptr___pos, ptr__M_node15_indices, "_M_node15", label_if_else12);
 LoadInst* ptr_734 = new LoadInst(ptr__M_node15, "", false, label_if_else12);
 ptr_734->setAlignment(8);
 CallInst* ptr_call16 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base, ptr_734, "call16", label_if_else12);
 ptr_call16->setCallingConv(CallingConv::C);
 ptr_call16->setTailCall(false);
 AttributeSet ptr_call16_PAL;
 ptr_call16->setAttributes(ptr_call16_PAL);
 
 std::vector<Value*> int1_call17_params;
 int1_call17_params.push_back(ptr__M_key_compare14);
 int1_call17_params.push_back(ptr_733);
 int1_call17_params.push_back(ptr_call16);
 CallInst* int1_call17 = CallInst::Create(func__ZNKSt4lessISsEclERKSsS2_, int1_call17_params, "call17", label_if_else12);
 int1_call17->setCallingConv(CallingConv::C);
 int1_call17->setTailCall(false);
 AttributeSet int1_call17_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call17_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call17->setAttributes(int1_call17_PAL);
 
 BranchInst::Create(label_if_then18, label_if_else44, int1_call17, label_if_else12);
 
 // Block if.then18 (label_if_then18)
 CastInst* ptr_736 = new BitCastInst(ptr___before, PointerTy_1, "", label_if_then18);
 CastInst* ptr_737 = new BitCastInst(ptr___pos, PointerTy_1, "", label_if_then18);
 std::vector<Value*> void_738_params;
 void_738_params.push_back(ptr_736);
 void_738_params.push_back(ptr_737);
 void_738_params.push_back(const_int64_216);
 void_738_params.push_back(const_int32_217);
 void_738_params.push_back(const_int1_218);
 CallInst* void_738 = CallInst::Create(func_llvm_memcpy_p0i8_p0i8_i64, void_738_params, "", label_if_then18);
 void_738->setCallingConv(CallingConv::C);
 void_738->setTailCall(false);
 AttributeSet void_738_PAL;
 void_738->setAttributes(void_738_PAL);
 
 std::vector<Value*> ptr__M_node19_indices;
 ptr__M_node19_indices.push_back(const_int32_208);
 ptr__M_node19_indices.push_back(const_int32_208);
 Instruction* ptr__M_node19 = GetElementPtrInst::Create(ptr___pos, ptr__M_node19_indices, "_M_node19", label_if_then18);
 LoadInst* ptr_739 = new LoadInst(ptr__M_node19, "", false, label_if_then18);
 ptr_739->setAlignment(8);
 CallInst* ptr_call20 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv, ptr_this1_704, "call20", label_if_then18);
 ptr_call20->setCallingConv(CallingConv::C);
 ptr_call20->setTailCall(false);
 AttributeSet ptr_call20_PAL;
 ptr_call20->setAttributes(ptr_call20_PAL);
 
 LoadInst* ptr_740 = new LoadInst(ptr_call20, "", false, label_if_then18);
 ICmpInst* int1_cmp21 = new ICmpInst(*label_if_then18, ICmpInst::ICMP_EQ, ptr_739, ptr_740, "cmp21");
 BranchInst::Create(label_if_then22, label_if_else25, int1_cmp21, label_if_then18);
 
 // Block if.then22 (label_if_then22)
 CallInst* ptr_call23 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv, ptr_this1_704, "call23", label_if_then22);
 ptr_call23->setCallingConv(CallingConv::C);
 ptr_call23->setTailCall(false);
 AttributeSet ptr_call23_PAL;
 ptr_call23->setAttributes(ptr_call23_PAL);
 
 CallInst* ptr_call24 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv, ptr_this1_704, "call24", label_if_then22);
 ptr_call24->setCallingConv(CallingConv::C);
 ptr_call24->setTailCall(false);
 AttributeSet ptr_call24_PAL;
 ptr_call24->setAttributes(ptr_call24_PAL);
 
 std::vector<Value*> void_742_params;
 void_742_params.push_back(ptr_retval_695);
 void_742_params.push_back(ptr_call23);
 void_742_params.push_back(ptr_call24);
 CallInst* void_742 = CallInst::Create(func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_, void_742_params, "", label_if_then22);
 void_742->setCallingConv(CallingConv::C);
 void_742->setTailCall(false);
 AttributeSet void_742_PAL;
 void_742->setAttributes(void_742_PAL);
 
 BranchInst::Create(label_return_694, label_if_then22);
 
 // Block if.else25 (label_if_else25)
 std::vector<Value*> ptr__M_impl26_indices;
 ptr__M_impl26_indices.push_back(const_int32_208);
 ptr__M_impl26_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl26 = GetElementPtrInst::Create(ptr_this1_704, ptr__M_impl26_indices, "_M_impl26", label_if_else25);
 std::vector<Value*> ptr__M_key_compare27_indices;
 ptr__M_key_compare27_indices.push_back(const_int32_208);
 ptr__M_key_compare27_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare27 = GetElementPtrInst::Create(ptr__M_impl26, ptr__M_key_compare27_indices, "_M_key_compare27", label_if_else25);
 CallInst* ptr_call28 = CallInst::Create(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv, ptr___before, "call28", label_if_else25);
 ptr_call28->setCallingConv(CallingConv::C);
 ptr_call28->setTailCall(false);
 AttributeSet ptr_call28_PAL;
 ptr_call28->setAttributes(ptr_call28_PAL);
 
 std::vector<Value*> ptr__M_node29_indices;
 ptr__M_node29_indices.push_back(const_int32_208);
 ptr__M_node29_indices.push_back(const_int32_208);
 Instruction* ptr__M_node29 = GetElementPtrInst::Create(ptr_call28, ptr__M_node29_indices, "_M_node29", label_if_else25);
 LoadInst* ptr_744 = new LoadInst(ptr__M_node29, "", false, label_if_else25);
 ptr_744->setAlignment(8);
 CallInst* ptr_call30 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base, ptr_744, "call30", label_if_else25);
 ptr_call30->setCallingConv(CallingConv::C);
 ptr_call30->setTailCall(false);
 AttributeSet ptr_call30_PAL;
 ptr_call30->setAttributes(ptr_call30_PAL);
 
 LoadInst* ptr_745 = new LoadInst(ptr___k_addr_698, "", false, label_if_else25);
 ptr_745->setAlignment(8);
 std::vector<Value*> int1_call31_params;
 int1_call31_params.push_back(ptr__M_key_compare27);
 int1_call31_params.push_back(ptr_call30);
 int1_call31_params.push_back(ptr_745);
 CallInst* int1_call31 = CallInst::Create(func__ZNKSt4lessISsEclERKSsS2_, int1_call31_params, "call31", label_if_else25);
 int1_call31->setCallingConv(CallingConv::C);
 int1_call31->setTailCall(false);
 AttributeSet int1_call31_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call31_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call31->setAttributes(int1_call31_PAL);
 
 BranchInst::Create(label_if_then32, label_if_else42, int1_call31, label_if_else25);
 
 // Block if.then32 (label_if_then32)
 std::vector<Value*> ptr__M_node33_indices;
 ptr__M_node33_indices.push_back(const_int32_208);
 ptr__M_node33_indices.push_back(const_int32_208);
 Instruction* ptr__M_node33 = GetElementPtrInst::Create(ptr___before, ptr__M_node33_indices, "_M_node33", label_if_then32);
 LoadInst* ptr_747 = new LoadInst(ptr__M_node33, "", false, label_if_then32);
 ptr_747->setAlignment(8);
 CallInst* ptr_call34 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base, ptr_747, "call34", label_if_then32);
 ptr_call34->setCallingConv(CallingConv::C);
 ptr_call34->setTailCall(false);
 AttributeSet ptr_call34_PAL;
 ptr_call34->setAttributes(ptr_call34_PAL);
 
 ICmpInst* int1_cmp35 = new ICmpInst(*label_if_then32, ICmpInst::ICMP_EQ, ptr_call34, const_ptr_223, "cmp35");
 BranchInst::Create(label_if_then36, label_if_else39, int1_cmp35, label_if_then32);
 
 // Block if.then36 (label_if_then36)
 StoreInst* void_749 = new StoreInst(const_ptr_222, ptr_ref_tmp37, false, label_if_then36);
 std::vector<Value*> ptr__M_node38_indices;
 ptr__M_node38_indices.push_back(const_int32_208);
 ptr__M_node38_indices.push_back(const_int32_208);
 Instruction* ptr__M_node38 = GetElementPtrInst::Create(ptr___before, ptr__M_node38_indices, "_M_node38", label_if_then36);
 std::vector<Value*> void_750_params;
 void_750_params.push_back(ptr_retval_695);
 void_750_params.push_back(ptr_ref_tmp37);
 void_750_params.push_back(ptr__M_node38);
 CallInst* void_750 = CallInst::Create(func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_, void_750_params, "", label_if_then36);
 void_750->setCallingConv(CallingConv::C);
 void_750->setTailCall(false);
 AttributeSet void_750_PAL;
 void_750->setAttributes(void_750_PAL);
 
 BranchInst::Create(label_return_694, label_if_then36);
 
 // Block if.else39 (label_if_else39)
 std::vector<Value*> ptr__M_node40_indices;
 ptr__M_node40_indices.push_back(const_int32_208);
 ptr__M_node40_indices.push_back(const_int32_208);
 Instruction* ptr__M_node40 = GetElementPtrInst::Create(ptr___pos, ptr__M_node40_indices, "_M_node40", label_if_else39);
 std::vector<Value*> ptr__M_node41_indices;
 ptr__M_node41_indices.push_back(const_int32_208);
 ptr__M_node41_indices.push_back(const_int32_208);
 Instruction* ptr__M_node41 = GetElementPtrInst::Create(ptr___pos, ptr__M_node41_indices, "_M_node41", label_if_else39);
 std::vector<Value*> void_752_params;
 void_752_params.push_back(ptr_retval_695);
 void_752_params.push_back(ptr__M_node40);
 void_752_params.push_back(ptr__M_node41);
 CallInst* void_752 = CallInst::Create(func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_, void_752_params, "", label_if_else39);
 void_752->setCallingConv(CallingConv::C);
 void_752->setTailCall(false);
 AttributeSet void_752_PAL;
 void_752->setAttributes(void_752_PAL);
 
 BranchInst::Create(label_return_694, label_if_else39);
 
 // Block if.else42 (label_if_else42)
 LoadInst* ptr_754 = new LoadInst(ptr___k_addr_698, "", false, label_if_else42);
 ptr_754->setAlignment(8);
 std::vector<Value*> struct_call43_params;
 struct_call43_params.push_back(ptr_this1_704);
 struct_call43_params.push_back(ptr_754);
 CallInst* struct_call43 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_, struct_call43_params, "call43", label_if_else42);
 struct_call43->setCallingConv(CallingConv::C);
 struct_call43->setTailCall(false);
 AttributeSet struct_call43_PAL;
 struct_call43->setAttributes(struct_call43_PAL);
 
 CastInst* ptr_755 = new BitCastInst(ptr_retval_695, PointerTy_114, "", label_if_else42);
 std::vector<Value*> ptr_756_indices;
 ptr_756_indices.push_back(const_int32_208);
 ptr_756_indices.push_back(const_int32_208);
 Instruction* ptr_756 = GetElementPtrInst::Create(ptr_755, ptr_756_indices, "", label_if_else42);
 std::vector<unsigned> ptr_757_indices;
 ptr_757_indices.push_back(0);
 ExtractValueInst* ptr_757 = ExtractValueInst::Create(struct_call43, ptr_757_indices, "", label_if_else42);
 StoreInst* void_758 = new StoreInst(ptr_757, ptr_756, false, label_if_else42);
 void_758->setAlignment(1);
 std::vector<Value*> ptr_759_indices;
 ptr_759_indices.push_back(const_int32_208);
 ptr_759_indices.push_back(const_int32_211);
 Instruction* ptr_759 = GetElementPtrInst::Create(ptr_755, ptr_759_indices, "", label_if_else42);
 std::vector<unsigned> ptr_760_indices;
 ptr_760_indices.push_back(1);
 ExtractValueInst* ptr_760 = ExtractValueInst::Create(struct_call43, ptr_760_indices, "", label_if_else42);
 StoreInst* void_761 = new StoreInst(ptr_760, ptr_759, false, label_if_else42);
 void_761->setAlignment(1);
 BranchInst::Create(label_return_694, label_if_else42);
 
 // Block if.else44 (label_if_else44)
 std::vector<Value*> ptr__M_impl45_indices;
 ptr__M_impl45_indices.push_back(const_int32_208);
 ptr__M_impl45_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl45 = GetElementPtrInst::Create(ptr_this1_704, ptr__M_impl45_indices, "_M_impl45", label_if_else44);
 std::vector<Value*> ptr__M_key_compare46_indices;
 ptr__M_key_compare46_indices.push_back(const_int32_208);
 ptr__M_key_compare46_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare46 = GetElementPtrInst::Create(ptr__M_impl45, ptr__M_key_compare46_indices, "_M_key_compare46", label_if_else44);
 std::vector<Value*> ptr__M_node47_indices;
 ptr__M_node47_indices.push_back(const_int32_208);
 ptr__M_node47_indices.push_back(const_int32_208);
 Instruction* ptr__M_node47 = GetElementPtrInst::Create(ptr___pos, ptr__M_node47_indices, "_M_node47", label_if_else44);
 LoadInst* ptr_763 = new LoadInst(ptr__M_node47, "", false, label_if_else44);
 ptr_763->setAlignment(8);
 CallInst* ptr_call48 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base, ptr_763, "call48", label_if_else44);
 ptr_call48->setCallingConv(CallingConv::C);
 ptr_call48->setTailCall(false);
 AttributeSet ptr_call48_PAL;
 ptr_call48->setAttributes(ptr_call48_PAL);
 
 LoadInst* ptr_764 = new LoadInst(ptr___k_addr_698, "", false, label_if_else44);
 ptr_764->setAlignment(8);
 std::vector<Value*> int1_call49_params;
 int1_call49_params.push_back(ptr__M_key_compare46);
 int1_call49_params.push_back(ptr_call48);
 int1_call49_params.push_back(ptr_764);
 CallInst* int1_call49 = CallInst::Create(func__ZNKSt4lessISsEclERKSsS2_, int1_call49_params, "call49", label_if_else44);
 int1_call49->setCallingConv(CallingConv::C);
 int1_call49->setTailCall(false);
 AttributeSet int1_call49_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call49_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call49->setAttributes(int1_call49_PAL);
 
 BranchInst::Create(label_if_then50, label_if_else76, int1_call49, label_if_else44);
 
 // Block if.then50 (label_if_then50)
 CastInst* ptr_766 = new BitCastInst(ptr___after, PointerTy_1, "", label_if_then50);
 CastInst* ptr_767 = new BitCastInst(ptr___pos, PointerTy_1, "", label_if_then50);
 std::vector<Value*> void_768_params;
 void_768_params.push_back(ptr_766);
 void_768_params.push_back(ptr_767);
 void_768_params.push_back(const_int64_216);
 void_768_params.push_back(const_int32_217);
 void_768_params.push_back(const_int1_218);
 CallInst* void_768 = CallInst::Create(func_llvm_memcpy_p0i8_p0i8_i64, void_768_params, "", label_if_then50);
 void_768->setCallingConv(CallingConv::C);
 void_768->setTailCall(false);
 AttributeSet void_768_PAL;
 void_768->setAttributes(void_768_PAL);
 
 std::vector<Value*> ptr__M_node51_indices;
 ptr__M_node51_indices.push_back(const_int32_208);
 ptr__M_node51_indices.push_back(const_int32_208);
 Instruction* ptr__M_node51 = GetElementPtrInst::Create(ptr___pos, ptr__M_node51_indices, "_M_node51", label_if_then50);
 LoadInst* ptr_769 = new LoadInst(ptr__M_node51, "", false, label_if_then50);
 ptr_769->setAlignment(8);
 CallInst* ptr_call52 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv, ptr_this1_704, "call52", label_if_then50);
 ptr_call52->setCallingConv(CallingConv::C);
 ptr_call52->setTailCall(false);
 AttributeSet ptr_call52_PAL;
 ptr_call52->setAttributes(ptr_call52_PAL);
 
 LoadInst* ptr_770 = new LoadInst(ptr_call52, "", false, label_if_then50);
 ICmpInst* int1_cmp53 = new ICmpInst(*label_if_then50, ICmpInst::ICMP_EQ, ptr_769, ptr_770, "cmp53");
 BranchInst::Create(label_if_then54, label_if_else57, int1_cmp53, label_if_then50);
 
 // Block if.then54 (label_if_then54)
 StoreInst* void_772 = new StoreInst(const_ptr_222, ptr_ref_tmp55, false, label_if_then54);
 CallInst* ptr_call56 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv, ptr_this1_704, "call56", label_if_then54);
 ptr_call56->setCallingConv(CallingConv::C);
 ptr_call56->setTailCall(false);
 AttributeSet ptr_call56_PAL;
 ptr_call56->setAttributes(ptr_call56_PAL);
 
 std::vector<Value*> void_773_params;
 void_773_params.push_back(ptr_retval_695);
 void_773_params.push_back(ptr_ref_tmp55);
 void_773_params.push_back(ptr_call56);
 CallInst* void_773 = CallInst::Create(func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_, void_773_params, "", label_if_then54);
 void_773->setCallingConv(CallingConv::C);
 void_773->setTailCall(false);
 AttributeSet void_773_PAL;
 void_773->setAttributes(void_773_PAL);
 
 BranchInst::Create(label_return_694, label_if_then54);
 
 // Block if.else57 (label_if_else57)
 std::vector<Value*> ptr__M_impl58_indices;
 ptr__M_impl58_indices.push_back(const_int32_208);
 ptr__M_impl58_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl58 = GetElementPtrInst::Create(ptr_this1_704, ptr__M_impl58_indices, "_M_impl58", label_if_else57);
 std::vector<Value*> ptr__M_key_compare59_indices;
 ptr__M_key_compare59_indices.push_back(const_int32_208);
 ptr__M_key_compare59_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare59 = GetElementPtrInst::Create(ptr__M_impl58, ptr__M_key_compare59_indices, "_M_key_compare59", label_if_else57);
 LoadInst* ptr_775 = new LoadInst(ptr___k_addr_698, "", false, label_if_else57);
 ptr_775->setAlignment(8);
 CallInst* ptr_call60 = CallInst::Create(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv, ptr___after, "call60", label_if_else57);
 ptr_call60->setCallingConv(CallingConv::C);
 ptr_call60->setTailCall(false);
 AttributeSet ptr_call60_PAL;
 ptr_call60->setAttributes(ptr_call60_PAL);
 
 std::vector<Value*> ptr__M_node61_indices;
 ptr__M_node61_indices.push_back(const_int32_208);
 ptr__M_node61_indices.push_back(const_int32_208);
 Instruction* ptr__M_node61 = GetElementPtrInst::Create(ptr_call60, ptr__M_node61_indices, "_M_node61", label_if_else57);
 LoadInst* ptr_776 = new LoadInst(ptr__M_node61, "", false, label_if_else57);
 ptr_776->setAlignment(8);
 CallInst* ptr_call62 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base, ptr_776, "call62", label_if_else57);
 ptr_call62->setCallingConv(CallingConv::C);
 ptr_call62->setTailCall(false);
 AttributeSet ptr_call62_PAL;
 ptr_call62->setAttributes(ptr_call62_PAL);
 
 std::vector<Value*> int1_call63_params;
 int1_call63_params.push_back(ptr__M_key_compare59);
 int1_call63_params.push_back(ptr_775);
 int1_call63_params.push_back(ptr_call62);
 CallInst* int1_call63 = CallInst::Create(func__ZNKSt4lessISsEclERKSsS2_, int1_call63_params, "call63", label_if_else57);
 int1_call63->setCallingConv(CallingConv::C);
 int1_call63->setTailCall(false);
 AttributeSet int1_call63_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call63_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call63->setAttributes(int1_call63_PAL);
 
 BranchInst::Create(label_if_then64, label_if_else74, int1_call63, label_if_else57);
 
 // Block if.then64 (label_if_then64)
 std::vector<Value*> ptr__M_node65_indices;
 ptr__M_node65_indices.push_back(const_int32_208);
 ptr__M_node65_indices.push_back(const_int32_208);
 Instruction* ptr__M_node65 = GetElementPtrInst::Create(ptr___pos, ptr__M_node65_indices, "_M_node65", label_if_then64);
 LoadInst* ptr_778 = new LoadInst(ptr__M_node65, "", false, label_if_then64);
 ptr_778->setAlignment(8);
 CallInst* ptr_call66 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base, ptr_778, "call66", label_if_then64);
 ptr_call66->setCallingConv(CallingConv::C);
 ptr_call66->setTailCall(false);
 AttributeSet ptr_call66_PAL;
 ptr_call66->setAttributes(ptr_call66_PAL);
 
 ICmpInst* int1_cmp67 = new ICmpInst(*label_if_then64, ICmpInst::ICMP_EQ, ptr_call66, const_ptr_223, "cmp67");
 BranchInst::Create(label_if_then68, label_if_else71, int1_cmp67, label_if_then64);
 
 // Block if.then68 (label_if_then68)
 StoreInst* void_780 = new StoreInst(const_ptr_222, ptr_ref_tmp69, false, label_if_then68);
 std::vector<Value*> ptr__M_node70_indices;
 ptr__M_node70_indices.push_back(const_int32_208);
 ptr__M_node70_indices.push_back(const_int32_208);
 Instruction* ptr__M_node70 = GetElementPtrInst::Create(ptr___pos, ptr__M_node70_indices, "_M_node70", label_if_then68);
 std::vector<Value*> void_781_params;
 void_781_params.push_back(ptr_retval_695);
 void_781_params.push_back(ptr_ref_tmp69);
 void_781_params.push_back(ptr__M_node70);
 CallInst* void_781 = CallInst::Create(func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_, void_781_params, "", label_if_then68);
 void_781->setCallingConv(CallingConv::C);
 void_781->setTailCall(false);
 AttributeSet void_781_PAL;
 void_781->setAttributes(void_781_PAL);
 
 BranchInst::Create(label_return_694, label_if_then68);
 
 // Block if.else71 (label_if_else71)
 std::vector<Value*> ptr__M_node72_indices;
 ptr__M_node72_indices.push_back(const_int32_208);
 ptr__M_node72_indices.push_back(const_int32_208);
 Instruction* ptr__M_node72 = GetElementPtrInst::Create(ptr___after, ptr__M_node72_indices, "_M_node72", label_if_else71);
 std::vector<Value*> ptr__M_node73_indices;
 ptr__M_node73_indices.push_back(const_int32_208);
 ptr__M_node73_indices.push_back(const_int32_208);
 Instruction* ptr__M_node73 = GetElementPtrInst::Create(ptr___after, ptr__M_node73_indices, "_M_node73", label_if_else71);
 std::vector<Value*> void_783_params;
 void_783_params.push_back(ptr_retval_695);
 void_783_params.push_back(ptr__M_node72);
 void_783_params.push_back(ptr__M_node73);
 CallInst* void_783 = CallInst::Create(func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_, void_783_params, "", label_if_else71);
 void_783->setCallingConv(CallingConv::C);
 void_783->setTailCall(false);
 AttributeSet void_783_PAL;
 void_783->setAttributes(void_783_PAL);
 
 BranchInst::Create(label_return_694, label_if_else71);
 
 // Block if.else74 (label_if_else74)
 LoadInst* ptr_785 = new LoadInst(ptr___k_addr_698, "", false, label_if_else74);
 ptr_785->setAlignment(8);
 std::vector<Value*> struct_call75_params;
 struct_call75_params.push_back(ptr_this1_704);
 struct_call75_params.push_back(ptr_785);
 CallInst* struct_call75 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_, struct_call75_params, "call75", label_if_else74);
 struct_call75->setCallingConv(CallingConv::C);
 struct_call75->setTailCall(false);
 AttributeSet struct_call75_PAL;
 struct_call75->setAttributes(struct_call75_PAL);
 
 CastInst* ptr_786 = new BitCastInst(ptr_retval_695, PointerTy_114, "", label_if_else74);
 std::vector<Value*> ptr_787_indices;
 ptr_787_indices.push_back(const_int32_208);
 ptr_787_indices.push_back(const_int32_208);
 Instruction* ptr_787 = GetElementPtrInst::Create(ptr_786, ptr_787_indices, "", label_if_else74);
 std::vector<unsigned> ptr_788_indices;
 ptr_788_indices.push_back(0);
 ExtractValueInst* ptr_788 = ExtractValueInst::Create(struct_call75, ptr_788_indices, "", label_if_else74);
 StoreInst* void_789 = new StoreInst(ptr_788, ptr_787, false, label_if_else74);
 void_789->setAlignment(1);
 std::vector<Value*> ptr_790_indices;
 ptr_790_indices.push_back(const_int32_208);
 ptr_790_indices.push_back(const_int32_211);
 Instruction* ptr_790 = GetElementPtrInst::Create(ptr_786, ptr_790_indices, "", label_if_else74);
 std::vector<unsigned> ptr_791_indices;
 ptr_791_indices.push_back(1);
 ExtractValueInst* ptr_791 = ExtractValueInst::Create(struct_call75, ptr_791_indices, "", label_if_else74);
 StoreInst* void_792 = new StoreInst(ptr_791, ptr_790, false, label_if_else74);
 void_792->setAlignment(1);
 BranchInst::Create(label_return_694, label_if_else74);
 
 // Block if.else76 (label_if_else76)
 std::vector<Value*> ptr__M_node77_indices;
 ptr__M_node77_indices.push_back(const_int32_208);
 ptr__M_node77_indices.push_back(const_int32_208);
 Instruction* ptr__M_node77 = GetElementPtrInst::Create(ptr___pos, ptr__M_node77_indices, "_M_node77", label_if_else76);
 StoreInst* void_794 = new StoreInst(const_ptr_222, ptr_ref_tmp78, false, label_if_else76);
 std::vector<Value*> void_795_params;
 void_795_params.push_back(ptr_retval_695);
 void_795_params.push_back(ptr__M_node77);
 void_795_params.push_back(ptr_ref_tmp78);
 CallInst* void_795 = CallInst::Create(func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_, void_795_params, "", label_if_else76);
 void_795->setCallingConv(CallingConv::C);
 void_795->setTailCall(false);
 AttributeSet void_795_PAL;
 void_795->setAttributes(void_795_PAL);
 
 BranchInst::Create(label_return_694, label_if_else76);
 
 // Block return (label_return_694)
 CastInst* ptr_797 = new BitCastInst(ptr_retval_695, PointerTy_114, "", label_return_694);
 LoadInst* struct_798 = new LoadInst(ptr_797, "", false, label_return_694);
 struct_798->setAlignment(1);
 ReturnInst::Create(mod->getContext(), struct_798, label_return_694);
 
}

// Function: _ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_ (func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_)
{
 Function::arg_iterator args = func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_->arg_begin();
 Value* ptr_this_800 = args++;
 ptr_this_800->setName("this");
 Value* ptr___x_801 = args++;
 ptr___x_801->setName("__x");
 
 BasicBlock* label_entry_802 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_,0);
 
 // Block entry (label_entry_802)
 AllocaInst* ptr_this_addr_803 = new AllocaInst(PointerTy_108, "this.addr", label_entry_802);
 ptr_this_addr_803->setAlignment(8);
 AllocaInst* ptr___x_addr_804 = new AllocaInst(PointerTy_58, "__x.addr", label_entry_802);
 ptr___x_addr_804->setAlignment(8);
 StoreInst* void_805 = new StoreInst(ptr_this_800, ptr_this_addr_803, false, label_entry_802);
 void_805->setAlignment(8);
 StoreInst* void_806 = new StoreInst(ptr___x_801, ptr___x_addr_804, false, label_entry_802);
 void_806->setAlignment(8);
 LoadInst* ptr_this1_807 = new LoadInst(ptr_this_addr_803, "this1", false, label_entry_802);
 LoadInst* ptr_808 = new LoadInst(ptr___x_addr_804, "", false, label_entry_802);
 ptr_808->setAlignment(8);
 std::vector<Value*> ptr_first_809_indices;
 ptr_first_809_indices.push_back(const_int32_208);
 ptr_first_809_indices.push_back(const_int32_208);
 Instruction* ptr_first_809 = GetElementPtrInst::Create(ptr_808, ptr_first_809_indices, "first", label_entry_802);
 ReturnInst::Create(mod->getContext(), ptr_first_809, label_entry_802);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_ (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_->arg_begin();
 Value* ptr_this_811 = args++;
 ptr_this_811->setName("this");
 Value* ptr___x_812 = args++;
 ptr___x_812->setName("__x");
 Value* ptr___p = args++;
 ptr___p->setName("__p");
 Value* ptr___v_813 = args++;
 ptr___v_813->setName("__v");
 
 BasicBlock* label_entry_814 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_,0);
 BasicBlock* label_lor_lhs_false_815 = BasicBlock::Create(mod->getContext(), "lor.lhs.false",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_,0);
 BasicBlock* label_lor_rhs = BasicBlock::Create(mod->getContext(), "lor.rhs",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_,0);
 BasicBlock* label_lor_end = BasicBlock::Create(mod->getContext(), "lor.end",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE10_M_insert_EPSt18_Rb_tree_node_baseSA_RKS2_,0);
 
 // Block entry (label_entry_814)
 AllocaInst* ptr_retval_816 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "retval", label_entry_814);
 ptr_retval_816->setAlignment(8);
 AllocaInst* ptr_this_addr_817 = new AllocaInst(PointerTy_27, "this.addr", label_entry_814);
 ptr_this_addr_817->setAlignment(8);
 AllocaInst* ptr___x_addr_818 = new AllocaInst(PointerTy_2, "__x.addr", label_entry_814);
 ptr___x_addr_818->setAlignment(8);
 AllocaInst* ptr___p_addr = new AllocaInst(PointerTy_2, "__p.addr", label_entry_814);
 ptr___p_addr->setAlignment(8);
 AllocaInst* ptr___v_addr_819 = new AllocaInst(PointerTy_58, "__v.addr", label_entry_814);
 ptr___v_addr_819->setAlignment(8);
 AllocaInst* ptr___insert_left = new AllocaInst(IntegerType::get(mod->getContext(), 8), "__insert_left", label_entry_814);
 ptr___insert_left->setAlignment(1);
 AllocaInst* ptr_tmp_820 = new AllocaInst(StructTy_struct_std___Select1st, "tmp", label_entry_814);
 ptr_tmp_820->setAlignment(1);
 AllocaInst* ptr___z = new AllocaInst(PointerTy_88, "__z", label_entry_814);
 ptr___z->setAlignment(8);
 StoreInst* void_821 = new StoreInst(ptr_this_811, ptr_this_addr_817, false, label_entry_814);
 void_821->setAlignment(8);
 StoreInst* void_822 = new StoreInst(ptr___x_812, ptr___x_addr_818, false, label_entry_814);
 void_822->setAlignment(8);
 StoreInst* void_823 = new StoreInst(ptr___p, ptr___p_addr, false, label_entry_814);
 void_823->setAlignment(8);
 StoreInst* void_824 = new StoreInst(ptr___v_813, ptr___v_addr_819, false, label_entry_814);
 void_824->setAlignment(8);
 LoadInst* ptr_this1_825 = new LoadInst(ptr_this_addr_817, "this1", false, label_entry_814);
 LoadInst* ptr_826 = new LoadInst(ptr___x_addr_818, "", false, label_entry_814);
 ptr_826->setAlignment(8);
 ICmpInst* int1_cmp_827 = new ICmpInst(*label_entry_814, ICmpInst::ICMP_NE, ptr_826, const_ptr_222, "cmp");
 BranchInst::Create(label_lor_end, label_lor_lhs_false_815, int1_cmp_827, label_entry_814);
 
 // Block lor.lhs.false (label_lor_lhs_false_815)
 LoadInst* ptr_829 = new LoadInst(ptr___p_addr, "", false, label_lor_lhs_false_815);
 ptr_829->setAlignment(8);
 CallInst* ptr_call_830 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv, ptr_this1_825, "call", label_lor_lhs_false_815);
 ptr_call_830->setCallingConv(CallingConv::C);
 ptr_call_830->setTailCall(false);
 AttributeSet ptr_call_830_PAL;
 ptr_call_830->setAttributes(ptr_call_830_PAL);
 
 CastInst* ptr_831 = new BitCastInst(ptr_call_830, PointerTy_2, "", label_lor_lhs_false_815);
 ICmpInst* int1_cmp2 = new ICmpInst(*label_lor_lhs_false_815, ICmpInst::ICMP_EQ, ptr_829, ptr_831, "cmp2");
 BranchInst::Create(label_lor_end, label_lor_rhs, int1_cmp2, label_lor_lhs_false_815);
 
 // Block lor.rhs (label_lor_rhs)
 std::vector<Value*> ptr__M_impl_833_indices;
 ptr__M_impl_833_indices.push_back(const_int32_208);
 ptr__M_impl_833_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_833 = GetElementPtrInst::Create(ptr_this1_825, ptr__M_impl_833_indices, "_M_impl", label_lor_rhs);
 std::vector<Value*> ptr__M_key_compare_834_indices;
 ptr__M_key_compare_834_indices.push_back(const_int32_208);
 ptr__M_key_compare_834_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare_834 = GetElementPtrInst::Create(ptr__M_impl_833, ptr__M_key_compare_834_indices, "_M_key_compare", label_lor_rhs);
 LoadInst* ptr_835 = new LoadInst(ptr___v_addr_819, "", false, label_lor_rhs);
 ptr_835->setAlignment(8);
 std::vector<Value*> ptr_call3_836_params;
 ptr_call3_836_params.push_back(ptr_tmp_820);
 ptr_call3_836_params.push_back(ptr_835);
 CallInst* ptr_call3_836 = CallInst::Create(func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_, ptr_call3_836_params, "call3", label_lor_rhs);
 ptr_call3_836->setCallingConv(CallingConv::C);
 ptr_call3_836->setTailCall(false);
 AttributeSet ptr_call3_836_PAL;
 ptr_call3_836->setAttributes(ptr_call3_836_PAL);
 
 LoadInst* ptr_837 = new LoadInst(ptr___p_addr, "", false, label_lor_rhs);
 ptr_837->setAlignment(8);
 CallInst* ptr_call4_838 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base, ptr_837, "call4", label_lor_rhs);
 ptr_call4_838->setCallingConv(CallingConv::C);
 ptr_call4_838->setTailCall(false);
 AttributeSet ptr_call4_838_PAL;
 ptr_call4_838->setAttributes(ptr_call4_838_PAL);
 
 std::vector<Value*> int1_call5_839_params;
 int1_call5_839_params.push_back(ptr__M_key_compare_834);
 int1_call5_839_params.push_back(ptr_call3_836);
 int1_call5_839_params.push_back(ptr_call4_838);
 CallInst* int1_call5_839 = CallInst::Create(func__ZNKSt4lessISsEclERKSsS2_, int1_call5_839_params, "call5", label_lor_rhs);
 int1_call5_839->setCallingConv(CallingConv::C);
 int1_call5_839->setTailCall(false);
 AttributeSet int1_call5_839_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call5_839_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call5_839->setAttributes(int1_call5_839_PAL);
 
 BranchInst::Create(label_lor_end, label_lor_rhs);
 
 // Block lor.end (label_lor_end)
 PHINode* int1_841 = PHINode::Create(IntegerType::get(mod->getContext(), 1), 3, "", label_lor_end);
 int1_841->addIncoming(const_int1_224, label_lor_lhs_false_815);
 int1_841->addIncoming(const_int1_224, label_entry_814);
 int1_841->addIncoming(int1_call5_839, label_lor_rhs);
 
 CastInst* int8_frombool = new ZExtInst(int1_841, IntegerType::get(mod->getContext(), 8), "frombool", label_lor_end);
 StoreInst* void_842 = new StoreInst(int8_frombool, ptr___insert_left, false, label_lor_end);
 void_842->setAlignment(1);
 LoadInst* ptr_843 = new LoadInst(ptr___v_addr_819, "", false, label_lor_end);
 ptr_843->setAlignment(8);
 std::vector<Value*> ptr_call7_844_params;
 ptr_call7_844_params.push_back(ptr_this1_825);
 ptr_call7_844_params.push_back(ptr_843);
 CallInst* ptr_call7_844 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_, ptr_call7_844_params, "call7", label_lor_end);
 ptr_call7_844->setCallingConv(CallingConv::C);
 ptr_call7_844->setTailCall(false);
 AttributeSet ptr_call7_844_PAL;
 ptr_call7_844->setAttributes(ptr_call7_844_PAL);
 
 StoreInst* void_845 = new StoreInst(ptr_call7_844, ptr___z, false, label_lor_end);
 void_845->setAlignment(8);
 LoadInst* int8_846 = new LoadInst(ptr___insert_left, "", false, label_lor_end);
 int8_846->setAlignment(1);
 CastInst* int1_tobool_847 = new TruncInst(int8_846, IntegerType::get(mod->getContext(), 1), "tobool", label_lor_end);
 LoadInst* ptr_848 = new LoadInst(ptr___z, "", false, label_lor_end);
 ptr_848->setAlignment(8);
 CastInst* ptr_849 = new BitCastInst(ptr_848, PointerTy_2, "", label_lor_end);
 LoadInst* ptr_850 = new LoadInst(ptr___p_addr, "", false, label_lor_end);
 ptr_850->setAlignment(8);
 std::vector<Value*> ptr__M_impl8_indices;
 ptr__M_impl8_indices.push_back(const_int32_208);
 ptr__M_impl8_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl8 = GetElementPtrInst::Create(ptr_this1_825, ptr__M_impl8_indices, "_M_impl8", label_lor_end);
 std::vector<Value*> ptr__M_header_851_indices;
 ptr__M_header_851_indices.push_back(const_int32_208);
 ptr__M_header_851_indices.push_back(const_int32_211);
 Instruction* ptr__M_header_851 = GetElementPtrInst::Create(ptr__M_impl8, ptr__M_header_851_indices, "_M_header", label_lor_end);
 std::vector<Value*> void_852_params;
 void_852_params.push_back(int1_tobool_847);
 void_852_params.push_back(ptr_849);
 void_852_params.push_back(ptr_850);
 void_852_params.push_back(ptr__M_header_851);
 CallInst* void_852 = CallInst::Create(func__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_, void_852_params, "", label_lor_end);
 void_852->setCallingConv(CallingConv::C);
 void_852->setTailCall(false);
 AttributeSet void_852_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 1U, B);
   }
  
  Attrs.push_back(PAS);
  {
   AttrBuilder B;
   B.addAttribute(Attribute::NoUnwind);
   PAS = AttributeSet::get(mod->getContext(), ~0U, B);
  }
 
 Attrs.push_back(PAS);
 void_852_PAL = AttributeSet::get(mod->getContext(), Attrs);
 
}
void_852->setAttributes(void_852_PAL);

std::vector<Value*> ptr__M_impl9_indices;
ptr__M_impl9_indices.push_back(const_int32_208);
ptr__M_impl9_indices.push_back(const_int32_208);
Instruction* ptr__M_impl9 = GetElementPtrInst::Create(ptr_this1_825, ptr__M_impl9_indices, "_M_impl9", label_lor_end);
std::vector<Value*> ptr__M_node_count_indices;
ptr__M_node_count_indices.push_back(const_int32_208);
ptr__M_node_count_indices.push_back(const_int32_221);
Instruction* ptr__M_node_count = GetElementPtrInst::Create(ptr__M_impl9, ptr__M_node_count_indices, "_M_node_count", label_lor_end);
LoadInst* int64_853 = new LoadInst(ptr__M_node_count, "", false, label_lor_end);
int64_853->setAlignment(8);
BinaryOperator* int64_inc = BinaryOperator::Create(Instruction::Add, int64_853, const_int64_225, "inc", label_lor_end);
StoreInst* void_854 = new StoreInst(int64_inc, ptr__M_node_count, false, label_lor_end);
void_854->setAlignment(8);
LoadInst* ptr_855 = new LoadInst(ptr___z, "", false, label_lor_end);
ptr_855->setAlignment(8);
std::vector<Value*> void_856_params;
void_856_params.push_back(ptr_retval_816);
void_856_params.push_back(ptr_855);
CallInst* void_856 = CallInst::Create(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E, void_856_params, "", label_lor_end);
void_856->setCallingConv(CallingConv::C);
void_856->setTailCall(false);
AttributeSet void_856_PAL;
void_856->setAttributes(void_856_PAL);

std::vector<Value*> ptr_coerce_dive_857_indices;
ptr_coerce_dive_857_indices.push_back(const_int32_208);
ptr_coerce_dive_857_indices.push_back(const_int32_208);
Instruction* ptr_coerce_dive_857 = GetElementPtrInst::Create(ptr_retval_816, ptr_coerce_dive_857_indices, "coerce.dive", label_lor_end);
LoadInst* ptr_858 = new LoadInst(ptr_coerce_dive_857, "", false, label_lor_end);
ReturnInst::Create(mod->getContext(), ptr_858, label_lor_end);

}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv->arg_begin();
 Value* ptr_this_860 = args++;
 ptr_this_860->setName("this");
 
 BasicBlock* label_entry_861 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv,0);
 
 // Block entry (label_entry_861)
 AllocaInst* ptr_this_addr_862 = new AllocaInst(PointerTy_27, "this.addr", label_entry_861);
 ptr_this_addr_862->setAlignment(8);
 StoreInst* void_863 = new StoreInst(ptr_this_860, ptr_this_addr_862, false, label_entry_861);
 void_863->setAlignment(8);
 LoadInst* ptr_this1_864 = new LoadInst(ptr_this_addr_862, "this1", false, label_entry_861);
 std::vector<Value*> ptr__M_impl_865_indices;
 ptr__M_impl_865_indices.push_back(const_int32_208);
 ptr__M_impl_865_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_865 = GetElementPtrInst::Create(ptr_this1_864, ptr__M_impl_865_indices, "_M_impl", label_entry_861);
 std::vector<Value*> ptr__M_header_866_indices;
 ptr__M_header_866_indices.push_back(const_int32_208);
 ptr__M_header_866_indices.push_back(const_int32_211);
 Instruction* ptr__M_header_866 = GetElementPtrInst::Create(ptr__M_impl_865, ptr__M_header_866_indices, "_M_header", label_entry_861);
 CastInst* ptr_867 = new BitCastInst(ptr__M_header_866, PointerTy_88, "", label_entry_861);
 ReturnInst::Create(mod->getContext(), ptr_867, label_entry_861);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base->arg_begin();
 Value* ptr___x_869 = args++;
 ptr___x_869->setName("__x");
 
 BasicBlock* label_entry_870 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base,0);
 
 // Block entry (label_entry_870)
 AllocaInst* ptr___x_addr_871 = new AllocaInst(PointerTy_2, "__x.addr", label_entry_870);
 ptr___x_addr_871->setAlignment(8);
 AllocaInst* ptr_tmp_872 = new AllocaInst(StructTy_struct_std___Select1st, "tmp", label_entry_870);
 ptr_tmp_872->setAlignment(1);
 StoreInst* void_873 = new StoreInst(ptr___x_869, ptr___x_addr_871, false, label_entry_870);
 void_873->setAlignment(8);
 LoadInst* ptr_874 = new LoadInst(ptr___x_addr_871, "", false, label_entry_870);
 ptr_874->setAlignment(8);
 CallInst* ptr_call_875 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base, ptr_874, "call", label_entry_870);
 ptr_call_875->setCallingConv(CallingConv::C);
 ptr_call_875->setTailCall(false);
 AttributeSet ptr_call_875_PAL;
 ptr_call_875->setAttributes(ptr_call_875_PAL);
 
 std::vector<Value*> ptr_call1_876_params;
 ptr_call1_876_params.push_back(ptr_tmp_872);
 ptr_call1_876_params.push_back(ptr_call_875);
 CallInst* ptr_call1_876 = CallInst::Create(func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_, ptr_call1_876_params, "call1", label_entry_870);
 ptr_call1_876->setCallingConv(CallingConv::C);
 ptr_call1_876->setTailCall(false);
 AttributeSet ptr_call1_876_PAL;
 ptr_call1_876->setAttributes(ptr_call1_876_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_call1_876, label_entry_870);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_ (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_->arg_begin();
 Value* ptr_this_878 = args++;
 ptr_this_878->setName("this");
 Value* ptr___x_879 = args++;
 ptr___x_879->setName("__x");
 
 BasicBlock* label_entry_880 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_invoke_cont_881 = BasicBlock::Create(mod->getContext(), "invoke.cont",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_invoke_cont3_882 = BasicBlock::Create(mod->getContext(), "invoke.cont3",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_invoke_cont5_883 = BasicBlock::Create(mod->getContext(), "invoke.cont5",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_lpad_884 = BasicBlock::Create(mod->getContext(), "lpad",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_lpad2 = BasicBlock::Create(mod->getContext(), "lpad2",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_catch = BasicBlock::Create(mod->getContext(), "catch",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_invoke_cont7_885 = BasicBlock::Create(mod->getContext(), "invoke.cont7",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_lpad6 = BasicBlock::Create(mod->getContext(), "lpad6",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_invoke_cont8_886 = BasicBlock::Create(mod->getContext(), "invoke.cont8",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_try_cont = BasicBlock::Create(mod->getContext(), "try.cont",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_eh_resume_887 = BasicBlock::Create(mod->getContext(), "eh.resume",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_terminate_lpad_888 = BasicBlock::Create(mod->getContext(), "terminate.lpad",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 BasicBlock* label_unreachable = BasicBlock::Create(mod->getContext(), "unreachable",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_create_nodeERKS2_,0);
 
 // Block entry (label_entry_880)
 AllocaInst* ptr_this_addr_889 = new AllocaInst(PointerTy_27, "this.addr", label_entry_880);
 ptr_this_addr_889->setAlignment(8);
 AllocaInst* ptr___x_addr_890 = new AllocaInst(PointerTy_58, "__x.addr", label_entry_880);
 ptr___x_addr_890->setAlignment(8);
 AllocaInst* ptr___tmp = new AllocaInst(PointerTy_88, "__tmp", label_entry_880);
 ptr___tmp->setAlignment(8);
 AllocaInst* ptr_temp_lvalue = new AllocaInst(StructTy_class_std__allocator_4, "temp.lvalue", label_entry_880);
 ptr_temp_lvalue->setAlignment(1);
 AllocaInst* ptr_exn_slot_891 = new AllocaInst(PointerTy_1, "exn.slot", label_entry_880);
 AllocaInst* ptr_ehselector_slot_892 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "ehselector.slot", label_entry_880);
 StoreInst* void_893 = new StoreInst(ptr_this_878, ptr_this_addr_889, false, label_entry_880);
 void_893->setAlignment(8);
 StoreInst* void_894 = new StoreInst(ptr___x_879, ptr___x_addr_890, false, label_entry_880);
 void_894->setAlignment(8);
 LoadInst* ptr_this1_895 = new LoadInst(ptr_this_addr_889, "this1", false, label_entry_880);
 CallInst* ptr_call_896 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv, ptr_this1_895, "call", label_entry_880);
 ptr_call_896->setCallingConv(CallingConv::C);
 ptr_call_896->setTailCall(false);
 AttributeSet ptr_call_896_PAL;
 ptr_call_896->setAttributes(ptr_call_896_PAL);
 
 StoreInst* void_897 = new StoreInst(ptr_call_896, ptr___tmp, false, label_entry_880);
 void_897->setAlignment(8);
 std::vector<Value*> void_898_params;
 void_898_params.push_back(ptr_temp_lvalue);
 void_898_params.push_back(ptr_this1_895);
 InvokeInst *void_898 = InvokeInst::Create(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv, label_invoke_cont_881, label_lpad_884, void_898_params, "", label_entry_880);
 void_898->setCallingConv(CallingConv::C);AttributeSet void_898_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::StructRet);
    PAS = AttributeSet::get(mod->getContext(), 1U, B);
   }
  
  Attrs.push_back(PAS);
  void_898_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_898->setAttributes(void_898_PAL);
 
 
 // Block invoke.cont (label_invoke_cont_881)
 CastInst* ptr_899 = new BitCastInst(ptr_temp_lvalue, PointerTy_147, "", label_invoke_cont_881);
 LoadInst* ptr_900 = new LoadInst(ptr___tmp, "", false, label_invoke_cont_881);
 ptr_900->setAlignment(8);
 std::vector<Value*> ptr__M_value_field_901_indices;
 ptr__M_value_field_901_indices.push_back(const_int32_208);
 ptr__M_value_field_901_indices.push_back(const_int32_211);
 Instruction* ptr__M_value_field_901 = GetElementPtrInst::Create(ptr_900, ptr__M_value_field_901_indices, "_M_value_field", label_invoke_cont_881);
 std::vector<Value*> ptr_call4_902_params;
 ptr_call4_902_params.push_back(ptr__M_value_field_901);
 InvokeInst *ptr_call4_902 = InvokeInst::Create(func__ZSt11__addressofISt4pairIKSsiEEPT_RS3_, label_invoke_cont3_882, label_lpad2, ptr_call4_902_params, "call4", label_invoke_cont_881);
 ptr_call4_902->setCallingConv(CallingConv::C);AttributeSet ptr_call4_902_PAL;
 ptr_call4_902->setAttributes(ptr_call4_902_PAL);
 
 
 // Block invoke.cont3 (label_invoke_cont3_882)
 LoadInst* ptr_903 = new LoadInst(ptr___x_addr_890, "", false, label_invoke_cont3_882);
 ptr_903->setAlignment(8);
 std::vector<Value*> void_904_params;
 void_904_params.push_back(ptr_899);
 void_904_params.push_back(ptr_call4_902);
 void_904_params.push_back(ptr_903);
 InvokeInst *void_904 = InvokeInst::Create(func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_, label_invoke_cont5_883, label_lpad2, void_904_params, "", label_invoke_cont3_882);
 void_904->setCallingConv(CallingConv::C);AttributeSet void_904_PAL;
 void_904->setAttributes(void_904_PAL);
 
 
 // Block invoke.cont5 (label_invoke_cont5_883)
 CallInst* void_905 = CallInst::Create(func__ZNSaISt4pairIKSsiEED2Ev, ptr_temp_lvalue, "", label_invoke_cont5_883);
 void_905->setCallingConv(CallingConv::C);
 void_905->setTailCall(false);
 AttributeSet void_905_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_905_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_905->setAttributes(void_905_PAL);
 
 BranchInst::Create(label_try_cont, label_invoke_cont5_883);
 
 // Block lpad (label_lpad_884)
 LandingPadInst* struct_907 = LandingPadInst::Create(StructTy_43, const_ptr_213, 1, "", label_lpad_884);
 struct_907->setCleanup(false);
 struct_907->addClause(const_ptr_215);
 std::vector<unsigned> ptr_908_indices;
 ptr_908_indices.push_back(0);
 ExtractValueInst* ptr_908 = ExtractValueInst::Create(struct_907, ptr_908_indices, "", label_lpad_884);
 StoreInst* void_909 = new StoreInst(ptr_908, ptr_exn_slot_891, false, label_lpad_884);
 std::vector<unsigned> int32_910_indices;
 int32_910_indices.push_back(1);
 ExtractValueInst* int32_910 = ExtractValueInst::Create(struct_907, int32_910_indices, "", label_lpad_884);
 StoreInst* void_911 = new StoreInst(int32_910, ptr_ehselector_slot_892, false, label_lpad_884);
 BranchInst::Create(label_catch, label_lpad_884);
 
 // Block lpad2 (label_lpad2)
 LandingPadInst* struct_913 = LandingPadInst::Create(StructTy_43, const_ptr_213, 1, "", label_lpad2);
 struct_913->setCleanup(false);
 struct_913->addClause(const_ptr_215);
 std::vector<unsigned> ptr_914_indices;
 ptr_914_indices.push_back(0);
 ExtractValueInst* ptr_914 = ExtractValueInst::Create(struct_913, ptr_914_indices, "", label_lpad2);
 StoreInst* void_915 = new StoreInst(ptr_914, ptr_exn_slot_891, false, label_lpad2);
 std::vector<unsigned> int32_916_indices;
 int32_916_indices.push_back(1);
 ExtractValueInst* int32_916 = ExtractValueInst::Create(struct_913, int32_916_indices, "", label_lpad2);
 StoreInst* void_917 = new StoreInst(int32_916, ptr_ehselector_slot_892, false, label_lpad2);
 CallInst* void_918 = CallInst::Create(func__ZNSaISt4pairIKSsiEED2Ev, ptr_temp_lvalue, "", label_lpad2);
 void_918->setCallingConv(CallingConv::C);
 void_918->setTailCall(false);
 AttributeSet void_918_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_918_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_918->setAttributes(void_918_PAL);
 
 BranchInst::Create(label_catch, label_lpad2);
 
 // Block catch (label_catch)
 LoadInst* ptr_exn_920 = new LoadInst(ptr_exn_slot_891, "exn", false, label_catch);
 CallInst* ptr_921 = CallInst::Create(func___cxa_begin_catch, ptr_exn_920, "", label_catch);
 ptr_921->setCallingConv(CallingConv::C);
 ptr_921->setTailCall(false);
 AttributeSet ptr_921_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  ptr_921_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 ptr_921->setAttributes(ptr_921_PAL);
 
 LoadInst* ptr_922 = new LoadInst(ptr___tmp, "", false, label_catch);
 ptr_922->setAlignment(8);
 std::vector<Value*> void_923_params;
 void_923_params.push_back(ptr_this1_895);
 void_923_params.push_back(ptr_922);
 InvokeInst *void_923 = InvokeInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E, label_invoke_cont7_885, label_lpad6, void_923_params, "", label_catch);
 void_923->setCallingConv(CallingConv::C);AttributeSet void_923_PAL;
 void_923->setAttributes(void_923_PAL);
 
 
 // Block invoke.cont7 (label_invoke_cont7_885)
 std::vector<Value*> void_924_params;
 InvokeInst *void_924 = InvokeInst::Create(func___cxa_rethrow, label_unreachable, label_lpad6, void_924_params, "", label_invoke_cont7_885);
 void_924->setCallingConv(CallingConv::C);AttributeSet void_924_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_924_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_924->setAttributes(void_924_PAL);
 
 
 // Block lpad6 (label_lpad6)
 LandingPadInst* struct_925 = LandingPadInst::Create(StructTy_43, const_ptr_213, 0, "", label_lpad6);
 struct_925->setCleanup(true);
 std::vector<unsigned> ptr_926_indices;
 ptr_926_indices.push_back(0);
 ExtractValueInst* ptr_926 = ExtractValueInst::Create(struct_925, ptr_926_indices, "", label_lpad6);
 StoreInst* void_927 = new StoreInst(ptr_926, ptr_exn_slot_891, false, label_lpad6);
 std::vector<unsigned> int32_928_indices;
 int32_928_indices.push_back(1);
 ExtractValueInst* int32_928 = ExtractValueInst::Create(struct_925, int32_928_indices, "", label_lpad6);
 StoreInst* void_929 = new StoreInst(int32_928, ptr_ehselector_slot_892, false, label_lpad6);
 std::vector<Value*> void_930_params;
 InvokeInst *void_930 = InvokeInst::Create(func___cxa_end_catch, label_invoke_cont8_886, label_terminate_lpad_888, void_930_params, "", label_lpad6);
 void_930->setCallingConv(CallingConv::C);AttributeSet void_930_PAL;
 void_930->setAttributes(void_930_PAL);
 
 
 // Block invoke.cont8 (label_invoke_cont8_886)
 BranchInst::Create(label_eh_resume_887, label_invoke_cont8_886);
 
 // Block try.cont (label_try_cont)
 LoadInst* ptr_932 = new LoadInst(ptr___tmp, "", false, label_try_cont);
 ptr_932->setAlignment(8);
 ReturnInst::Create(mod->getContext(), ptr_932, label_try_cont);
 
 // Block eh.resume (label_eh_resume_887)
 LoadInst* ptr_exn9 = new LoadInst(ptr_exn_slot_891, "exn9", false, label_eh_resume_887);
 LoadInst* int32_sel_934 = new LoadInst(ptr_ehselector_slot_892, "sel", false, label_eh_resume_887);
 std::vector<unsigned> struct_lpad_val_935_indices;
 struct_lpad_val_935_indices.push_back(0);
 InsertValueInst* struct_lpad_val_935 = InsertValueInst::Create(const_struct_214, ptr_exn9, struct_lpad_val_935_indices, "lpad.val", label_eh_resume_887);
 std::vector<unsigned> struct_lpad_val10_indices;
 struct_lpad_val10_indices.push_back(1);
 InsertValueInst* struct_lpad_val10 = InsertValueInst::Create(struct_lpad_val_935, int32_sel_934, struct_lpad_val10_indices, "lpad.val10", label_eh_resume_887);
 ResumeInst::Create(struct_lpad_val10, label_eh_resume_887);
 
 // Block terminate.lpad (label_terminate_lpad_888)
 LandingPadInst* struct_937 = LandingPadInst::Create(StructTy_43, const_ptr_213, 1, "", label_terminate_lpad_888);
 struct_937->setCleanup(false);
 struct_937->addClause(const_ptr_215);
 std::vector<unsigned> ptr_938_indices;
 ptr_938_indices.push_back(0);
 ExtractValueInst* ptr_938 = ExtractValueInst::Create(struct_937, ptr_938_indices, "", label_terminate_lpad_888);
 CallInst* void_939 = CallInst::Create(func___clang_call_terminate, ptr_938, "", label_terminate_lpad_888);
 void_939->setCallingConv(CallingConv::C);
 void_939->setTailCall(false);
 AttributeSet void_939_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_939_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_939->setAttributes(void_939_PAL);
 
 new UnreachableInst(mod->getContext(), label_terminate_lpad_888);
 
 // Block unreachable (label_unreachable)
 new UnreachableInst(mod->getContext(), label_unreachable);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv->arg_begin();
 Value* ptr_this_942 = args++;
 ptr_this_942->setName("this");
 
 BasicBlock* label_entry_943 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_get_nodeEv,0);
 
 // Block entry (label_entry_943)
 AllocaInst* ptr_this_addr_944 = new AllocaInst(PointerTy_27, "this.addr", label_entry_943);
 ptr_this_addr_944->setAlignment(8);
 StoreInst* void_945 = new StoreInst(ptr_this_942, ptr_this_addr_944, false, label_entry_943);
 void_945->setAlignment(8);
 LoadInst* ptr_this1_946 = new LoadInst(ptr_this_addr_944, "this1", false, label_entry_943);
 std::vector<Value*> ptr__M_impl_947_indices;
 ptr__M_impl_947_indices.push_back(const_int32_208);
 ptr__M_impl_947_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_947 = GetElementPtrInst::Create(ptr_this1_946, ptr__M_impl_947_indices, "_M_impl", label_entry_943);
 CastInst* ptr_948 = new BitCastInst(ptr__M_impl_947, PointerTy_154, "", label_entry_943);
 CastInst* ptr_949 = new BitCastInst(ptr_948, PointerTy_155, "", label_entry_943);
 std::vector<Value*> ptr_call_950_params;
 ptr_call_950_params.push_back(ptr_949);
 ptr_call_950_params.push_back(const_int64_225);
 ptr_call_950_params.push_back(const_ptr_215);
 CallInst* ptr_call_950 = CallInst::Create(func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv, ptr_call_950_params, "call", label_entry_943);
 ptr_call_950->setCallingConv(CallingConv::C);
 ptr_call_950->setTailCall(false);
 AttributeSet ptr_call_950_PAL;
 ptr_call_950->setAttributes(ptr_call_950_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_call_950, label_entry_943);
 
}

// Function: _ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv (func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv)
{
 Function::arg_iterator args = func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv->arg_begin();
 Value* ptr_agg_result = args++;
 ptr_agg_result->setName("agg.result");
 Value* ptr_this_952 = args++;
 ptr_this_952->setName("this");
 
 BasicBlock* label_entry_953 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv,0);
 
 // Block entry (label_entry_953)
 AllocaInst* ptr_this_addr_954 = new AllocaInst(PointerTy_27, "this.addr", label_entry_953);
 ptr_this_addr_954->setAlignment(8);
 StoreInst* void_955 = new StoreInst(ptr_this_952, ptr_this_addr_954, false, label_entry_953);
 void_955->setAlignment(8);
 LoadInst* ptr_this1_956 = new LoadInst(ptr_this_addr_954, "this1", false, label_entry_953);
 CallInst* ptr_call_957 = CallInst::Create(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv, ptr_this1_956, "call", label_entry_953);
 ptr_call_957->setCallingConv(CallingConv::C);
 ptr_call_957->setTailCall(false);
 AttributeSet ptr_call_957_PAL;
 ptr_call_957->setAttributes(ptr_call_957_PAL);
 
 std::vector<Value*> void_958_params;
 void_958_params.push_back(ptr_agg_result);
 void_958_params.push_back(ptr_call_957);
 CallInst* void_958 = CallInst::Create(func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E, void_958_params, "", label_entry_953);
 void_958->setCallingConv(CallingConv::C);
 void_958->setTailCall(false);
 AttributeSet void_958_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_958_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_958->setAttributes(void_958_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_953);
 
}

// Function: _ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_ (func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_)
{
 Function::arg_iterator args = func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_->arg_begin();
 Value* ptr_this_960 = args++;
 ptr_this_960->setName("this");
 Value* ptr___p_961 = args++;
 ptr___p_961->setName("__p");
 Value* ptr___val = args++;
 ptr___val->setName("__val");
 
 BasicBlock* label_entry_962 = BasicBlock::Create(mod->getContext(), "entry",func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_,0);
 BasicBlock* label_new_notnull = BasicBlock::Create(mod->getContext(), "new.notnull",func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_,0);
 BasicBlock* label_new_cont = BasicBlock::Create(mod->getContext(), "new.cont",func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE9constructEPS3_RKS3_,0);
 
 // Block entry (label_entry_962)
 AllocaInst* ptr_this_addr_963 = new AllocaInst(PointerTy_147, "this.addr", label_entry_962);
 ptr_this_addr_963->setAlignment(8);
 AllocaInst* ptr___p_addr_964 = new AllocaInst(PointerTy_58, "__p.addr", label_entry_962);
 ptr___p_addr_964->setAlignment(8);
 AllocaInst* ptr___val_addr = new AllocaInst(PointerTy_58, "__val.addr", label_entry_962);
 ptr___val_addr->setAlignment(8);
 StoreInst* void_965 = new StoreInst(ptr_this_960, ptr_this_addr_963, false, label_entry_962);
 void_965->setAlignment(8);
 StoreInst* void_966 = new StoreInst(ptr___p_961, ptr___p_addr_964, false, label_entry_962);
 void_966->setAlignment(8);
 StoreInst* void_967 = new StoreInst(ptr___val, ptr___val_addr, false, label_entry_962);
 void_967->setAlignment(8);
 LoadInst* ptr_this1_968 = new LoadInst(ptr_this_addr_963, "this1", false, label_entry_962);
 LoadInst* ptr_969 = new LoadInst(ptr___p_addr_964, "", false, label_entry_962);
 ptr_969->setAlignment(8);
 CastInst* ptr_970 = new BitCastInst(ptr_969, PointerTy_1, "", label_entry_962);
 ICmpInst* int1_new_isnull = new ICmpInst(*label_entry_962, ICmpInst::ICMP_EQ, ptr_970, const_ptr_215, "new.isnull");
 BranchInst::Create(label_new_cont, label_new_notnull, int1_new_isnull, label_entry_962);
 
 // Block new.notnull (label_new_notnull)
 CastInst* ptr_972 = new BitCastInst(ptr_970, PointerTy_58, "", label_new_notnull);
 LoadInst* ptr_973 = new LoadInst(ptr___val_addr, "", false, label_new_notnull);
 ptr_973->setAlignment(8);
 std::vector<Value*> void_974_params;
 void_974_params.push_back(ptr_972);
 void_974_params.push_back(ptr_973);
 CallInst* void_974 = CallInst::Create(func__ZNSt4pairIKSsiEC2ERKS1_, void_974_params, "", label_new_notnull);
 void_974->setCallingConv(CallingConv::C);
 void_974->setTailCall(false);
 AttributeSet void_974_PAL;
 void_974->setAttributes(void_974_PAL);
 
 BranchInst::Create(label_new_cont, label_new_notnull);
 
 // Block new.cont (label_new_cont)
 PHINode* ptr_976 = PHINode::Create(PointerTy_58, 2, "", label_new_cont);
 ptr_976->addIncoming(ptr_972, label_new_notnull);
 ptr_976->addIncoming(const_ptr_226, label_entry_962);
 
 ReturnInst::Create(mod->getContext(), label_new_cont);
 
}

// Function: _ZNSaISt4pairIKSsiEED2Ev (func__ZNSaISt4pairIKSsiEED2Ev)
{
 Function::arg_iterator args = func__ZNSaISt4pairIKSsiEED2Ev->arg_begin();
 Value* ptr_this_978 = args++;
 ptr_this_978->setName("this");
 
 BasicBlock* label_entry_979 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSaISt4pairIKSsiEED2Ev,0);
 
 // Block entry (label_entry_979)
 AllocaInst* ptr_this_addr_980 = new AllocaInst(PointerTy_144, "this.addr", label_entry_979);
 ptr_this_addr_980->setAlignment(8);
 StoreInst* void_981 = new StoreInst(ptr_this_978, ptr_this_addr_980, false, label_entry_979);
 void_981->setAlignment(8);
 LoadInst* ptr_this1_982 = new LoadInst(ptr_this_addr_980, "this1", false, label_entry_979);
 CastInst* ptr_983 = new BitCastInst(ptr_this1_982, PointerTy_147, "", label_entry_979);
 CallInst* void_984 = CallInst::Create(func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev, ptr_983, "", label_entry_979);
 void_984->setCallingConv(CallingConv::C);
 void_984->setTailCall(false);
 AttributeSet void_984_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_984_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_984->setAttributes(void_984_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_979);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E->arg_begin();
 Value* ptr_this_986 = args++;
 ptr_this_986->setName("this");
 Value* ptr___p_987 = args++;
 ptr___p_987->setName("__p");
 
 BasicBlock* label_entry_988 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E,0);
 
 // Block entry (label_entry_988)
 AllocaInst* ptr_this_addr_989 = new AllocaInst(PointerTy_27, "this.addr", label_entry_988);
 ptr_this_addr_989->setAlignment(8);
 AllocaInst* ptr___p_addr_990 = new AllocaInst(PointerTy_88, "__p.addr", label_entry_988);
 ptr___p_addr_990->setAlignment(8);
 StoreInst* void_991 = new StoreInst(ptr_this_986, ptr_this_addr_989, false, label_entry_988);
 void_991->setAlignment(8);
 StoreInst* void_992 = new StoreInst(ptr___p_987, ptr___p_addr_990, false, label_entry_988);
 void_992->setAlignment(8);
 LoadInst* ptr_this1_993 = new LoadInst(ptr_this_addr_989, "this1", false, label_entry_988);
 std::vector<Value*> ptr__M_impl_994_indices;
 ptr__M_impl_994_indices.push_back(const_int32_208);
 ptr__M_impl_994_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_994 = GetElementPtrInst::Create(ptr_this1_993, ptr__M_impl_994_indices, "_M_impl", label_entry_988);
 CastInst* ptr_995 = new BitCastInst(ptr__M_impl_994, PointerTy_154, "", label_entry_988);
 CastInst* ptr_996 = new BitCastInst(ptr_995, PointerTy_155, "", label_entry_988);
 LoadInst* ptr_997 = new LoadInst(ptr___p_addr_990, "", false, label_entry_988);
 ptr_997->setAlignment(8);
 std::vector<Value*> void_998_params;
 void_998_params.push_back(ptr_996);
 void_998_params.push_back(ptr_997);
 void_998_params.push_back(const_int64_225);
 CallInst* void_998 = CallInst::Create(func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m, void_998_params, "", label_entry_988);
 void_998->setCallingConv(CallingConv::C);
 void_998->setTailCall(false);
 AttributeSet void_998_PAL;
 void_998->setAttributes(void_998_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_988);
 
}

// Function: _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m (func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m)
{
 Function::arg_iterator args = func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m->arg_begin();
 Value* ptr_this_1000 = args++;
 ptr_this_1000->setName("this");
 Value* ptr___p_1001 = args++;
 ptr___p_1001->setName("__p");
 Value* int64_1002 = args++;
 
 BasicBlock* label_entry_1003 = BasicBlock::Create(mod->getContext(), "entry",func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE10deallocateEPS5_m,0);
 
 // Block entry (label_entry_1003)
 AllocaInst* ptr_this_addr_1004 = new AllocaInst(PointerTy_155, "this.addr", label_entry_1003);
 ptr_this_addr_1004->setAlignment(8);
 AllocaInst* ptr___p_addr_1005 = new AllocaInst(PointerTy_88, "__p.addr", label_entry_1003);
 ptr___p_addr_1005->setAlignment(8);
 AllocaInst* ptr__addr_1006 = new AllocaInst(IntegerType::get(mod->getContext(), 64), ".addr", label_entry_1003);
 ptr__addr_1006->setAlignment(8);
 StoreInst* void_1007 = new StoreInst(ptr_this_1000, ptr_this_addr_1004, false, label_entry_1003);
 void_1007->setAlignment(8);
 StoreInst* void_1008 = new StoreInst(ptr___p_1001, ptr___p_addr_1005, false, label_entry_1003);
 void_1008->setAlignment(8);
 StoreInst* void_1009 = new StoreInst(int64_1002, ptr__addr_1006, false, label_entry_1003);
 void_1009->setAlignment(8);
 LoadInst* ptr_this1_1010 = new LoadInst(ptr_this_addr_1004, "this1", false, label_entry_1003);
 LoadInst* ptr_1011 = new LoadInst(ptr___p_addr_1005, "", false, label_entry_1003);
 ptr_1011->setAlignment(8);
 CastInst* ptr_1012 = new BitCastInst(ptr_1011, PointerTy_1, "", label_entry_1003);
 CallInst* void_1013 = CallInst::Create(func__ZdlPv, ptr_1012, "", label_entry_1003);
 void_1013->setCallingConv(CallingConv::C);
 void_1013->setTailCall(false);
 AttributeSet void_1013_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1013_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1013->setAttributes(void_1013_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_1003);
 
}

// Function: _ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev (func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev)
{
 Function::arg_iterator args = func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev->arg_begin();
 Value* ptr_this_1015 = args++;
 ptr_this_1015->setName("this");
 
 BasicBlock* label_entry_1016 = BasicBlock::Create(mod->getContext(), "entry",func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEED2Ev,0);
 
 // Block entry (label_entry_1016)
 AllocaInst* ptr_this_addr_1017 = new AllocaInst(PointerTy_147, "this.addr", label_entry_1016);
 ptr_this_addr_1017->setAlignment(8);
 StoreInst* void_1018 = new StoreInst(ptr_this_1015, ptr_this_addr_1017, false, label_entry_1016);
 void_1018->setAlignment(8);
 LoadInst* ptr_this1_1019 = new LoadInst(ptr_this_addr_1017, "this1", false, label_entry_1016);
 ReturnInst::Create(mod->getContext(), label_entry_1016);
 
}

// Function: _ZNSt4pairIKSsiEC2ERKS1_ (func__ZNSt4pairIKSsiEC2ERKS1_)
{
 Function::arg_iterator args = func__ZNSt4pairIKSsiEC2ERKS1_->arg_begin();
 Value* ptr_this_1021 = args++;
 ptr_this_1021->setName("this");
 Value* ptr_1022 = args++;
 
 BasicBlock* label_entry_1023 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt4pairIKSsiEC2ERKS1_,0);
 
 // Block entry (label_entry_1023)
 AllocaInst* ptr_this_addr_1024 = new AllocaInst(PointerTy_58, "this.addr", label_entry_1023);
 ptr_this_addr_1024->setAlignment(8);
 AllocaInst* ptr__addr_1025 = new AllocaInst(PointerTy_58, ".addr", label_entry_1023);
 ptr__addr_1025->setAlignment(8);
 StoreInst* void_1026 = new StoreInst(ptr_this_1021, ptr_this_addr_1024, false, label_entry_1023);
 void_1026->setAlignment(8);
 StoreInst* void_1027 = new StoreInst(ptr_1022, ptr__addr_1025, false, label_entry_1023);
 void_1027->setAlignment(8);
 LoadInst* ptr_this1_1028 = new LoadInst(ptr_this_addr_1024, "this1", false, label_entry_1023);
 std::vector<Value*> ptr_first_1029_indices;
 ptr_first_1029_indices.push_back(const_int32_208);
 ptr_first_1029_indices.push_back(const_int32_208);
 Instruction* ptr_first_1029 = GetElementPtrInst::Create(ptr_this1_1028, ptr_first_1029_indices, "first", label_entry_1023);
 LoadInst* ptr_1030 = new LoadInst(ptr__addr_1025, "", false, label_entry_1023);
 ptr_1030->setAlignment(8);
 std::vector<Value*> ptr_first2_indices;
 ptr_first2_indices.push_back(const_int32_208);
 ptr_first2_indices.push_back(const_int32_208);
 Instruction* ptr_first2 = GetElementPtrInst::Create(ptr_1030, ptr_first2_indices, "first2", label_entry_1023);
 std::vector<Value*> void_1031_params;
 void_1031_params.push_back(ptr_first_1029);
 void_1031_params.push_back(ptr_first2);
 CallInst* void_1031 = CallInst::Create(func__ZNSsC1ERKSs, void_1031_params, "", label_entry_1023);
 void_1031->setCallingConv(CallingConv::C);
 void_1031->setTailCall(false);
 AttributeSet void_1031_PAL;
 void_1031->setAttributes(void_1031_PAL);
 
 std::vector<Value*> ptr_second_1032_indices;
 ptr_second_1032_indices.push_back(const_int32_208);
 ptr_second_1032_indices.push_back(const_int32_211);
 Instruction* ptr_second_1032 = GetElementPtrInst::Create(ptr_this1_1028, ptr_second_1032_indices, "second", label_entry_1023);
 LoadInst* ptr_1033 = new LoadInst(ptr__addr_1025, "", false, label_entry_1023);
 ptr_1033->setAlignment(8);
 std::vector<Value*> ptr_second3_indices;
 ptr_second3_indices.push_back(const_int32_208);
 ptr_second3_indices.push_back(const_int32_211);
 Instruction* ptr_second3 = GetElementPtrInst::Create(ptr_1033, ptr_second3_indices, "second3", label_entry_1023);
 LoadInst* int32_1034 = new LoadInst(ptr_second3, "", false, label_entry_1023);
 int32_1034->setAlignment(4);
 StoreInst* void_1035 = new StoreInst(int32_1034, ptr_second_1032, false, label_entry_1023);
 void_1035->setAlignment(4);
 ReturnInst::Create(mod->getContext(), label_entry_1023);
 
}

// Function: _ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E (func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E)
{
 Function::arg_iterator args = func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E->arg_begin();
 Value* ptr_this_1037 = args++;
 ptr_this_1037->setName("this");
 Value* ptr_1038 = args++;
 
 BasicBlock* label_entry_1039 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSaISt4pairIKSsiEEC2ISt13_Rb_tree_nodeIS1_EEERKSaIT_E,0);
 
 // Block entry (label_entry_1039)
 AllocaInst* ptr_this_addr_1040 = new AllocaInst(PointerTy_144, "this.addr", label_entry_1039);
 ptr_this_addr_1040->setAlignment(8);
 AllocaInst* ptr__addr_1041 = new AllocaInst(PointerTy_154, ".addr", label_entry_1039);
 ptr__addr_1041->setAlignment(8);
 StoreInst* void_1042 = new StoreInst(ptr_this_1037, ptr_this_addr_1040, false, label_entry_1039);
 void_1042->setAlignment(8);
 StoreInst* void_1043 = new StoreInst(ptr_1038, ptr__addr_1041, false, label_entry_1039);
 void_1043->setAlignment(8);
 LoadInst* ptr_this1_1044 = new LoadInst(ptr_this_addr_1040, "this1", false, label_entry_1039);
 CastInst* ptr_1045 = new BitCastInst(ptr_this1_1044, PointerTy_147, "", label_entry_1039);
 CallInst* void_1046 = CallInst::Create(func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev, ptr_1045, "", label_entry_1039);
 void_1046->setCallingConv(CallingConv::C);
 void_1046->setTailCall(false);
 AttributeSet void_1046_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1046_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1046->setAttributes(void_1046_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_1039);
 
}

// Function: _ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv (func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv)
{
 Function::arg_iterator args = func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv->arg_begin();
 Value* ptr_this_1048 = args++;
 ptr_this_1048->setName("this");
 
 BasicBlock* label_entry_1049 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE21_M_get_Node_allocatorEv,0);
 
 // Block entry (label_entry_1049)
 AllocaInst* ptr_this_addr_1050 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1049);
 ptr_this_addr_1050->setAlignment(8);
 StoreInst* void_1051 = new StoreInst(ptr_this_1048, ptr_this_addr_1050, false, label_entry_1049);
 void_1051->setAlignment(8);
 LoadInst* ptr_this1_1052 = new LoadInst(ptr_this_addr_1050, "this1", false, label_entry_1049);
 std::vector<Value*> ptr__M_impl_1053_indices;
 ptr__M_impl_1053_indices.push_back(const_int32_208);
 ptr__M_impl_1053_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1053 = GetElementPtrInst::Create(ptr_this1_1052, ptr__M_impl_1053_indices, "_M_impl", label_entry_1049);
 CastInst* ptr_1054 = new BitCastInst(ptr__M_impl_1053, PointerTy_154, "", label_entry_1049);
 ReturnInst::Create(mod->getContext(), ptr_1054, label_entry_1049);
 
}

// Function: _ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev (func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev)
{
 Function::arg_iterator args = func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev->arg_begin();
 Value* ptr_this_1056 = args++;
 ptr_this_1056->setName("this");
 
 BasicBlock* label_entry_1057 = BasicBlock::Create(mod->getContext(), "entry",func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEEC2Ev,0);
 
 // Block entry (label_entry_1057)
 AllocaInst* ptr_this_addr_1058 = new AllocaInst(PointerTy_147, "this.addr", label_entry_1057);
 ptr_this_addr_1058->setAlignment(8);
 StoreInst* void_1059 = new StoreInst(ptr_this_1056, ptr_this_addr_1058, false, label_entry_1057);
 void_1059->setAlignment(8);
 LoadInst* ptr_this1_1060 = new LoadInst(ptr_this_addr_1058, "this1", false, label_entry_1057);
 ReturnInst::Create(mod->getContext(), label_entry_1057);
 
}

// Function: _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv (func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv)
{
 Function::arg_iterator args = func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv->arg_begin();
 Value* ptr_this_1062 = args++;
 ptr_this_1062->setName("this");
 Value* int64___n = args++;
 int64___n->setName("__n");
 Value* ptr_1063 = args++;
 
 BasicBlock* label_entry_1064 = BasicBlock::Create(mod->getContext(), "entry",func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv,0);
 BasicBlock* label_if_then_1065 = BasicBlock::Create(mod->getContext(), "if.then",func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv,0);
 BasicBlock* label_if_end_1066 = BasicBlock::Create(mod->getContext(), "if.end",func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8allocateEmPKv,0);
 
 // Block entry (label_entry_1064)
 AllocaInst* ptr_this_addr_1067 = new AllocaInst(PointerTy_155, "this.addr", label_entry_1064);
 ptr_this_addr_1067->setAlignment(8);
 AllocaInst* ptr___n_addr = new AllocaInst(IntegerType::get(mod->getContext(), 64), "__n.addr", label_entry_1064);
 ptr___n_addr->setAlignment(8);
 AllocaInst* ptr__addr_1068 = new AllocaInst(PointerTy_1, ".addr", label_entry_1064);
 ptr__addr_1068->setAlignment(8);
 StoreInst* void_1069 = new StoreInst(ptr_this_1062, ptr_this_addr_1067, false, label_entry_1064);
 void_1069->setAlignment(8);
 StoreInst* void_1070 = new StoreInst(int64___n, ptr___n_addr, false, label_entry_1064);
 void_1070->setAlignment(8);
 StoreInst* void_1071 = new StoreInst(ptr_1063, ptr__addr_1068, false, label_entry_1064);
 void_1071->setAlignment(8);
 LoadInst* ptr_this1_1072 = new LoadInst(ptr_this_addr_1067, "this1", false, label_entry_1064);
 LoadInst* int64_1073 = new LoadInst(ptr___n_addr, "", false, label_entry_1064);
 int64_1073->setAlignment(8);
 CallInst* int64_call_1074 = CallInst::Create(func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv, ptr_this1_1072, "call", label_entry_1064);
 int64_call_1074->setCallingConv(CallingConv::C);
 int64_call_1074->setTailCall(false);
 AttributeSet int64_call_1074_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  int64_call_1074_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int64_call_1074->setAttributes(int64_call_1074_PAL);
 
 ICmpInst* int1_cmp_1075 = new ICmpInst(*label_entry_1064, ICmpInst::ICMP_UGT, int64_1073, int64_call_1074, "cmp");
 BranchInst::Create(label_if_then_1065, label_if_end_1066, int1_cmp_1075, label_entry_1064);
 
 // Block if.then (label_if_then_1065)
 CallInst* void_1077 = CallInst::Create(func__ZSt17__throw_bad_allocv, "", label_if_then_1065);
 void_1077->setCallingConv(CallingConv::C);
 void_1077->setTailCall(false);
 AttributeSet void_1077_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoReturn);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1077_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1077->setAttributes(void_1077_PAL);
 
 new UnreachableInst(mod->getContext(), label_if_then_1065);
 
 // Block if.end (label_if_end_1066)
 LoadInst* int64_1079 = new LoadInst(ptr___n_addr, "", false, label_if_end_1066);
 int64_1079->setAlignment(8);
 BinaryOperator* int64_mul = BinaryOperator::Create(Instruction::Mul, int64_1079, const_int64_227, "mul", label_if_end_1066);
 CallInst* ptr_call2_1080 = CallInst::Create(func__Znwm, int64_mul, "call2", label_if_end_1066);
 ptr_call2_1080->setCallingConv(CallingConv::C);
 ptr_call2_1080->setTailCall(false);
 AttributeSet ptr_call2_1080_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoAlias);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  ptr_call2_1080_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 ptr_call2_1080->setAttributes(ptr_call2_1080_PAL);
 
 CastInst* ptr_1081 = new BitCastInst(ptr_call2_1080, PointerTy_88, "", label_if_end_1066);
 ReturnInst::Create(mod->getContext(), ptr_1081, label_if_end_1066);
 
}

// Function: _ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv (func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv)
{
 Function::arg_iterator args = func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv->arg_begin();
 Value* ptr_this_1083 = args++;
 ptr_this_1083->setName("this");
 
 BasicBlock* label_entry_1084 = BasicBlock::Create(mod->getContext(), "entry",func__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEE8max_sizeEv,0);
 
 // Block entry (label_entry_1084)
 AllocaInst* ptr_this_addr_1085 = new AllocaInst(PointerTy_155, "this.addr", label_entry_1084);
 ptr_this_addr_1085->setAlignment(8);
 StoreInst* void_1086 = new StoreInst(ptr_this_1083, ptr_this_addr_1085, false, label_entry_1084);
 void_1086->setAlignment(8);
 LoadInst* ptr_this1_1087 = new LoadInst(ptr_this_addr_1085, "this1", false, label_entry_1084);
 ReturnInst::Create(mod->getContext(), const_int64_228, label_entry_1084);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base->arg_begin();
 Value* ptr___x_1089 = args++;
 ptr___x_1089->setName("__x");
 
 BasicBlock* label_entry_1090 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base,0);
 
 // Block entry (label_entry_1090)
 AllocaInst* ptr___x_addr_1091 = new AllocaInst(PointerTy_2, "__x.addr", label_entry_1090);
 ptr___x_addr_1091->setAlignment(8);
 StoreInst* void_1092 = new StoreInst(ptr___x_1089, ptr___x_addr_1091, false, label_entry_1090);
 void_1092->setAlignment(8);
 LoadInst* ptr_1093 = new LoadInst(ptr___x_addr_1091, "", false, label_entry_1090);
 ptr_1093->setAlignment(8);
 CastInst* ptr_1094 = new BitCastInst(ptr_1093, PointerTy_88, "", label_entry_1090);
 std::vector<Value*> ptr__M_value_field_1095_indices;
 ptr__M_value_field_1095_indices.push_back(const_int32_208);
 ptr__M_value_field_1095_indices.push_back(const_int32_211);
 Instruction* ptr__M_value_field_1095 = GetElementPtrInst::Create(ptr_1094, ptr__M_value_field_1095_indices, "_M_value_field", label_entry_1090);
 ReturnInst::Create(mod->getContext(), ptr__M_value_field_1095, label_entry_1090);
 
}

// Function: _ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv (func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv)
{
 Function::arg_iterator args = func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv->arg_begin();
 Value* ptr_this_1097 = args++;
 ptr_this_1097->setName("this");
 
 BasicBlock* label_entry_1098 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEE13_M_const_castEv,0);
 
 // Block entry (label_entry_1098)
 AllocaInst* ptr_retval_1099 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "retval", label_entry_1098);
 ptr_retval_1099->setAlignment(8);
 AllocaInst* ptr_this_addr_1100 = new AllocaInst(PointerTy_48, "this.addr", label_entry_1098);
 ptr_this_addr_1100->setAlignment(8);
 StoreInst* void_1101 = new StoreInst(ptr_this_1097, ptr_this_addr_1100, false, label_entry_1098);
 void_1101->setAlignment(8);
 LoadInst* ptr_this1_1102 = new LoadInst(ptr_this_addr_1100, "this1", false, label_entry_1098);
 std::vector<Value*> ptr__M_node_1103_indices;
 ptr__M_node_1103_indices.push_back(const_int32_208);
 ptr__M_node_1103_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_1103 = GetElementPtrInst::Create(ptr_this1_1102, ptr__M_node_1103_indices, "_M_node", label_entry_1098);
 LoadInst* ptr_1104 = new LoadInst(ptr__M_node_1103, "", false, label_entry_1098);
 ptr_1104->setAlignment(8);
 CastInst* ptr_1105 = new BitCastInst(ptr_1104, PointerTy_88, "", label_entry_1098);
 std::vector<Value*> void_1106_params;
 void_1106_params.push_back(ptr_retval_1099);
 void_1106_params.push_back(ptr_1105);
 CallInst* void_1106 = CallInst::Create(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E, void_1106_params, "", label_entry_1098);
 void_1106->setCallingConv(CallingConv::C);
 void_1106->setTailCall(false);
 AttributeSet void_1106_PAL;
 void_1106->setAttributes(void_1106_PAL);
 
 std::vector<Value*> ptr_coerce_dive_1107_indices;
 ptr_coerce_dive_1107_indices.push_back(const_int32_208);
 ptr_coerce_dive_1107_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_1107 = GetElementPtrInst::Create(ptr_retval_1099, ptr_coerce_dive_1107_indices, "coerce.dive", label_entry_1098);
 LoadInst* ptr_1108 = new LoadInst(ptr_coerce_dive_1107, "", false, label_entry_1098);
 ReturnInst::Create(mod->getContext(), ptr_1108, label_entry_1098);
 
}

// Function: _ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv (func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv)
{
 Function::arg_iterator args = func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv->arg_begin();
 Value* ptr_this_1110 = args++;
 ptr_this_1110->setName("this");
 
 BasicBlock* label_entry_1111 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4sizeEv,0);
 
 // Block entry (label_entry_1111)
 AllocaInst* ptr_this_addr_1112 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1111);
 ptr_this_addr_1112->setAlignment(8);
 StoreInst* void_1113 = new StoreInst(ptr_this_1110, ptr_this_addr_1112, false, label_entry_1111);
 void_1113->setAlignment(8);
 LoadInst* ptr_this1_1114 = new LoadInst(ptr_this_addr_1112, "this1", false, label_entry_1111);
 std::vector<Value*> ptr__M_impl_1115_indices;
 ptr__M_impl_1115_indices.push_back(const_int32_208);
 ptr__M_impl_1115_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1115 = GetElementPtrInst::Create(ptr_this1_1114, ptr__M_impl_1115_indices, "_M_impl", label_entry_1111);
 std::vector<Value*> ptr__M_node_count_1116_indices;
 ptr__M_node_count_1116_indices.push_back(const_int32_208);
 ptr__M_node_count_1116_indices.push_back(const_int32_221);
 Instruction* ptr__M_node_count_1116 = GetElementPtrInst::Create(ptr__M_impl_1115, ptr__M_node_count_1116_indices, "_M_node_count", label_entry_1111);
 LoadInst* int64_1117 = new LoadInst(ptr__M_node_count_1116, "", false, label_entry_1111);
 int64_1117->setAlignment(8);
 ReturnInst::Create(mod->getContext(), int64_1117, label_entry_1111);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv->arg_begin();
 Value* ptr_this_1119 = args++;
 ptr_this_1119->setName("this");
 
 BasicBlock* label_entry_1120 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE12_M_rightmostEv,0);
 
 // Block entry (label_entry_1120)
 AllocaInst* ptr_this_addr_1121 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1120);
 ptr_this_addr_1121->setAlignment(8);
 StoreInst* void_1122 = new StoreInst(ptr_this_1119, ptr_this_addr_1121, false, label_entry_1120);
 void_1122->setAlignment(8);
 LoadInst* ptr_this1_1123 = new LoadInst(ptr_this_addr_1121, "this1", false, label_entry_1120);
 std::vector<Value*> ptr__M_impl_1124_indices;
 ptr__M_impl_1124_indices.push_back(const_int32_208);
 ptr__M_impl_1124_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1124 = GetElementPtrInst::Create(ptr_this1_1123, ptr__M_impl_1124_indices, "_M_impl", label_entry_1120);
 std::vector<Value*> ptr__M_header_1125_indices;
 ptr__M_header_1125_indices.push_back(const_int32_208);
 ptr__M_header_1125_indices.push_back(const_int32_211);
 Instruction* ptr__M_header_1125 = GetElementPtrInst::Create(ptr__M_impl_1124, ptr__M_header_1125_indices, "_M_header", label_entry_1120);
 std::vector<Value*> ptr__M_right_indices;
 ptr__M_right_indices.push_back(const_int32_208);
 ptr__M_right_indices.push_back(const_int32_229);
 Instruction* ptr__M_right = GetElementPtrInst::Create(ptr__M_header_1125, ptr__M_right_indices, "_M_right", label_entry_1120);
 ReturnInst::Create(mod->getContext(), ptr__M_right, label_entry_1120);
 
}

// Function: _ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_ (func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_)
{
 Function::arg_iterator args = func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_->arg_begin();
 Value* ptr_this_1127 = args++;
 ptr_this_1127->setName("this");
 Value* ptr___a_1128 = args++;
 ptr___a_1128->setName("__a");
 Value* ptr___b_1129 = args++;
 ptr___b_1129->setName("__b");
 
 BasicBlock* label_entry_1130 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_,0);
 
 // Block entry (label_entry_1130)
 AllocaInst* ptr_this_addr_1131 = new AllocaInst(PointerTy_107, "this.addr", label_entry_1130);
 ptr_this_addr_1131->setAlignment(8);
 AllocaInst* ptr___a_addr_1132 = new AllocaInst(PointerTy_51, "__a.addr", label_entry_1130);
 ptr___a_addr_1132->setAlignment(8);
 AllocaInst* ptr___b_addr_1133 = new AllocaInst(PointerTy_51, "__b.addr", label_entry_1130);
 ptr___b_addr_1133->setAlignment(8);
 StoreInst* void_1134 = new StoreInst(ptr_this_1127, ptr_this_addr_1131, false, label_entry_1130);
 void_1134->setAlignment(8);
 StoreInst* void_1135 = new StoreInst(ptr___a_1128, ptr___a_addr_1132, false, label_entry_1130);
 void_1135->setAlignment(8);
 StoreInst* void_1136 = new StoreInst(ptr___b_1129, ptr___b_addr_1133, false, label_entry_1130);
 void_1136->setAlignment(8);
 LoadInst* ptr_this1_1137 = new LoadInst(ptr_this_addr_1131, "this1", false, label_entry_1130);
 std::vector<Value*> ptr_first_1138_indices;
 ptr_first_1138_indices.push_back(const_int32_208);
 ptr_first_1138_indices.push_back(const_int32_208);
 Instruction* ptr_first_1138 = GetElementPtrInst::Create(ptr_this1_1137, ptr_first_1138_indices, "first", label_entry_1130);
 LoadInst* ptr_1139 = new LoadInst(ptr___a_addr_1132, "", false, label_entry_1130);
 ptr_1139->setAlignment(8);
 LoadInst* ptr_1140 = new LoadInst(ptr_1139, "", false, label_entry_1130);
 ptr_1140->setAlignment(8);
 StoreInst* void_1141 = new StoreInst(ptr_1140, ptr_first_1138, false, label_entry_1130);
 void_1141->setAlignment(8);
 std::vector<Value*> ptr_second_1142_indices;
 ptr_second_1142_indices.push_back(const_int32_208);
 ptr_second_1142_indices.push_back(const_int32_211);
 Instruction* ptr_second_1142 = GetElementPtrInst::Create(ptr_this1_1137, ptr_second_1142_indices, "second", label_entry_1130);
 LoadInst* ptr_1143 = new LoadInst(ptr___b_addr_1133, "", false, label_entry_1130);
 ptr_1143->setAlignment(8);
 LoadInst* ptr_1144 = new LoadInst(ptr_1143, "", false, label_entry_1130);
 ptr_1144->setAlignment(8);
 StoreInst* void_1145 = new StoreInst(ptr_1144, ptr_second_1142, false, label_entry_1130);
 void_1145->setAlignment(8);
 ReturnInst::Create(mod->getContext(), label_entry_1130);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_ (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_->arg_begin();
 Value* ptr_this_1147 = args++;
 ptr_this_1147->setName("this");
 Value* ptr___k_1148 = args++;
 ptr___k_1148->setName("__k");
 
 BasicBlock* label_entry_1149 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_while_cond = BasicBlock::Create(mod->getContext(), "while.cond",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_while_body = BasicBlock::Create(mod->getContext(), "while.body",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_cond_true = BasicBlock::Create(mod->getContext(), "cond.true",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_cond_false = BasicBlock::Create(mod->getContext(), "cond.false",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_cond_end = BasicBlock::Create(mod->getContext(), "cond.end",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_while_end = BasicBlock::Create(mod->getContext(), "while.end",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_if_then_1150 = BasicBlock::Create(mod->getContext(), "if.then",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_if_then10 = BasicBlock::Create(mod->getContext(), "if.then10",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_if_else_1151 = BasicBlock::Create(mod->getContext(), "if.else",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_if_end_1152 = BasicBlock::Create(mod->getContext(), "if.end",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_if_end14 = BasicBlock::Create(mod->getContext(), "if.end14",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_if_then19 = BasicBlock::Create(mod->getContext(), "if.then19",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_if_end22 = BasicBlock::Create(mod->getContext(), "if.end22",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 BasicBlock* label_return_1153 = BasicBlock::Create(mod->getContext(), "return",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE24_M_get_insert_unique_posERS1_,0);
 
 // Block entry (label_entry_1149)
 AllocaInst* ptr_retval_1154 = new AllocaInst(StructTy_struct_std__pair_3, "retval", label_entry_1149);
 ptr_retval_1154->setAlignment(8);
 AllocaInst* ptr_this_addr_1155 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1149);
 ptr_this_addr_1155->setAlignment(8);
 AllocaInst* ptr___k_addr_1156 = new AllocaInst(PointerTy_33, "__k.addr", label_entry_1149);
 ptr___k_addr_1156->setAlignment(8);
 AllocaInst* ptr___x_1157 = new AllocaInst(PointerTy_88, "__x", label_entry_1149);
 ptr___x_1157->setAlignment(8);
 AllocaInst* ptr___y_1158 = new AllocaInst(PointerTy_88, "__y", label_entry_1149);
 ptr___y_1158->setAlignment(8);
 AllocaInst* ptr___comp = new AllocaInst(IntegerType::get(mod->getContext(), 8), "__comp", label_entry_1149);
 ptr___comp->setAlignment(1);
 AllocaInst* ptr___j = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "__j", label_entry_1149);
 ptr___j->setAlignment(8);
 AllocaInst* ptr_ref_tmp_1159 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "ref.tmp", label_entry_1149);
 ptr_ref_tmp_1159->setAlignment(8);
 AllocaInst* ptr_ref_tmp11 = new AllocaInst(PointerTy_2, "ref.tmp11", label_entry_1149);
 ptr_ref_tmp11->setAlignment(8);
 AllocaInst* ptr_ref_tmp12 = new AllocaInst(PointerTy_2, "ref.tmp12", label_entry_1149);
 ptr_ref_tmp12->setAlignment(8);
 AllocaInst* ptr_ref_tmp20 = new AllocaInst(PointerTy_2, "ref.tmp20", label_entry_1149);
 ptr_ref_tmp20->setAlignment(8);
 AllocaInst* ptr_ref_tmp21 = new AllocaInst(PointerTy_2, "ref.tmp21", label_entry_1149);
 ptr_ref_tmp21->setAlignment(8);
 AllocaInst* ptr_ref_tmp24 = new AllocaInst(PointerTy_2, "ref.tmp24", label_entry_1149);
 ptr_ref_tmp24->setAlignment(8);
 StoreInst* void_1160 = new StoreInst(ptr_this_1147, ptr_this_addr_1155, false, label_entry_1149);
 void_1160->setAlignment(8);
 StoreInst* void_1161 = new StoreInst(ptr___k_1148, ptr___k_addr_1156, false, label_entry_1149);
 void_1161->setAlignment(8);
 LoadInst* ptr_this1_1162 = new LoadInst(ptr_this_addr_1155, "this1", false, label_entry_1149);
 CallInst* ptr_call_1163 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv, ptr_this1_1162, "call", label_entry_1149);
 ptr_call_1163->setCallingConv(CallingConv::C);
 ptr_call_1163->setTailCall(false);
 AttributeSet ptr_call_1163_PAL;
 ptr_call_1163->setAttributes(ptr_call_1163_PAL);
 
 StoreInst* void_1164 = new StoreInst(ptr_call_1163, ptr___x_1157, false, label_entry_1149);
 void_1164->setAlignment(8);
 CallInst* ptr_call2_1165 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv, ptr_this1_1162, "call2", label_entry_1149);
 ptr_call2_1165->setCallingConv(CallingConv::C);
 ptr_call2_1165->setTailCall(false);
 AttributeSet ptr_call2_1165_PAL;
 ptr_call2_1165->setAttributes(ptr_call2_1165_PAL);
 
 StoreInst* void_1166 = new StoreInst(ptr_call2_1165, ptr___y_1158, false, label_entry_1149);
 void_1166->setAlignment(8);
 StoreInst* void_1167 = new StoreInst(const_int8_230, ptr___comp, false, label_entry_1149);
 void_1167->setAlignment(1);
 BranchInst::Create(label_while_cond, label_entry_1149);
 
 // Block while.cond (label_while_cond)
 LoadInst* ptr_1169 = new LoadInst(ptr___x_1157, "", false, label_while_cond);
 ptr_1169->setAlignment(8);
 ICmpInst* int1_cmp_1170 = new ICmpInst(*label_while_cond, ICmpInst::ICMP_NE, ptr_1169, const_ptr_223, "cmp");
 BranchInst::Create(label_while_body, label_while_end, int1_cmp_1170, label_while_cond);
 
 // Block while.body (label_while_body)
 LoadInst* ptr_1172 = new LoadInst(ptr___x_1157, "", false, label_while_body);
 ptr_1172->setAlignment(8);
 StoreInst* void_1173 = new StoreInst(ptr_1172, ptr___y_1158, false, label_while_body);
 void_1173->setAlignment(8);
 std::vector<Value*> ptr__M_impl_1174_indices;
 ptr__M_impl_1174_indices.push_back(const_int32_208);
 ptr__M_impl_1174_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1174 = GetElementPtrInst::Create(ptr_this1_1162, ptr__M_impl_1174_indices, "_M_impl", label_while_body);
 std::vector<Value*> ptr__M_key_compare_1175_indices;
 ptr__M_key_compare_1175_indices.push_back(const_int32_208);
 ptr__M_key_compare_1175_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare_1175 = GetElementPtrInst::Create(ptr__M_impl_1174, ptr__M_key_compare_1175_indices, "_M_key_compare", label_while_body);
 LoadInst* ptr_1176 = new LoadInst(ptr___k_addr_1156, "", false, label_while_body);
 ptr_1176->setAlignment(8);
 LoadInst* ptr_1177 = new LoadInst(ptr___x_1157, "", false, label_while_body);
 ptr_1177->setAlignment(8);
 CallInst* ptr_call3_1178 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E, ptr_1177, "call3", label_while_body);
 ptr_call3_1178->setCallingConv(CallingConv::C);
 ptr_call3_1178->setTailCall(false);
 AttributeSet ptr_call3_1178_PAL;
 ptr_call3_1178->setAttributes(ptr_call3_1178_PAL);
 
 std::vector<Value*> int1_call4_1179_params;
 int1_call4_1179_params.push_back(ptr__M_key_compare_1175);
 int1_call4_1179_params.push_back(ptr_1176);
 int1_call4_1179_params.push_back(ptr_call3_1178);
 CallInst* int1_call4_1179 = CallInst::Create(func__ZNKSt4lessISsEclERKSsS2_, int1_call4_1179_params, "call4", label_while_body);
 int1_call4_1179->setCallingConv(CallingConv::C);
 int1_call4_1179->setTailCall(false);
 AttributeSet int1_call4_1179_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call4_1179_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call4_1179->setAttributes(int1_call4_1179_PAL);
 
 CastInst* int8_frombool_1180 = new ZExtInst(int1_call4_1179, IntegerType::get(mod->getContext(), 8), "frombool", label_while_body);
 StoreInst* void_1181 = new StoreInst(int8_frombool_1180, ptr___comp, false, label_while_body);
 void_1181->setAlignment(1);
 LoadInst* int8_1182 = new LoadInst(ptr___comp, "", false, label_while_body);
 int8_1182->setAlignment(1);
 CastInst* int1_tobool_1183 = new TruncInst(int8_1182, IntegerType::get(mod->getContext(), 1), "tobool", label_while_body);
 BranchInst::Create(label_cond_true, label_cond_false, int1_tobool_1183, label_while_body);
 
 // Block cond.true (label_cond_true)
 LoadInst* ptr_1185 = new LoadInst(ptr___x_1157, "", false, label_cond_true);
 ptr_1185->setAlignment(8);
 CastInst* ptr_1186 = new BitCastInst(ptr_1185, PointerTy_2, "", label_cond_true);
 CallInst* ptr_call5_1187 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base, ptr_1186, "call5", label_cond_true);
 ptr_call5_1187->setCallingConv(CallingConv::C);
 ptr_call5_1187->setTailCall(false);
 AttributeSet ptr_call5_1187_PAL;
 ptr_call5_1187->setAttributes(ptr_call5_1187_PAL);
 
 BranchInst::Create(label_cond_end, label_cond_true);
 
 // Block cond.false (label_cond_false)
 LoadInst* ptr_1189 = new LoadInst(ptr___x_1157, "", false, label_cond_false);
 ptr_1189->setAlignment(8);
 CastInst* ptr_1190 = new BitCastInst(ptr_1189, PointerTy_2, "", label_cond_false);
 CallInst* ptr_call6_1191 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base, ptr_1190, "call6", label_cond_false);
 ptr_call6_1191->setCallingConv(CallingConv::C);
 ptr_call6_1191->setTailCall(false);
 AttributeSet ptr_call6_1191_PAL;
 ptr_call6_1191->setAttributes(ptr_call6_1191_PAL);
 
 BranchInst::Create(label_cond_end, label_cond_false);
 
 // Block cond.end (label_cond_end)
 PHINode* ptr_cond = PHINode::Create(PointerTy_88, 2, "cond", label_cond_end);
 ptr_cond->addIncoming(ptr_call5_1187, label_cond_true);
 ptr_cond->addIncoming(ptr_call6_1191, label_cond_false);
 
 StoreInst* void_1193 = new StoreInst(ptr_cond, ptr___x_1157, false, label_cond_end);
 void_1193->setAlignment(8);
 BranchInst::Create(label_while_cond, label_cond_end);
 
 // Block while.end (label_while_end)
 LoadInst* ptr_1195 = new LoadInst(ptr___y_1158, "", false, label_while_end);
 ptr_1195->setAlignment(8);
 std::vector<Value*> void_1196_params;
 void_1196_params.push_back(ptr___j);
 void_1196_params.push_back(ptr_1195);
 CallInst* void_1196 = CallInst::Create(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E, void_1196_params, "", label_while_end);
 void_1196->setCallingConv(CallingConv::C);
 void_1196->setTailCall(false);
 AttributeSet void_1196_PAL;
 void_1196->setAttributes(void_1196_PAL);
 
 LoadInst* int8_1197 = new LoadInst(ptr___comp, "", false, label_while_end);
 int8_1197->setAlignment(1);
 CastInst* int1_tobool7 = new TruncInst(int8_1197, IntegerType::get(mod->getContext(), 1), "tobool7", label_while_end);
 BranchInst::Create(label_if_then_1150, label_if_end14, int1_tobool7, label_while_end);
 
 // Block if.then (label_if_then_1150)
 CallInst* ptr_call8 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE5beginEv, ptr_this1_1162, "call8", label_if_then_1150);
 ptr_call8->setCallingConv(CallingConv::C);
 ptr_call8->setTailCall(false);
 AttributeSet ptr_call8_PAL;
 ptr_call8->setAttributes(ptr_call8_PAL);
 
 std::vector<Value*> ptr_coerce_dive_1199_indices;
 ptr_coerce_dive_1199_indices.push_back(const_int32_208);
 ptr_coerce_dive_1199_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_1199 = GetElementPtrInst::Create(ptr_ref_tmp_1159, ptr_coerce_dive_1199_indices, "coerce.dive", label_if_then_1150);
 StoreInst* void_1200 = new StoreInst(ptr_call8, ptr_coerce_dive_1199, false, label_if_then_1150);
 std::vector<Value*> int1_call9_params;
 int1_call9_params.push_back(ptr___j);
 int1_call9_params.push_back(ptr_ref_tmp_1159);
 CallInst* int1_call9 = CallInst::Create(func__ZNKSt17_Rb_tree_iteratorISt4pairIKSsiEEeqERKS3_, int1_call9_params, "call9", label_if_then_1150);
 int1_call9->setCallingConv(CallingConv::C);
 int1_call9->setTailCall(false);
 AttributeSet int1_call9_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call9_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call9->setAttributes(int1_call9_PAL);
 
 BranchInst::Create(label_if_then10, label_if_else_1151, int1_call9, label_if_then_1150);
 
 // Block if.then10 (label_if_then10)
 LoadInst* ptr_1202 = new LoadInst(ptr___x_1157, "", false, label_if_then10);
 ptr_1202->setAlignment(8);
 CastInst* ptr_1203 = new BitCastInst(ptr_1202, PointerTy_2, "", label_if_then10);
 StoreInst* void_1204 = new StoreInst(ptr_1203, ptr_ref_tmp11, false, label_if_then10);
 LoadInst* ptr_1205 = new LoadInst(ptr___y_1158, "", false, label_if_then10);
 ptr_1205->setAlignment(8);
 CastInst* ptr_1206 = new BitCastInst(ptr_1205, PointerTy_2, "", label_if_then10);
 StoreInst* void_1207 = new StoreInst(ptr_1206, ptr_ref_tmp12, false, label_if_then10);
 std::vector<Value*> void_1208_params;
 void_1208_params.push_back(ptr_retval_1154);
 void_1208_params.push_back(ptr_ref_tmp11);
 void_1208_params.push_back(ptr_ref_tmp12);
 CallInst* void_1208 = CallInst::Create(func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_, void_1208_params, "", label_if_then10);
 void_1208->setCallingConv(CallingConv::C);
 void_1208->setTailCall(false);
 AttributeSet void_1208_PAL;
 void_1208->setAttributes(void_1208_PAL);
 
 BranchInst::Create(label_return_1153, label_if_then10);
 
 // Block if.else (label_if_else_1151)
 CallInst* ptr_call13 = CallInst::Create(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv, ptr___j, "call13", label_if_else_1151);
 ptr_call13->setCallingConv(CallingConv::C);
 ptr_call13->setTailCall(false);
 AttributeSet ptr_call13_PAL;
 ptr_call13->setAttributes(ptr_call13_PAL);
 
 BranchInst::Create(label_if_end_1152, label_if_else_1151);
 
 // Block if.end (label_if_end_1152)
 BranchInst::Create(label_if_end14, label_if_end_1152);
 
 // Block if.end14 (label_if_end14)
 std::vector<Value*> ptr__M_impl15_indices;
 ptr__M_impl15_indices.push_back(const_int32_208);
 ptr__M_impl15_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl15 = GetElementPtrInst::Create(ptr_this1_1162, ptr__M_impl15_indices, "_M_impl15", label_if_end14);
 std::vector<Value*> ptr__M_key_compare16_indices;
 ptr__M_key_compare16_indices.push_back(const_int32_208);
 ptr__M_key_compare16_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare16 = GetElementPtrInst::Create(ptr__M_impl15, ptr__M_key_compare16_indices, "_M_key_compare16", label_if_end14);
 std::vector<Value*> ptr__M_node_1212_indices;
 ptr__M_node_1212_indices.push_back(const_int32_208);
 ptr__M_node_1212_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_1212 = GetElementPtrInst::Create(ptr___j, ptr__M_node_1212_indices, "_M_node", label_if_end14);
 LoadInst* ptr_1213 = new LoadInst(ptr__M_node_1212, "", false, label_if_end14);
 ptr_1213->setAlignment(8);
 CallInst* ptr_call17 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base, ptr_1213, "call17", label_if_end14);
 ptr_call17->setCallingConv(CallingConv::C);
 ptr_call17->setTailCall(false);
 AttributeSet ptr_call17_PAL;
 ptr_call17->setAttributes(ptr_call17_PAL);
 
 LoadInst* ptr_1214 = new LoadInst(ptr___k_addr_1156, "", false, label_if_end14);
 ptr_1214->setAlignment(8);
 std::vector<Value*> int1_call18_params;
 int1_call18_params.push_back(ptr__M_key_compare16);
 int1_call18_params.push_back(ptr_call17);
 int1_call18_params.push_back(ptr_1214);
 CallInst* int1_call18 = CallInst::Create(func__ZNKSt4lessISsEclERKSsS2_, int1_call18_params, "call18", label_if_end14);
 int1_call18->setCallingConv(CallingConv::C);
 int1_call18->setTailCall(false);
 AttributeSet int1_call18_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call18_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call18->setAttributes(int1_call18_PAL);
 
 BranchInst::Create(label_if_then19, label_if_end22, int1_call18, label_if_end14);
 
 // Block if.then19 (label_if_then19)
 LoadInst* ptr_1216 = new LoadInst(ptr___x_1157, "", false, label_if_then19);
 ptr_1216->setAlignment(8);
 CastInst* ptr_1217 = new BitCastInst(ptr_1216, PointerTy_2, "", label_if_then19);
 StoreInst* void_1218 = new StoreInst(ptr_1217, ptr_ref_tmp20, false, label_if_then19);
 LoadInst* ptr_1219 = new LoadInst(ptr___y_1158, "", false, label_if_then19);
 ptr_1219->setAlignment(8);
 CastInst* ptr_1220 = new BitCastInst(ptr_1219, PointerTy_2, "", label_if_then19);
 StoreInst* void_1221 = new StoreInst(ptr_1220, ptr_ref_tmp21, false, label_if_then19);
 std::vector<Value*> void_1222_params;
 void_1222_params.push_back(ptr_retval_1154);
 void_1222_params.push_back(ptr_ref_tmp20);
 void_1222_params.push_back(ptr_ref_tmp21);
 CallInst* void_1222 = CallInst::Create(func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_, void_1222_params, "", label_if_then19);
 void_1222->setCallingConv(CallingConv::C);
 void_1222->setTailCall(false);
 AttributeSet void_1222_PAL;
 void_1222->setAttributes(void_1222_PAL);
 
 BranchInst::Create(label_return_1153, label_if_then19);
 
 // Block if.end22 (label_if_end22)
 std::vector<Value*> ptr__M_node23_indices;
 ptr__M_node23_indices.push_back(const_int32_208);
 ptr__M_node23_indices.push_back(const_int32_208);
 Instruction* ptr__M_node23 = GetElementPtrInst::Create(ptr___j, ptr__M_node23_indices, "_M_node23", label_if_end22);
 StoreInst* void_1224 = new StoreInst(const_ptr_222, ptr_ref_tmp24, false, label_if_end22);
 std::vector<Value*> void_1225_params;
 void_1225_params.push_back(ptr_retval_1154);
 void_1225_params.push_back(ptr__M_node23);
 void_1225_params.push_back(ptr_ref_tmp24);
 CallInst* void_1225 = CallInst::Create(func__ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2ERKS1_S4_, void_1225_params, "", label_if_end22);
 void_1225->setCallingConv(CallingConv::C);
 void_1225->setTailCall(false);
 AttributeSet void_1225_PAL;
 void_1225->setAttributes(void_1225_PAL);
 
 BranchInst::Create(label_return_1153, label_if_end22);
 
 // Block return (label_return_1153)
 CastInst* ptr_1227 = new BitCastInst(ptr_retval_1154, PointerTy_114, "", label_return_1153);
 LoadInst* struct_1228 = new LoadInst(ptr_1227, "", false, label_return_1153);
 struct_1228->setAlignment(1);
 ReturnInst::Create(mod->getContext(), struct_1228, label_return_1153);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv->arg_begin();
 Value* ptr_this_1230 = args++;
 ptr_this_1230->setName("this");
 
 BasicBlock* label_entry_1231 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_leftmostEv,0);
 
 // Block entry (label_entry_1231)
 AllocaInst* ptr_this_addr_1232 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1231);
 ptr_this_addr_1232->setAlignment(8);
 StoreInst* void_1233 = new StoreInst(ptr_this_1230, ptr_this_addr_1232, false, label_entry_1231);
 void_1233->setAlignment(8);
 LoadInst* ptr_this1_1234 = new LoadInst(ptr_this_addr_1232, "this1", false, label_entry_1231);
 std::vector<Value*> ptr__M_impl_1235_indices;
 ptr__M_impl_1235_indices.push_back(const_int32_208);
 ptr__M_impl_1235_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1235 = GetElementPtrInst::Create(ptr_this1_1234, ptr__M_impl_1235_indices, "_M_impl", label_entry_1231);
 std::vector<Value*> ptr__M_header_1236_indices;
 ptr__M_header_1236_indices.push_back(const_int32_208);
 ptr__M_header_1236_indices.push_back(const_int32_211);
 Instruction* ptr__M_header_1236 = GetElementPtrInst::Create(ptr__M_impl_1235, ptr__M_header_1236_indices, "_M_header", label_entry_1231);
 std::vector<Value*> ptr__M_left_1237_indices;
 ptr__M_left_1237_indices.push_back(const_int32_208);
 ptr__M_left_1237_indices.push_back(const_int32_221);
 Instruction* ptr__M_left_1237 = GetElementPtrInst::Create(ptr__M_header_1236, ptr__M_left_1237_indices, "_M_left", label_entry_1231);
 ReturnInst::Create(mod->getContext(), ptr__M_left_1237, label_entry_1231);
 
}

// Function: _ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv (func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv)
{
 Function::arg_iterator args = func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv->arg_begin();
 Value* ptr_this_1239 = args++;
 ptr_this_1239->setName("this");
 
 BasicBlock* label_entry_1240 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEmmEv,0);
 
 // Block entry (label_entry_1240)
 AllocaInst* ptr_this_addr_1241 = new AllocaInst(PointerTy_56, "this.addr", label_entry_1240);
 ptr_this_addr_1241->setAlignment(8);
 StoreInst* void_1242 = new StoreInst(ptr_this_1239, ptr_this_addr_1241, false, label_entry_1240);
 void_1242->setAlignment(8);
 LoadInst* ptr_this1_1243 = new LoadInst(ptr_this_addr_1241, "this1", false, label_entry_1240);
 std::vector<Value*> ptr__M_node_1244_indices;
 ptr__M_node_1244_indices.push_back(const_int32_208);
 ptr__M_node_1244_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_1244 = GetElementPtrInst::Create(ptr_this1_1243, ptr__M_node_1244_indices, "_M_node", label_entry_1240);
 LoadInst* ptr_1245 = new LoadInst(ptr__M_node_1244, "", false, label_entry_1240);
 ptr_1245->setAlignment(8);
 CallInst* ptr_call_1246 = CallInst::Create(func__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base, ptr_1245, "call", label_entry_1240);
 ptr_call_1246->setCallingConv(CallingConv::C);
 ptr_call_1246->setTailCall(false);
 AttributeSet ptr_call_1246_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::ReadOnly);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  ptr_call_1246_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 ptr_call_1246->setAttributes(ptr_call_1246_PAL);
 
 std::vector<Value*> ptr__M_node2_1247_indices;
 ptr__M_node2_1247_indices.push_back(const_int32_208);
 ptr__M_node2_1247_indices.push_back(const_int32_208);
 Instruction* ptr__M_node2_1247 = GetElementPtrInst::Create(ptr_this1_1243, ptr__M_node2_1247_indices, "_M_node2", label_entry_1240);
 StoreInst* void_1248 = new StoreInst(ptr_call_1246, ptr__M_node2_1247, false, label_entry_1240);
 void_1248->setAlignment(8);
 ReturnInst::Create(mod->getContext(), ptr_this1_1243, label_entry_1240);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base->arg_begin();
 Value* ptr___x_1250 = args++;
 ptr___x_1250->setName("__x");
 
 BasicBlock* label_entry_1251 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base,0);
 
 // Block entry (label_entry_1251)
 AllocaInst* ptr___x_addr_1252 = new AllocaInst(PointerTy_2, "__x.addr", label_entry_1251);
 ptr___x_addr_1252->setAlignment(8);
 StoreInst* void_1253 = new StoreInst(ptr___x_1250, ptr___x_addr_1252, false, label_entry_1251);
 void_1253->setAlignment(8);
 LoadInst* ptr_1254 = new LoadInst(ptr___x_addr_1252, "", false, label_entry_1251);
 ptr_1254->setAlignment(8);
 std::vector<Value*> ptr__M_right_1255_indices;
 ptr__M_right_1255_indices.push_back(const_int32_208);
 ptr__M_right_1255_indices.push_back(const_int32_229);
 Instruction* ptr__M_right_1255 = GetElementPtrInst::Create(ptr_1254, ptr__M_right_1255_indices, "_M_right", label_entry_1251);
 LoadInst* ptr_1256 = new LoadInst(ptr__M_right_1255, "", false, label_entry_1251);
 ptr_1256->setAlignment(8);
 CastInst* ptr_1257 = new BitCastInst(ptr_1256, PointerTy_88, "", label_entry_1251);
 ReturnInst::Create(mod->getContext(), ptr_1257, label_entry_1251);
 
}

// Function: _ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv (func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv)
{
 Function::arg_iterator args = func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv->arg_begin();
 Value* ptr_this_1259 = args++;
 ptr_this_1259->setName("this");
 
 BasicBlock* label_entry_1260 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEppEv,0);
 
 // Block entry (label_entry_1260)
 AllocaInst* ptr_this_addr_1261 = new AllocaInst(PointerTy_56, "this.addr", label_entry_1260);
 ptr_this_addr_1261->setAlignment(8);
 StoreInst* void_1262 = new StoreInst(ptr_this_1259, ptr_this_addr_1261, false, label_entry_1260);
 void_1262->setAlignment(8);
 LoadInst* ptr_this1_1263 = new LoadInst(ptr_this_addr_1261, "this1", false, label_entry_1260);
 std::vector<Value*> ptr__M_node_1264_indices;
 ptr__M_node_1264_indices.push_back(const_int32_208);
 ptr__M_node_1264_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_1264 = GetElementPtrInst::Create(ptr_this1_1263, ptr__M_node_1264_indices, "_M_node", label_entry_1260);
 LoadInst* ptr_1265 = new LoadInst(ptr__M_node_1264, "", false, label_entry_1260);
 ptr_1265->setAlignment(8);
 CallInst* ptr_call_1266 = CallInst::Create(func__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base, ptr_1265, "call", label_entry_1260);
 ptr_call_1266->setCallingConv(CallingConv::C);
 ptr_call_1266->setTailCall(false);
 AttributeSet ptr_call_1266_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    B.addAttribute(Attribute::ReadOnly);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  ptr_call_1266_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 ptr_call_1266->setAttributes(ptr_call_1266_PAL);
 
 std::vector<Value*> ptr__M_node2_1267_indices;
 ptr__M_node2_1267_indices.push_back(const_int32_208);
 ptr__M_node2_1267_indices.push_back(const_int32_208);
 Instruction* ptr__M_node2_1267 = GetElementPtrInst::Create(ptr_this1_1263, ptr__M_node2_1267_indices, "_M_node2", label_entry_1260);
 StoreInst* void_1268 = new StoreInst(ptr_call_1266, ptr__M_node2_1267, false, label_entry_1260);
 void_1268->setAlignment(8);
 ReturnInst::Create(mod->getContext(), ptr_this1_1263, label_entry_1260);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv->arg_begin();
 Value* ptr_this_1270 = args++;
 ptr_this_1270->setName("this");
 
 BasicBlock* label_entry_1271 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv,0);
 
 // Block entry (label_entry_1271)
 AllocaInst* ptr_this_addr_1272 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1271);
 ptr_this_addr_1272->setAlignment(8);
 StoreInst* void_1273 = new StoreInst(ptr_this_1270, ptr_this_addr_1272, false, label_entry_1271);
 void_1273->setAlignment(8);
 LoadInst* ptr_this1_1274 = new LoadInst(ptr_this_addr_1272, "this1", false, label_entry_1271);
 std::vector<Value*> ptr__M_impl_1275_indices;
 ptr__M_impl_1275_indices.push_back(const_int32_208);
 ptr__M_impl_1275_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1275 = GetElementPtrInst::Create(ptr_this1_1274, ptr__M_impl_1275_indices, "_M_impl", label_entry_1271);
 std::vector<Value*> ptr__M_header_1276_indices;
 ptr__M_header_1276_indices.push_back(const_int32_208);
 ptr__M_header_1276_indices.push_back(const_int32_211);
 Instruction* ptr__M_header_1276 = GetElementPtrInst::Create(ptr__M_impl_1275, ptr__M_header_1276_indices, "_M_header", label_entry_1271);
 std::vector<Value*> ptr__M_parent_indices;
 ptr__M_parent_indices.push_back(const_int32_208);
 ptr__M_parent_indices.push_back(const_int32_211);
 Instruction* ptr__M_parent = GetElementPtrInst::Create(ptr__M_header_1276, ptr__M_parent_indices, "_M_parent", label_entry_1271);
 LoadInst* ptr_1277 = new LoadInst(ptr__M_parent, "", false, label_entry_1271);
 ptr_1277->setAlignment(8);
 CastInst* ptr_1278 = new BitCastInst(ptr_1277, PointerTy_88, "", label_entry_1271);
 ReturnInst::Create(mod->getContext(), ptr_1278, label_entry_1271);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E->arg_begin();
 Value* ptr___x_1280 = args++;
 ptr___x_1280->setName("__x");
 
 BasicBlock* label_entry_1281 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E,0);
 
 // Block entry (label_entry_1281)
 AllocaInst* ptr___x_addr_1282 = new AllocaInst(PointerTy_88, "__x.addr", label_entry_1281);
 ptr___x_addr_1282->setAlignment(8);
 AllocaInst* ptr_tmp_1283 = new AllocaInst(StructTy_struct_std___Select1st, "tmp", label_entry_1281);
 ptr_tmp_1283->setAlignment(1);
 StoreInst* void_1284 = new StoreInst(ptr___x_1280, ptr___x_addr_1282, false, label_entry_1281);
 void_1284->setAlignment(8);
 LoadInst* ptr_1285 = new LoadInst(ptr___x_addr_1282, "", false, label_entry_1281);
 ptr_1285->setAlignment(8);
 CallInst* ptr_call_1286 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E, ptr_1285, "call", label_entry_1281);
 ptr_call_1286->setCallingConv(CallingConv::C);
 ptr_call_1286->setTailCall(false);
 AttributeSet ptr_call_1286_PAL;
 ptr_call_1286->setAttributes(ptr_call_1286_PAL);
 
 std::vector<Value*> ptr_call1_1287_params;
 ptr_call1_1287_params.push_back(ptr_tmp_1283);
 ptr_call1_1287_params.push_back(ptr_call_1286);
 CallInst* ptr_call1_1287 = CallInst::Create(func__ZNKSt10_Select1stISt4pairIKSsiEEclERKS2_, ptr_call1_1287_params, "call1", label_entry_1281);
 ptr_call1_1287->setCallingConv(CallingConv::C);
 ptr_call1_1287->setTailCall(false);
 AttributeSet ptr_call1_1287_PAL;
 ptr_call1_1287->setAttributes(ptr_call1_1287_PAL);
 
 ReturnInst::Create(mod->getContext(), ptr_call1_1287, label_entry_1281);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base->arg_begin();
 Value* ptr___x_1289 = args++;
 ptr___x_1289->setName("__x");
 
 BasicBlock* label_entry_1290 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base,0);
 
 // Block entry (label_entry_1290)
 AllocaInst* ptr___x_addr_1291 = new AllocaInst(PointerTy_2, "__x.addr", label_entry_1290);
 ptr___x_addr_1291->setAlignment(8);
 StoreInst* void_1292 = new StoreInst(ptr___x_1289, ptr___x_addr_1291, false, label_entry_1290);
 void_1292->setAlignment(8);
 LoadInst* ptr_1293 = new LoadInst(ptr___x_addr_1291, "", false, label_entry_1290);
 ptr_1293->setAlignment(8);
 std::vector<Value*> ptr__M_left_1294_indices;
 ptr__M_left_1294_indices.push_back(const_int32_208);
 ptr__M_left_1294_indices.push_back(const_int32_221);
 Instruction* ptr__M_left_1294 = GetElementPtrInst::Create(ptr_1293, ptr__M_left_1294_indices, "_M_left", label_entry_1290);
 LoadInst* ptr_1295 = new LoadInst(ptr__M_left_1294, "", false, label_entry_1290);
 ptr_1295->setAlignment(8);
 CastInst* ptr_1296 = new BitCastInst(ptr_1295, PointerTy_88, "", label_entry_1290);
 ReturnInst::Create(mod->getContext(), ptr_1296, label_entry_1290);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E->arg_begin();
 Value* ptr___x_1298 = args++;
 ptr___x_1298->setName("__x");
 
 BasicBlock* label_entry_1299 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E,0);
 
 // Block entry (label_entry_1299)
 AllocaInst* ptr___x_addr_1300 = new AllocaInst(PointerTy_88, "__x.addr", label_entry_1299);
 ptr___x_addr_1300->setAlignment(8);
 StoreInst* void_1301 = new StoreInst(ptr___x_1298, ptr___x_addr_1300, false, label_entry_1299);
 void_1301->setAlignment(8);
 LoadInst* ptr_1302 = new LoadInst(ptr___x_addr_1300, "", false, label_entry_1299);
 ptr_1302->setAlignment(8);
 std::vector<Value*> ptr__M_value_field_1303_indices;
 ptr__M_value_field_1303_indices.push_back(const_int32_208);
 ptr__M_value_field_1303_indices.push_back(const_int32_211);
 Instruction* ptr__M_value_field_1303 = GetElementPtrInst::Create(ptr_1302, ptr__M_value_field_1303_indices, "_M_value_field", label_entry_1299);
 ReturnInst::Create(mod->getContext(), ptr__M_value_field_1303, label_entry_1299);
 
}

// Function: _ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_ (func__ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_)
{
 Function::arg_iterator args = func__ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_->arg_begin();
 Value* ptr___lhs = args++;
 ptr___lhs->setName("__lhs");
 Value* ptr___rhs = args++;
 ptr___rhs->setName("__rhs");
 
 BasicBlock* label_entry_1305 = BasicBlock::Create(mod->getContext(), "entry",func__ZStltIcSt11char_traitsIcESaIcEEbRKSbIT_T0_T1_ES8_,0);
 
 // Block entry (label_entry_1305)
 AllocaInst* ptr___lhs_addr = new AllocaInst(PointerTy_33, "__lhs.addr", label_entry_1305);
 ptr___lhs_addr->setAlignment(8);
 AllocaInst* ptr___rhs_addr = new AllocaInst(PointerTy_33, "__rhs.addr", label_entry_1305);
 ptr___rhs_addr->setAlignment(8);
 StoreInst* void_1306 = new StoreInst(ptr___lhs, ptr___lhs_addr, false, label_entry_1305);
 void_1306->setAlignment(8);
 StoreInst* void_1307 = new StoreInst(ptr___rhs, ptr___rhs_addr, false, label_entry_1305);
 void_1307->setAlignment(8);
 LoadInst* ptr_1308 = new LoadInst(ptr___lhs_addr, "", false, label_entry_1305);
 ptr_1308->setAlignment(8);
 LoadInst* ptr_1309 = new LoadInst(ptr___rhs_addr, "", false, label_entry_1305);
 ptr_1309->setAlignment(8);
 std::vector<Value*> int32_call_params;
 int32_call_params.push_back(ptr_1308);
 int32_call_params.push_back(ptr_1309);
 CallInst* int32_call = CallInst::Create(func__ZNKSs7compareERKSs, int32_call_params, "call", label_entry_1305);
 int32_call->setCallingConv(CallingConv::C);
 int32_call->setTailCall(false);
 AttributeSet int32_call_PAL;
 int32_call->setAttributes(int32_call_PAL);
 
 ICmpInst* int1_cmp_1310 = new ICmpInst(*label_entry_1305, ICmpInst::ICMP_SLT, int32_call, const_int32_208, "cmp");
 ReturnInst::Create(mod->getContext(), int1_cmp_1310, label_entry_1305);
 
}

// Function: _ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv (func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv)
{
 Function::arg_iterator args = func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv->arg_begin();
 Value* ptr_this_1312 = args++;
 ptr_this_1312->setName("this");
 
 BasicBlock* label_entry_1313 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8key_compEv,0);
 
 // Block entry (label_entry_1313)
 AllocaInst* ptr_retval_1314 = new AllocaInst(StructTy_struct_std__less, "retval", label_entry_1313);
 ptr_retval_1314->setAlignment(1);
 AllocaInst* ptr_this_addr_1315 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1313);
 ptr_this_addr_1315->setAlignment(8);
 StoreInst* void_1316 = new StoreInst(ptr_this_1312, ptr_this_addr_1315, false, label_entry_1313);
 void_1316->setAlignment(8);
 LoadInst* ptr_this1_1317 = new LoadInst(ptr_this_addr_1315, "this1", false, label_entry_1313);
 std::vector<Value*> ptr__M_impl_1318_indices;
 ptr__M_impl_1318_indices.push_back(const_int32_208);
 ptr__M_impl_1318_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1318 = GetElementPtrInst::Create(ptr_this1_1317, ptr__M_impl_1318_indices, "_M_impl", label_entry_1313);
 std::vector<Value*> ptr__M_key_compare_1319_indices;
 ptr__M_key_compare_1319_indices.push_back(const_int32_208);
 ptr__M_key_compare_1319_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare_1319 = GetElementPtrInst::Create(ptr__M_impl_1318, ptr__M_key_compare_1319_indices, "_M_key_compare", label_entry_1313);
 ReturnInst::Create(mod->getContext(), label_entry_1313);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_ (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_->arg_begin();
 Value* ptr_this_1321 = args++;
 ptr_this_1321->setName("this");
 Value* ptr___k_1322 = args++;
 ptr___k_1322->setName("__k");
 
 BasicBlock* label_entry_1323 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11lower_boundERS1_,0);
 
 // Block entry (label_entry_1323)
 AllocaInst* ptr_retval_1324 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "retval", label_entry_1323);
 ptr_retval_1324->setAlignment(8);
 AllocaInst* ptr_this_addr_1325 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1323);
 ptr_this_addr_1325->setAlignment(8);
 AllocaInst* ptr___k_addr_1326 = new AllocaInst(PointerTy_33, "__k.addr", label_entry_1323);
 ptr___k_addr_1326->setAlignment(8);
 StoreInst* void_1327 = new StoreInst(ptr_this_1321, ptr_this_addr_1325, false, label_entry_1323);
 void_1327->setAlignment(8);
 StoreInst* void_1328 = new StoreInst(ptr___k_1322, ptr___k_addr_1326, false, label_entry_1323);
 void_1328->setAlignment(8);
 LoadInst* ptr_this1_1329 = new LoadInst(ptr_this_addr_1325, "this1", false, label_entry_1323);
 CallInst* ptr_call_1330 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv, ptr_this1_1329, "call", label_entry_1323);
 ptr_call_1330->setCallingConv(CallingConv::C);
 ptr_call_1330->setTailCall(false);
 AttributeSet ptr_call_1330_PAL;
 ptr_call_1330->setAttributes(ptr_call_1330_PAL);
 
 CallInst* ptr_call2_1331 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv, ptr_this1_1329, "call2", label_entry_1323);
 ptr_call2_1331->setCallingConv(CallingConv::C);
 ptr_call2_1331->setTailCall(false);
 AttributeSet ptr_call2_1331_PAL;
 ptr_call2_1331->setAttributes(ptr_call2_1331_PAL);
 
 LoadInst* ptr_1332 = new LoadInst(ptr___k_addr_1326, "", false, label_entry_1323);
 ptr_1332->setAlignment(8);
 std::vector<Value*> ptr_call3_1333_params;
 ptr_call3_1333_params.push_back(ptr_this1_1329);
 ptr_call3_1333_params.push_back(ptr_call_1330);
 ptr_call3_1333_params.push_back(ptr_call2_1331);
 ptr_call3_1333_params.push_back(ptr_1332);
 CallInst* ptr_call3_1333 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_, ptr_call3_1333_params, "call3", label_entry_1323);
 ptr_call3_1333->setCallingConv(CallingConv::C);
 ptr_call3_1333->setTailCall(false);
 AttributeSet ptr_call3_1333_PAL;
 ptr_call3_1333->setAttributes(ptr_call3_1333_PAL);
 
 std::vector<Value*> ptr_coerce_dive_1334_indices;
 ptr_coerce_dive_1334_indices.push_back(const_int32_208);
 ptr_coerce_dive_1334_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_1334 = GetElementPtrInst::Create(ptr_retval_1324, ptr_coerce_dive_1334_indices, "coerce.dive", label_entry_1323);
 StoreInst* void_1335 = new StoreInst(ptr_call3_1333, ptr_coerce_dive_1334, false, label_entry_1323);
 std::vector<Value*> ptr_coerce_dive4_1336_indices;
 ptr_coerce_dive4_1336_indices.push_back(const_int32_208);
 ptr_coerce_dive4_1336_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive4_1336 = GetElementPtrInst::Create(ptr_retval_1324, ptr_coerce_dive4_1336_indices, "coerce.dive4", label_entry_1323);
 LoadInst* ptr_1337 = new LoadInst(ptr_coerce_dive4_1336, "", false, label_entry_1323);
 ReturnInst::Create(mod->getContext(), ptr_1337, label_entry_1323);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_ (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_->arg_begin();
 Value* ptr_this_1339 = args++;
 ptr_this_1339->setName("this");
 Value* ptr___x_1340 = args++;
 ptr___x_1340->setName("__x");
 Value* ptr___y_1341 = args++;
 ptr___y_1341->setName("__y");
 Value* ptr___k_1342 = args++;
 ptr___k_1342->setName("__k");
 
 BasicBlock* label_entry_1343 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_,0);
 BasicBlock* label_while_cond_1344 = BasicBlock::Create(mod->getContext(), "while.cond",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_,0);
 BasicBlock* label_while_body_1345 = BasicBlock::Create(mod->getContext(), "while.body",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_,0);
 BasicBlock* label_if_then_1346 = BasicBlock::Create(mod->getContext(), "if.then",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_,0);
 BasicBlock* label_if_else_1347 = BasicBlock::Create(mod->getContext(), "if.else",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_,0);
 BasicBlock* label_if_end_1348 = BasicBlock::Create(mod->getContext(), "if.end",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_,0);
 BasicBlock* label_while_end_1349 = BasicBlock::Create(mod->getContext(), "while.end",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_,0);
 
 // Block entry (label_entry_1343)
 AllocaInst* ptr_retval_1350 = new AllocaInst(StructTy_struct_std___Rb_tree_iterator, "retval", label_entry_1343);
 ptr_retval_1350->setAlignment(8);
 AllocaInst* ptr_this_addr_1351 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1343);
 ptr_this_addr_1351->setAlignment(8);
 AllocaInst* ptr___x_addr_1352 = new AllocaInst(PointerTy_88, "__x.addr", label_entry_1343);
 ptr___x_addr_1352->setAlignment(8);
 AllocaInst* ptr___y_addr_1353 = new AllocaInst(PointerTy_88, "__y.addr", label_entry_1343);
 ptr___y_addr_1353->setAlignment(8);
 AllocaInst* ptr___k_addr_1354 = new AllocaInst(PointerTy_33, "__k.addr", label_entry_1343);
 ptr___k_addr_1354->setAlignment(8);
 StoreInst* void_1355 = new StoreInst(ptr_this_1339, ptr_this_addr_1351, false, label_entry_1343);
 void_1355->setAlignment(8);
 StoreInst* void_1356 = new StoreInst(ptr___x_1340, ptr___x_addr_1352, false, label_entry_1343);
 void_1356->setAlignment(8);
 StoreInst* void_1357 = new StoreInst(ptr___y_1341, ptr___y_addr_1353, false, label_entry_1343);
 void_1357->setAlignment(8);
 StoreInst* void_1358 = new StoreInst(ptr___k_1342, ptr___k_addr_1354, false, label_entry_1343);
 void_1358->setAlignment(8);
 LoadInst* ptr_this1_1359 = new LoadInst(ptr_this_addr_1351, "this1", false, label_entry_1343);
 BranchInst::Create(label_while_cond_1344, label_entry_1343);
 
 // Block while.cond (label_while_cond_1344)
 LoadInst* ptr_1361 = new LoadInst(ptr___x_addr_1352, "", false, label_while_cond_1344);
 ptr_1361->setAlignment(8);
 ICmpInst* int1_cmp_1362 = new ICmpInst(*label_while_cond_1344, ICmpInst::ICMP_NE, ptr_1361, const_ptr_223, "cmp");
 BranchInst::Create(label_while_body_1345, label_while_end_1349, int1_cmp_1362, label_while_cond_1344);
 
 // Block while.body (label_while_body_1345)
 std::vector<Value*> ptr__M_impl_1364_indices;
 ptr__M_impl_1364_indices.push_back(const_int32_208);
 ptr__M_impl_1364_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1364 = GetElementPtrInst::Create(ptr_this1_1359, ptr__M_impl_1364_indices, "_M_impl", label_while_body_1345);
 std::vector<Value*> ptr__M_key_compare_1365_indices;
 ptr__M_key_compare_1365_indices.push_back(const_int32_208);
 ptr__M_key_compare_1365_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare_1365 = GetElementPtrInst::Create(ptr__M_impl_1364, ptr__M_key_compare_1365_indices, "_M_key_compare", label_while_body_1345);
 LoadInst* ptr_1366 = new LoadInst(ptr___x_addr_1352, "", false, label_while_body_1345);
 ptr_1366->setAlignment(8);
 CallInst* ptr_call_1367 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E, ptr_1366, "call", label_while_body_1345);
 ptr_call_1367->setCallingConv(CallingConv::C);
 ptr_call_1367->setTailCall(false);
 AttributeSet ptr_call_1367_PAL;
 ptr_call_1367->setAttributes(ptr_call_1367_PAL);
 
 LoadInst* ptr_1368 = new LoadInst(ptr___k_addr_1354, "", false, label_while_body_1345);
 ptr_1368->setAlignment(8);
 std::vector<Value*> int1_call2_params;
 int1_call2_params.push_back(ptr__M_key_compare_1365);
 int1_call2_params.push_back(ptr_call_1367);
 int1_call2_params.push_back(ptr_1368);
 CallInst* int1_call2 = CallInst::Create(func__ZNKSt4lessISsEclERKSsS2_, int1_call2_params, "call2", label_while_body_1345);
 int1_call2->setCallingConv(CallingConv::C);
 int1_call2->setTailCall(false);
 AttributeSet int1_call2_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call2_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call2->setAttributes(int1_call2_PAL);
 
 BranchInst::Create(label_if_else_1347, label_if_then_1346, int1_call2, label_while_body_1345);
 
 // Block if.then (label_if_then_1346)
 LoadInst* ptr_1370 = new LoadInst(ptr___x_addr_1352, "", false, label_if_then_1346);
 ptr_1370->setAlignment(8);
 StoreInst* void_1371 = new StoreInst(ptr_1370, ptr___y_addr_1353, false, label_if_then_1346);
 void_1371->setAlignment(8);
 LoadInst* ptr_1372 = new LoadInst(ptr___x_addr_1352, "", false, label_if_then_1346);
 ptr_1372->setAlignment(8);
 CastInst* ptr_1373 = new BitCastInst(ptr_1372, PointerTy_2, "", label_if_then_1346);
 CallInst* ptr_call3_1374 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base, ptr_1373, "call3", label_if_then_1346);
 ptr_call3_1374->setCallingConv(CallingConv::C);
 ptr_call3_1374->setTailCall(false);
 AttributeSet ptr_call3_1374_PAL;
 ptr_call3_1374->setAttributes(ptr_call3_1374_PAL);
 
 StoreInst* void_1375 = new StoreInst(ptr_call3_1374, ptr___x_addr_1352, false, label_if_then_1346);
 void_1375->setAlignment(8);
 BranchInst::Create(label_if_end_1348, label_if_then_1346);
 
 // Block if.else (label_if_else_1347)
 LoadInst* ptr_1377 = new LoadInst(ptr___x_addr_1352, "", false, label_if_else_1347);
 ptr_1377->setAlignment(8);
 CastInst* ptr_1378 = new BitCastInst(ptr_1377, PointerTy_2, "", label_if_else_1347);
 CallInst* ptr_call4_1379 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base, ptr_1378, "call4", label_if_else_1347);
 ptr_call4_1379->setCallingConv(CallingConv::C);
 ptr_call4_1379->setTailCall(false);
 AttributeSet ptr_call4_1379_PAL;
 ptr_call4_1379->setAttributes(ptr_call4_1379_PAL);
 
 StoreInst* void_1380 = new StoreInst(ptr_call4_1379, ptr___x_addr_1352, false, label_if_else_1347);
 void_1380->setAlignment(8);
 BranchInst::Create(label_if_end_1348, label_if_else_1347);
 
 // Block if.end (label_if_end_1348)
 BranchInst::Create(label_while_cond_1344, label_if_end_1348);
 
 // Block while.end (label_while_end_1349)
 LoadInst* ptr_1383 = new LoadInst(ptr___y_addr_1353, "", false, label_while_end_1349);
 ptr_1383->setAlignment(8);
 std::vector<Value*> void_1384_params;
 void_1384_params.push_back(ptr_retval_1350);
 void_1384_params.push_back(ptr_1383);
 CallInst* void_1384 = CallInst::Create(func__ZNSt17_Rb_tree_iteratorISt4pairIKSsiEEC2EPSt13_Rb_tree_nodeIS2_E, void_1384_params, "", label_while_end_1349);
 void_1384->setCallingConv(CallingConv::C);
 void_1384->setTailCall(false);
 AttributeSet void_1384_PAL;
 void_1384->setAttributes(void_1384_PAL);
 
 std::vector<Value*> ptr_coerce_dive_1385_indices;
 ptr_coerce_dive_1385_indices.push_back(const_int32_208);
 ptr_coerce_dive_1385_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_1385 = GetElementPtrInst::Create(ptr_retval_1350, ptr_coerce_dive_1385_indices, "coerce.dive", label_while_end_1349);
 LoadInst* ptr_1386 = new LoadInst(ptr_coerce_dive_1385, "", false, label_while_end_1349);
 ReturnInst::Create(mod->getContext(), ptr_1386, label_while_end_1349);
 
}

// Function: _ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_ (func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_)
{
 Function::arg_iterator args = func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_->arg_begin();
 Value* ptr_this_1388 = args++;
 ptr_this_1388->setName("this");
 Value* ptr___k_1389 = args++;
 ptr___k_1389->setName("__k");
 
 BasicBlock* label_entry_1390 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_,0);
 BasicBlock* label_lor_lhs_false_1391 = BasicBlock::Create(mod->getContext(), "lor.lhs.false",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_,0);
 BasicBlock* label_cond_true_1392 = BasicBlock::Create(mod->getContext(), "cond.true",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_,0);
 BasicBlock* label_cond_false_1393 = BasicBlock::Create(mod->getContext(), "cond.false",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_,0);
 BasicBlock* label_cond_end_1394 = BasicBlock::Create(mod->getContext(), "cond.end",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE4findERS1_,0);
 
 // Block entry (label_entry_1390)
 AllocaInst* ptr_retval_1395 = new AllocaInst(StructTy_struct_std___Rb_tree_const_iterator, "retval", label_entry_1390);
 ptr_retval_1395->setAlignment(8);
 AllocaInst* ptr_this_addr_1396 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1390);
 ptr_this_addr_1396->setAlignment(8);
 AllocaInst* ptr___k_addr_1397 = new AllocaInst(PointerTy_33, "__k.addr", label_entry_1390);
 ptr___k_addr_1397->setAlignment(8);
 AllocaInst* ptr___j_1398 = new AllocaInst(StructTy_struct_std___Rb_tree_const_iterator, "__j", label_entry_1390);
 ptr___j_1398->setAlignment(8);
 AllocaInst* ptr_ref_tmp_1399 = new AllocaInst(StructTy_struct_std___Rb_tree_const_iterator, "ref.tmp", label_entry_1390);
 ptr_ref_tmp_1399->setAlignment(8);
 StoreInst* void_1400 = new StoreInst(ptr_this_1388, ptr_this_addr_1396, false, label_entry_1390);
 void_1400->setAlignment(8);
 StoreInst* void_1401 = new StoreInst(ptr___k_1389, ptr___k_addr_1397, false, label_entry_1390);
 void_1401->setAlignment(8);
 LoadInst* ptr_this1_1402 = new LoadInst(ptr_this_addr_1396, "this1", false, label_entry_1390);
 CallInst* ptr_call_1403 = CallInst::Create(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv, ptr_this1_1402, "call", label_entry_1390);
 ptr_call_1403->setCallingConv(CallingConv::C);
 ptr_call_1403->setTailCall(false);
 AttributeSet ptr_call_1403_PAL;
 ptr_call_1403->setAttributes(ptr_call_1403_PAL);
 
 CallInst* ptr_call2_1404 = CallInst::Create(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv, ptr_this1_1402, "call2", label_entry_1390);
 ptr_call2_1404->setCallingConv(CallingConv::C);
 ptr_call2_1404->setTailCall(false);
 AttributeSet ptr_call2_1404_PAL;
 ptr_call2_1404->setAttributes(ptr_call2_1404_PAL);
 
 LoadInst* ptr_1405 = new LoadInst(ptr___k_addr_1397, "", false, label_entry_1390);
 ptr_1405->setAlignment(8);
 std::vector<Value*> ptr_call3_1406_params;
 ptr_call3_1406_params.push_back(ptr_this1_1402);
 ptr_call3_1406_params.push_back(ptr_call_1403);
 ptr_call3_1406_params.push_back(ptr_call2_1404);
 ptr_call3_1406_params.push_back(ptr_1405);
 CallInst* ptr_call3_1406 = CallInst::Create(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_, ptr_call3_1406_params, "call3", label_entry_1390);
 ptr_call3_1406->setCallingConv(CallingConv::C);
 ptr_call3_1406->setTailCall(false);
 AttributeSet ptr_call3_1406_PAL;
 ptr_call3_1406->setAttributes(ptr_call3_1406_PAL);
 
 std::vector<Value*> ptr_coerce_dive_1407_indices;
 ptr_coerce_dive_1407_indices.push_back(const_int32_208);
 ptr_coerce_dive_1407_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_1407 = GetElementPtrInst::Create(ptr___j_1398, ptr_coerce_dive_1407_indices, "coerce.dive", label_entry_1390);
 StoreInst* void_1408 = new StoreInst(ptr_call3_1406, ptr_coerce_dive_1407, false, label_entry_1390);
 CallInst* ptr_call4_1409 = CallInst::Create(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv, ptr_this1_1402, "call4", label_entry_1390);
 ptr_call4_1409->setCallingConv(CallingConv::C);
 ptr_call4_1409->setTailCall(false);
 AttributeSet ptr_call4_1409_PAL;
 ptr_call4_1409->setAttributes(ptr_call4_1409_PAL);
 
 std::vector<Value*> ptr_coerce_dive5_indices;
 ptr_coerce_dive5_indices.push_back(const_int32_208);
 ptr_coerce_dive5_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive5 = GetElementPtrInst::Create(ptr_ref_tmp_1399, ptr_coerce_dive5_indices, "coerce.dive5", label_entry_1390);
 StoreInst* void_1410 = new StoreInst(ptr_call4_1409, ptr_coerce_dive5, false, label_entry_1390);
 std::vector<Value*> int1_call6_1411_params;
 int1_call6_1411_params.push_back(ptr___j_1398);
 int1_call6_1411_params.push_back(ptr_ref_tmp_1399);
 CallInst* int1_call6_1411 = CallInst::Create(func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_, int1_call6_1411_params, "call6", label_entry_1390);
 int1_call6_1411->setCallingConv(CallingConv::C);
 int1_call6_1411->setTailCall(false);
 AttributeSet int1_call6_1411_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call6_1411_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call6_1411->setAttributes(int1_call6_1411_PAL);
 
 BranchInst::Create(label_cond_true_1392, label_lor_lhs_false_1391, int1_call6_1411, label_entry_1390);
 
 // Block lor.lhs.false (label_lor_lhs_false_1391)
 std::vector<Value*> ptr__M_impl_1413_indices;
 ptr__M_impl_1413_indices.push_back(const_int32_208);
 ptr__M_impl_1413_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1413 = GetElementPtrInst::Create(ptr_this1_1402, ptr__M_impl_1413_indices, "_M_impl", label_lor_lhs_false_1391);
 std::vector<Value*> ptr__M_key_compare_1414_indices;
 ptr__M_key_compare_1414_indices.push_back(const_int32_208);
 ptr__M_key_compare_1414_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare_1414 = GetElementPtrInst::Create(ptr__M_impl_1413, ptr__M_key_compare_1414_indices, "_M_key_compare", label_lor_lhs_false_1391);
 LoadInst* ptr_1415 = new LoadInst(ptr___k_addr_1397, "", false, label_lor_lhs_false_1391);
 ptr_1415->setAlignment(8);
 std::vector<Value*> ptr__M_node_1416_indices;
 ptr__M_node_1416_indices.push_back(const_int32_208);
 ptr__M_node_1416_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_1416 = GetElementPtrInst::Create(ptr___j_1398, ptr__M_node_1416_indices, "_M_node", label_lor_lhs_false_1391);
 LoadInst* ptr_1417 = new LoadInst(ptr__M_node_1416, "", false, label_lor_lhs_false_1391);
 ptr_1417->setAlignment(8);
 CallInst* ptr_call7_1418 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base, ptr_1417, "call7", label_lor_lhs_false_1391);
 ptr_call7_1418->setCallingConv(CallingConv::C);
 ptr_call7_1418->setTailCall(false);
 AttributeSet ptr_call7_1418_PAL;
 ptr_call7_1418->setAttributes(ptr_call7_1418_PAL);
 
 std::vector<Value*> int1_call8_1419_params;
 int1_call8_1419_params.push_back(ptr__M_key_compare_1414);
 int1_call8_1419_params.push_back(ptr_1415);
 int1_call8_1419_params.push_back(ptr_call7_1418);
 CallInst* int1_call8_1419 = CallInst::Create(func__ZNKSt4lessISsEclERKSsS2_, int1_call8_1419_params, "call8", label_lor_lhs_false_1391);
 int1_call8_1419->setCallingConv(CallingConv::C);
 int1_call8_1419->setTailCall(false);
 AttributeSet int1_call8_1419_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call8_1419_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call8_1419->setAttributes(int1_call8_1419_PAL);
 
 BranchInst::Create(label_cond_true_1392, label_cond_false_1393, int1_call8_1419, label_lor_lhs_false_1391);
 
 // Block cond.true (label_cond_true_1392)
 CallInst* ptr_call9 = CallInst::Create(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv, ptr_this1_1402, "call9", label_cond_true_1392);
 ptr_call9->setCallingConv(CallingConv::C);
 ptr_call9->setTailCall(false);
 AttributeSet ptr_call9_PAL;
 ptr_call9->setAttributes(ptr_call9_PAL);
 
 std::vector<Value*> ptr_coerce_dive10_1421_indices;
 ptr_coerce_dive10_1421_indices.push_back(const_int32_208);
 ptr_coerce_dive10_1421_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive10_1421 = GetElementPtrInst::Create(ptr_retval_1395, ptr_coerce_dive10_1421_indices, "coerce.dive10", label_cond_true_1392);
 StoreInst* void_1422 = new StoreInst(ptr_call9, ptr_coerce_dive10_1421, false, label_cond_true_1392);
 BranchInst::Create(label_cond_end_1394, label_cond_true_1392);
 
 // Block cond.false (label_cond_false_1393)
 CastInst* ptr_1424 = new BitCastInst(ptr_retval_1395, PointerTy_1, "", label_cond_false_1393);
 CastInst* ptr_1425 = new BitCastInst(ptr___j_1398, PointerTy_1, "", label_cond_false_1393);
 std::vector<Value*> void_1426_params;
 void_1426_params.push_back(ptr_1424);
 void_1426_params.push_back(ptr_1425);
 void_1426_params.push_back(const_int64_216);
 void_1426_params.push_back(const_int32_217);
 void_1426_params.push_back(const_int1_218);
 CallInst* void_1426 = CallInst::Create(func_llvm_memcpy_p0i8_p0i8_i64, void_1426_params, "", label_cond_false_1393);
 void_1426->setCallingConv(CallingConv::C);
 void_1426->setTailCall(false);
 AttributeSet void_1426_PAL;
 void_1426->setAttributes(void_1426_PAL);
 
 BranchInst::Create(label_cond_end_1394, label_cond_false_1393);
 
 // Block cond.end (label_cond_end_1394)
 std::vector<Value*> ptr_coerce_dive11_indices;
 ptr_coerce_dive11_indices.push_back(const_int32_208);
 ptr_coerce_dive11_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive11 = GetElementPtrInst::Create(ptr_retval_1395, ptr_coerce_dive11_indices, "coerce.dive11", label_cond_end_1394);
 LoadInst* ptr_1428 = new LoadInst(ptr_coerce_dive11, "", false, label_cond_end_1394);
 ReturnInst::Create(mod->getContext(), ptr_1428, label_cond_end_1394);
 
}

// Function: _ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_ (func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_)
{
 Function::arg_iterator args = func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_->arg_begin();
 Value* ptr_this_1430 = args++;
 ptr_this_1430->setName("this");
 Value* ptr___x_1431 = args++;
 ptr___x_1431->setName("__x");
 
 BasicBlock* label_entry_1432 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt23_Rb_tree_const_iteratorISt4pairIKSsiEEeqERKS3_,0);
 
 // Block entry (label_entry_1432)
 AllocaInst* ptr_this_addr_1433 = new AllocaInst(PointerTy_48, "this.addr", label_entry_1432);
 ptr_this_addr_1433->setAlignment(8);
 AllocaInst* ptr___x_addr_1434 = new AllocaInst(PointerTy_48, "__x.addr", label_entry_1432);
 ptr___x_addr_1434->setAlignment(8);
 StoreInst* void_1435 = new StoreInst(ptr_this_1430, ptr_this_addr_1433, false, label_entry_1432);
 void_1435->setAlignment(8);
 StoreInst* void_1436 = new StoreInst(ptr___x_1431, ptr___x_addr_1434, false, label_entry_1432);
 void_1436->setAlignment(8);
 LoadInst* ptr_this1_1437 = new LoadInst(ptr_this_addr_1433, "this1", false, label_entry_1432);
 std::vector<Value*> ptr__M_node_1438_indices;
 ptr__M_node_1438_indices.push_back(const_int32_208);
 ptr__M_node_1438_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_1438 = GetElementPtrInst::Create(ptr_this1_1437, ptr__M_node_1438_indices, "_M_node", label_entry_1432);
 LoadInst* ptr_1439 = new LoadInst(ptr__M_node_1438, "", false, label_entry_1432);
 ptr_1439->setAlignment(8);
 LoadInst* ptr_1440 = new LoadInst(ptr___x_addr_1434, "", false, label_entry_1432);
 ptr_1440->setAlignment(8);
 std::vector<Value*> ptr__M_node2_1441_indices;
 ptr__M_node2_1441_indices.push_back(const_int32_208);
 ptr__M_node2_1441_indices.push_back(const_int32_208);
 Instruction* ptr__M_node2_1441 = GetElementPtrInst::Create(ptr_1440, ptr__M_node2_1441_indices, "_M_node2", label_entry_1432);
 LoadInst* ptr_1442 = new LoadInst(ptr__M_node2_1441, "", false, label_entry_1432);
 ptr_1442->setAlignment(8);
 ICmpInst* int1_cmp_1443 = new ICmpInst(*label_entry_1432, ICmpInst::ICMP_EQ, ptr_1439, ptr_1442, "cmp");
 ReturnInst::Create(mod->getContext(), int1_cmp_1443, label_entry_1432);
 
}

// Function: _ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv (func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv)
{
 Function::arg_iterator args = func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv->arg_begin();
 Value* ptr_this_1445 = args++;
 ptr_this_1445->setName("this");
 
 BasicBlock* label_entry_1446 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE3endEv,0);
 
 // Block entry (label_entry_1446)
 AllocaInst* ptr_retval_1447 = new AllocaInst(StructTy_struct_std___Rb_tree_const_iterator, "retval", label_entry_1446);
 ptr_retval_1447->setAlignment(8);
 AllocaInst* ptr_this_addr_1448 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1446);
 ptr_this_addr_1448->setAlignment(8);
 StoreInst* void_1449 = new StoreInst(ptr_this_1445, ptr_this_addr_1448, false, label_entry_1446);
 void_1449->setAlignment(8);
 LoadInst* ptr_this1_1450 = new LoadInst(ptr_this_addr_1448, "this1", false, label_entry_1446);
 std::vector<Value*> ptr__M_impl_1451_indices;
 ptr__M_impl_1451_indices.push_back(const_int32_208);
 ptr__M_impl_1451_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1451 = GetElementPtrInst::Create(ptr_this1_1450, ptr__M_impl_1451_indices, "_M_impl", label_entry_1446);
 std::vector<Value*> ptr__M_header_1452_indices;
 ptr__M_header_1452_indices.push_back(const_int32_208);
 ptr__M_header_1452_indices.push_back(const_int32_211);
 Instruction* ptr__M_header_1452 = GetElementPtrInst::Create(ptr__M_impl_1451, ptr__M_header_1452_indices, "_M_header", label_entry_1446);
 CastInst* ptr_1453 = new BitCastInst(ptr__M_header_1452, PointerTy_88, "", label_entry_1446);
 std::vector<Value*> void_1454_params;
 void_1454_params.push_back(ptr_retval_1447);
 void_1454_params.push_back(ptr_1453);
 CallInst* void_1454 = CallInst::Create(func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E, void_1454_params, "", label_entry_1446);
 void_1454->setCallingConv(CallingConv::C);
 void_1454->setTailCall(false);
 AttributeSet void_1454_PAL;
 void_1454->setAttributes(void_1454_PAL);
 
 std::vector<Value*> ptr_coerce_dive_1455_indices;
 ptr_coerce_dive_1455_indices.push_back(const_int32_208);
 ptr_coerce_dive_1455_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_1455 = GetElementPtrInst::Create(ptr_retval_1447, ptr_coerce_dive_1455_indices, "coerce.dive", label_entry_1446);
 LoadInst* ptr_1456 = new LoadInst(ptr_coerce_dive_1455, "", false, label_entry_1446);
 ReturnInst::Create(mod->getContext(), ptr_1456, label_entry_1446);
 
}

// Function: _ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E (func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E)
{
 Function::arg_iterator args = func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E->arg_begin();
 Value* ptr_this_1458 = args++;
 ptr_this_1458->setName("this");
 Value* ptr___x_1459 = args++;
 ptr___x_1459->setName("__x");
 
 BasicBlock* label_entry_1460 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E,0);
 
 // Block entry (label_entry_1460)
 AllocaInst* ptr_this_addr_1461 = new AllocaInst(PointerTy_48, "this.addr", label_entry_1460);
 ptr_this_addr_1461->setAlignment(8);
 AllocaInst* ptr___x_addr_1462 = new AllocaInst(PointerTy_88, "__x.addr", label_entry_1460);
 ptr___x_addr_1462->setAlignment(8);
 StoreInst* void_1463 = new StoreInst(ptr_this_1458, ptr_this_addr_1461, false, label_entry_1460);
 void_1463->setAlignment(8);
 StoreInst* void_1464 = new StoreInst(ptr___x_1459, ptr___x_addr_1462, false, label_entry_1460);
 void_1464->setAlignment(8);
 LoadInst* ptr_this1_1465 = new LoadInst(ptr_this_addr_1461, "this1", false, label_entry_1460);
 std::vector<Value*> ptr__M_node_1466_indices;
 ptr__M_node_1466_indices.push_back(const_int32_208);
 ptr__M_node_1466_indices.push_back(const_int32_208);
 Instruction* ptr__M_node_1466 = GetElementPtrInst::Create(ptr_this1_1465, ptr__M_node_1466_indices, "_M_node", label_entry_1460);
 LoadInst* ptr_1467 = new LoadInst(ptr___x_addr_1462, "", false, label_entry_1460);
 ptr_1467->setAlignment(8);
 CastInst* ptr_1468 = new BitCastInst(ptr_1467, PointerTy_2, "", label_entry_1460);
 StoreInst* void_1469 = new StoreInst(ptr_1468, ptr__M_node_1466, false, label_entry_1460);
 void_1469->setAlignment(8);
 ReturnInst::Create(mod->getContext(), label_entry_1460);
 
}

// Function: _ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_ (func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_)
{
 Function::arg_iterator args = func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_->arg_begin();
 Value* ptr_this_1471 = args++;
 ptr_this_1471->setName("this");
 Value* ptr___x_1472 = args++;
 ptr___x_1472->setName("__x");
 Value* ptr___y_1473 = args++;
 ptr___y_1473->setName("__y");
 Value* ptr___k_1474 = args++;
 ptr___k_1474->setName("__k");
 
 BasicBlock* label_entry_1475 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_,0);
 BasicBlock* label_while_cond_1476 = BasicBlock::Create(mod->getContext(), "while.cond",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_,0);
 BasicBlock* label_while_body_1477 = BasicBlock::Create(mod->getContext(), "while.body",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_,0);
 BasicBlock* label_if_then_1478 = BasicBlock::Create(mod->getContext(), "if.then",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_,0);
 BasicBlock* label_if_else_1479 = BasicBlock::Create(mod->getContext(), "if.else",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_,0);
 BasicBlock* label_if_end_1480 = BasicBlock::Create(mod->getContext(), "if.end",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_,0);
 BasicBlock* label_while_end_1481 = BasicBlock::Create(mod->getContext(), "while.end",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE14_M_lower_boundEPKSt13_Rb_tree_nodeIS2_ESC_RS1_,0);
 
 // Block entry (label_entry_1475)
 AllocaInst* ptr_retval_1482 = new AllocaInst(StructTy_struct_std___Rb_tree_const_iterator, "retval", label_entry_1475);
 ptr_retval_1482->setAlignment(8);
 AllocaInst* ptr_this_addr_1483 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1475);
 ptr_this_addr_1483->setAlignment(8);
 AllocaInst* ptr___x_addr_1484 = new AllocaInst(PointerTy_88, "__x.addr", label_entry_1475);
 ptr___x_addr_1484->setAlignment(8);
 AllocaInst* ptr___y_addr_1485 = new AllocaInst(PointerTy_88, "__y.addr", label_entry_1475);
 ptr___y_addr_1485->setAlignment(8);
 AllocaInst* ptr___k_addr_1486 = new AllocaInst(PointerTy_33, "__k.addr", label_entry_1475);
 ptr___k_addr_1486->setAlignment(8);
 StoreInst* void_1487 = new StoreInst(ptr_this_1471, ptr_this_addr_1483, false, label_entry_1475);
 void_1487->setAlignment(8);
 StoreInst* void_1488 = new StoreInst(ptr___x_1472, ptr___x_addr_1484, false, label_entry_1475);
 void_1488->setAlignment(8);
 StoreInst* void_1489 = new StoreInst(ptr___y_1473, ptr___y_addr_1485, false, label_entry_1475);
 void_1489->setAlignment(8);
 StoreInst* void_1490 = new StoreInst(ptr___k_1474, ptr___k_addr_1486, false, label_entry_1475);
 void_1490->setAlignment(8);
 LoadInst* ptr_this1_1491 = new LoadInst(ptr_this_addr_1483, "this1", false, label_entry_1475);
 BranchInst::Create(label_while_cond_1476, label_entry_1475);
 
 // Block while.cond (label_while_cond_1476)
 LoadInst* ptr_1493 = new LoadInst(ptr___x_addr_1484, "", false, label_while_cond_1476);
 ptr_1493->setAlignment(8);
 ICmpInst* int1_cmp_1494 = new ICmpInst(*label_while_cond_1476, ICmpInst::ICMP_NE, ptr_1493, const_ptr_223, "cmp");
 BranchInst::Create(label_while_body_1477, label_while_end_1481, int1_cmp_1494, label_while_cond_1476);
 
 // Block while.body (label_while_body_1477)
 std::vector<Value*> ptr__M_impl_1496_indices;
 ptr__M_impl_1496_indices.push_back(const_int32_208);
 ptr__M_impl_1496_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1496 = GetElementPtrInst::Create(ptr_this1_1491, ptr__M_impl_1496_indices, "_M_impl", label_while_body_1477);
 std::vector<Value*> ptr__M_key_compare_1497_indices;
 ptr__M_key_compare_1497_indices.push_back(const_int32_208);
 ptr__M_key_compare_1497_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare_1497 = GetElementPtrInst::Create(ptr__M_impl_1496, ptr__M_key_compare_1497_indices, "_M_key_compare", label_while_body_1477);
 LoadInst* ptr_1498 = new LoadInst(ptr___x_addr_1484, "", false, label_while_body_1477);
 ptr_1498->setAlignment(8);
 CallInst* ptr_call_1499 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E, ptr_1498, "call", label_while_body_1477);
 ptr_call_1499->setCallingConv(CallingConv::C);
 ptr_call_1499->setTailCall(false);
 AttributeSet ptr_call_1499_PAL;
 ptr_call_1499->setAttributes(ptr_call_1499_PAL);
 
 LoadInst* ptr_1500 = new LoadInst(ptr___k_addr_1486, "", false, label_while_body_1477);
 ptr_1500->setAlignment(8);
 std::vector<Value*> int1_call2_1501_params;
 int1_call2_1501_params.push_back(ptr__M_key_compare_1497);
 int1_call2_1501_params.push_back(ptr_call_1499);
 int1_call2_1501_params.push_back(ptr_1500);
 CallInst* int1_call2_1501 = CallInst::Create(func__ZNKSt4lessISsEclERKSsS2_, int1_call2_1501_params, "call2", label_while_body_1477);
 int1_call2_1501->setCallingConv(CallingConv::C);
 int1_call2_1501->setTailCall(false);
 AttributeSet int1_call2_1501_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::ZExt);
    PAS = AttributeSet::get(mod->getContext(), 0U, B);
   }
  
  Attrs.push_back(PAS);
  int1_call2_1501_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 int1_call2_1501->setAttributes(int1_call2_1501_PAL);
 
 BranchInst::Create(label_if_else_1479, label_if_then_1478, int1_call2_1501, label_while_body_1477);
 
 // Block if.then (label_if_then_1478)
 LoadInst* ptr_1503 = new LoadInst(ptr___x_addr_1484, "", false, label_if_then_1478);
 ptr_1503->setAlignment(8);
 StoreInst* void_1504 = new StoreInst(ptr_1503, ptr___y_addr_1485, false, label_if_then_1478);
 void_1504->setAlignment(8);
 LoadInst* ptr_1505 = new LoadInst(ptr___x_addr_1484, "", false, label_if_then_1478);
 ptr_1505->setAlignment(8);
 CastInst* ptr_1506 = new BitCastInst(ptr_1505, PointerTy_2, "", label_if_then_1478);
 CallInst* ptr_call3_1507 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base, ptr_1506, "call3", label_if_then_1478);
 ptr_call3_1507->setCallingConv(CallingConv::C);
 ptr_call3_1507->setTailCall(false);
 AttributeSet ptr_call3_1507_PAL;
 ptr_call3_1507->setAttributes(ptr_call3_1507_PAL);
 
 StoreInst* void_1508 = new StoreInst(ptr_call3_1507, ptr___x_addr_1484, false, label_if_then_1478);
 void_1508->setAlignment(8);
 BranchInst::Create(label_if_end_1480, label_if_then_1478);
 
 // Block if.else (label_if_else_1479)
 LoadInst* ptr_1510 = new LoadInst(ptr___x_addr_1484, "", false, label_if_else_1479);
 ptr_1510->setAlignment(8);
 CastInst* ptr_1511 = new BitCastInst(ptr_1510, PointerTy_2, "", label_if_else_1479);
 CallInst* ptr_call4_1512 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base, ptr_1511, "call4", label_if_else_1479);
 ptr_call4_1512->setCallingConv(CallingConv::C);
 ptr_call4_1512->setTailCall(false);
 AttributeSet ptr_call4_1512_PAL;
 ptr_call4_1512->setAttributes(ptr_call4_1512_PAL);
 
 StoreInst* void_1513 = new StoreInst(ptr_call4_1512, ptr___x_addr_1484, false, label_if_else_1479);
 void_1513->setAlignment(8);
 BranchInst::Create(label_if_end_1480, label_if_else_1479);
 
 // Block if.end (label_if_end_1480)
 BranchInst::Create(label_while_cond_1476, label_if_end_1480);
 
 // Block while.end (label_while_end_1481)
 LoadInst* ptr_1516 = new LoadInst(ptr___y_addr_1485, "", false, label_while_end_1481);
 ptr_1516->setAlignment(8);
 std::vector<Value*> void_1517_params;
 void_1517_params.push_back(ptr_retval_1482);
 void_1517_params.push_back(ptr_1516);
 CallInst* void_1517 = CallInst::Create(func__ZNSt23_Rb_tree_const_iteratorISt4pairIKSsiEEC2EPKSt13_Rb_tree_nodeIS2_E, void_1517_params, "", label_while_end_1481);
 void_1517->setCallingConv(CallingConv::C);
 void_1517->setTailCall(false);
 AttributeSet void_1517_PAL;
 void_1517->setAttributes(void_1517_PAL);
 
 std::vector<Value*> ptr_coerce_dive_1518_indices;
 ptr_coerce_dive_1518_indices.push_back(const_int32_208);
 ptr_coerce_dive_1518_indices.push_back(const_int32_208);
 Instruction* ptr_coerce_dive_1518 = GetElementPtrInst::Create(ptr_retval_1482, ptr_coerce_dive_1518_indices, "coerce.dive", label_while_end_1481);
 LoadInst* ptr_1519 = new LoadInst(ptr_coerce_dive_1518, "", false, label_while_end_1481);
 ReturnInst::Create(mod->getContext(), ptr_1519, label_while_end_1481);
 
}

// Function: _ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv (func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv)
{
 Function::arg_iterator args = func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv->arg_begin();
 Value* ptr_this_1521 = args++;
 ptr_this_1521->setName("this");
 
 BasicBlock* label_entry_1522 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv,0);
 
 // Block entry (label_entry_1522)
 AllocaInst* ptr_this_addr_1523 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1522);
 ptr_this_addr_1523->setAlignment(8);
 StoreInst* void_1524 = new StoreInst(ptr_this_1521, ptr_this_addr_1523, false, label_entry_1522);
 void_1524->setAlignment(8);
 LoadInst* ptr_this1_1525 = new LoadInst(ptr_this_addr_1523, "this1", false, label_entry_1522);
 std::vector<Value*> ptr__M_impl_1526_indices;
 ptr__M_impl_1526_indices.push_back(const_int32_208);
 ptr__M_impl_1526_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1526 = GetElementPtrInst::Create(ptr_this1_1525, ptr__M_impl_1526_indices, "_M_impl", label_entry_1522);
 std::vector<Value*> ptr__M_header_1527_indices;
 ptr__M_header_1527_indices.push_back(const_int32_208);
 ptr__M_header_1527_indices.push_back(const_int32_211);
 Instruction* ptr__M_header_1527 = GetElementPtrInst::Create(ptr__M_impl_1526, ptr__M_header_1527_indices, "_M_header", label_entry_1522);
 std::vector<Value*> ptr__M_parent_1528_indices;
 ptr__M_parent_1528_indices.push_back(const_int32_208);
 ptr__M_parent_1528_indices.push_back(const_int32_211);
 Instruction* ptr__M_parent_1528 = GetElementPtrInst::Create(ptr__M_header_1527, ptr__M_parent_1528_indices, "_M_parent", label_entry_1522);
 LoadInst* ptr_1529 = new LoadInst(ptr__M_parent_1528, "", false, label_entry_1522);
 ptr_1529->setAlignment(8);
 CastInst* ptr_1530 = new BitCastInst(ptr_1529, PointerTy_88, "", label_entry_1522);
 ReturnInst::Create(mod->getContext(), ptr_1530, label_entry_1522);
 
}

// Function: _ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv (func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv)
{
 Function::arg_iterator args = func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv->arg_begin();
 Value* ptr_this_1532 = args++;
 ptr_this_1532->setName("this");
 
 BasicBlock* label_entry_1533 = BasicBlock::Create(mod->getContext(), "entry",func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE6_M_endEv,0);
 
 // Block entry (label_entry_1533)
 AllocaInst* ptr_this_addr_1534 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1533);
 ptr_this_addr_1534->setAlignment(8);
 StoreInst* void_1535 = new StoreInst(ptr_this_1532, ptr_this_addr_1534, false, label_entry_1533);
 void_1535->setAlignment(8);
 LoadInst* ptr_this1_1536 = new LoadInst(ptr_this_addr_1534, "this1", false, label_entry_1533);
 std::vector<Value*> ptr__M_impl_1537_indices;
 ptr__M_impl_1537_indices.push_back(const_int32_208);
 ptr__M_impl_1537_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1537 = GetElementPtrInst::Create(ptr_this1_1536, ptr__M_impl_1537_indices, "_M_impl", label_entry_1533);
 std::vector<Value*> ptr__M_header_1538_indices;
 ptr__M_header_1538_indices.push_back(const_int32_208);
 ptr__M_header_1538_indices.push_back(const_int32_211);
 Instruction* ptr__M_header_1538 = GetElementPtrInst::Create(ptr__M_impl_1537, ptr__M_header_1538_indices, "_M_header", label_entry_1533);
 CastInst* ptr_1539 = new BitCastInst(ptr__M_header_1538, PointerTy_88, "", label_entry_1533);
 ReturnInst::Create(mod->getContext(), ptr_1539, label_entry_1533);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base->arg_begin();
 Value* ptr___x_1541 = args++;
 ptr___x_1541->setName("__x");
 
 BasicBlock* label_entry_1542 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPKSt18_Rb_tree_node_base,0);
 
 // Block entry (label_entry_1542)
 AllocaInst* ptr___x_addr_1543 = new AllocaInst(PointerTy_2, "__x.addr", label_entry_1542);
 ptr___x_addr_1543->setAlignment(8);
 StoreInst* void_1544 = new StoreInst(ptr___x_1541, ptr___x_addr_1543, false, label_entry_1542);
 void_1544->setAlignment(8);
 LoadInst* ptr_1545 = new LoadInst(ptr___x_addr_1543, "", false, label_entry_1542);
 ptr_1545->setAlignment(8);
 std::vector<Value*> ptr__M_left_1546_indices;
 ptr__M_left_1546_indices.push_back(const_int32_208);
 ptr__M_left_1546_indices.push_back(const_int32_221);
 Instruction* ptr__M_left_1546 = GetElementPtrInst::Create(ptr_1545, ptr__M_left_1546_indices, "_M_left", label_entry_1542);
 LoadInst* ptr_1547 = new LoadInst(ptr__M_left_1546, "", false, label_entry_1542);
 ptr_1547->setAlignment(8);
 CastInst* ptr_1548 = new BitCastInst(ptr_1547, PointerTy_88, "", label_entry_1542);
 ReturnInst::Create(mod->getContext(), ptr_1548, label_entry_1542);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base->arg_begin();
 Value* ptr___x_1550 = args++;
 ptr___x_1550->setName("__x");
 
 BasicBlock* label_entry_1551 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPKSt18_Rb_tree_node_base,0);
 
 // Block entry (label_entry_1551)
 AllocaInst* ptr___x_addr_1552 = new AllocaInst(PointerTy_2, "__x.addr", label_entry_1551);
 ptr___x_addr_1552->setAlignment(8);
 StoreInst* void_1553 = new StoreInst(ptr___x_1550, ptr___x_addr_1552, false, label_entry_1551);
 void_1553->setAlignment(8);
 LoadInst* ptr_1554 = new LoadInst(ptr___x_addr_1552, "", false, label_entry_1551);
 ptr_1554->setAlignment(8);
 std::vector<Value*> ptr__M_right_1555_indices;
 ptr__M_right_1555_indices.push_back(const_int32_208);
 ptr__M_right_1555_indices.push_back(const_int32_229);
 Instruction* ptr__M_right_1555 = GetElementPtrInst::Create(ptr_1554, ptr__M_right_1555_indices, "_M_right", label_entry_1551);
 LoadInst* ptr_1556 = new LoadInst(ptr__M_right_1555, "", false, label_entry_1551);
 ptr_1556->setAlignment(8);
 CastInst* ptr_1557 = new BitCastInst(ptr_1556, PointerTy_88, "", label_entry_1551);
 ReturnInst::Create(mod->getContext(), ptr_1557, label_entry_1551);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev->arg_begin();
 Value* ptr_this_1559 = args++;
 ptr_this_1559->setName("this");
 
 BasicBlock* label_entry_1560 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EEC2Ev,0);
 
 // Block entry (label_entry_1560)
 AllocaInst* ptr_this_addr_1561 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1560);
 ptr_this_addr_1561->setAlignment(8);
 StoreInst* void_1562 = new StoreInst(ptr_this_1559, ptr_this_addr_1561, false, label_entry_1560);
 void_1562->setAlignment(8);
 LoadInst* ptr_this1_1563 = new LoadInst(ptr_this_addr_1561, "this1", false, label_entry_1560);
 std::vector<Value*> ptr__M_impl_1564_indices;
 ptr__M_impl_1564_indices.push_back(const_int32_208);
 ptr__M_impl_1564_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1564 = GetElementPtrInst::Create(ptr_this1_1563, ptr__M_impl_1564_indices, "_M_impl", label_entry_1560);
 CallInst* void_1565 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev, ptr__M_impl_1564, "", label_entry_1560);
 void_1565->setCallingConv(CallingConv::C);
 void_1565->setTailCall(false);
 AttributeSet void_1565_PAL;
 void_1565->setAttributes(void_1565_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_1560);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev->arg_begin();
 Value* ptr_this_1567 = args++;
 ptr_this_1567->setName("this");
 
 BasicBlock* label_entry_1568 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev,0);
 BasicBlock* label_invoke_cont_1569 = BasicBlock::Create(mod->getContext(), "invoke.cont",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev,0);
 BasicBlock* label_lpad_1570 = BasicBlock::Create(mod->getContext(), "lpad",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev,0);
 BasicBlock* label_eh_resume_1571 = BasicBlock::Create(mod->getContext(), "eh.resume",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EEC2Ev,0);
 
 // Block entry (label_entry_1568)
 AllocaInst* ptr_this_addr_1572 = new AllocaInst(PointerTy_95, "this.addr", label_entry_1568);
 ptr_this_addr_1572->setAlignment(8);
 AllocaInst* ptr_exn_slot_1573 = new AllocaInst(PointerTy_1, "exn.slot", label_entry_1568);
 AllocaInst* ptr_ehselector_slot_1574 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "ehselector.slot", label_entry_1568);
 StoreInst* void_1575 = new StoreInst(ptr_this_1567, ptr_this_addr_1572, false, label_entry_1568);
 void_1575->setAlignment(8);
 LoadInst* ptr_this1_1576 = new LoadInst(ptr_this_addr_1572, "this1", false, label_entry_1568);
 CastInst* ptr_1577 = new BitCastInst(ptr_this1_1576, PointerTy_154, "", label_entry_1568);
 CallInst* void_1578 = CallInst::Create(func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev, ptr_1577, "", label_entry_1568);
 void_1578->setCallingConv(CallingConv::C);
 void_1578->setTailCall(false);
 AttributeSet void_1578_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1578_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1578->setAttributes(void_1578_PAL);
 
 std::vector<Value*> ptr__M_key_compare_1579_indices;
 ptr__M_key_compare_1579_indices.push_back(const_int32_208);
 ptr__M_key_compare_1579_indices.push_back(const_int32_208);
 Instruction* ptr__M_key_compare_1579 = GetElementPtrInst::Create(ptr_this1_1576, ptr__M_key_compare_1579_indices, "_M_key_compare", label_entry_1568);
 std::vector<Value*> ptr__M_header_1580_indices;
 ptr__M_header_1580_indices.push_back(const_int32_208);
 ptr__M_header_1580_indices.push_back(const_int32_211);
 Instruction* ptr__M_header_1580 = GetElementPtrInst::Create(ptr_this1_1576, ptr__M_header_1580_indices, "_M_header", label_entry_1568);
 CastInst* ptr_1581 = new BitCastInst(ptr__M_header_1580, PointerTy_1, "", label_entry_1568);
 std::vector<Value*> void_1582_params;
 void_1582_params.push_back(ptr_1581);
 void_1582_params.push_back(const_int8_231);
 void_1582_params.push_back(const_int64_232);
 void_1582_params.push_back(const_int32_217);
 void_1582_params.push_back(const_int1_218);
 CallInst* void_1582 = CallInst::Create(func_llvm_memset_p0i8_i64, void_1582_params, "", label_entry_1568);
 void_1582->setCallingConv(CallingConv::C);
 void_1582->setTailCall(false);
 AttributeSet void_1582_PAL;
 void_1582->setAttributes(void_1582_PAL);
 
 std::vector<Value*> ptr__M_node_count_1583_indices;
 ptr__M_node_count_1583_indices.push_back(const_int32_208);
 ptr__M_node_count_1583_indices.push_back(const_int32_221);
 Instruction* ptr__M_node_count_1583 = GetElementPtrInst::Create(ptr_this1_1576, ptr__M_node_count_1583_indices, "_M_node_count", label_entry_1568);
 StoreInst* void_1584 = new StoreInst(const_int64_212, ptr__M_node_count_1583, false, label_entry_1568);
 void_1584->setAlignment(8);
 std::vector<Value*> void_1585_params;
 void_1585_params.push_back(ptr_this1_1576);
 InvokeInst *void_1585 = InvokeInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv, label_invoke_cont_1569, label_lpad_1570, void_1585_params, "", label_entry_1568);
 void_1585->setCallingConv(CallingConv::C);AttributeSet void_1585_PAL;
 void_1585->setAttributes(void_1585_PAL);
 
 
 // Block invoke.cont (label_invoke_cont_1569)
 ReturnInst::Create(mod->getContext(), label_invoke_cont_1569);
 
 // Block lpad (label_lpad_1570)
 LandingPadInst* struct_1587 = LandingPadInst::Create(StructTy_43, const_ptr_213, 0, "", label_lpad_1570);
 struct_1587->setCleanup(true);
 std::vector<unsigned> ptr_1588_indices;
 ptr_1588_indices.push_back(0);
 ExtractValueInst* ptr_1588 = ExtractValueInst::Create(struct_1587, ptr_1588_indices, "", label_lpad_1570);
 StoreInst* void_1589 = new StoreInst(ptr_1588, ptr_exn_slot_1573, false, label_lpad_1570);
 std::vector<unsigned> int32_1590_indices;
 int32_1590_indices.push_back(1);
 ExtractValueInst* int32_1590 = ExtractValueInst::Create(struct_1587, int32_1590_indices, "", label_lpad_1570);
 StoreInst* void_1591 = new StoreInst(int32_1590, ptr_ehselector_slot_1574, false, label_lpad_1570);
 CastInst* ptr_1592 = new BitCastInst(ptr_this1_1576, PointerTy_154, "", label_lpad_1570);
 CallInst* void_1593 = CallInst::Create(func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev, ptr_1592, "", label_lpad_1570);
 void_1593->setCallingConv(CallingConv::C);
 void_1593->setTailCall(false);
 AttributeSet void_1593_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1593_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1593->setAttributes(void_1593_PAL);
 
 BranchInst::Create(label_eh_resume_1571, label_lpad_1570);
 
 // Block eh.resume (label_eh_resume_1571)
 LoadInst* ptr_exn_1595 = new LoadInst(ptr_exn_slot_1573, "exn", false, label_eh_resume_1571);
 LoadInst* int32_sel_1596 = new LoadInst(ptr_ehselector_slot_1574, "sel", false, label_eh_resume_1571);
 std::vector<unsigned> struct_lpad_val_1597_indices;
 struct_lpad_val_1597_indices.push_back(0);
 InsertValueInst* struct_lpad_val_1597 = InsertValueInst::Create(const_struct_214, ptr_exn_1595, struct_lpad_val_1597_indices, "lpad.val", label_eh_resume_1571);
 std::vector<unsigned> struct_lpad_val2_indices;
 struct_lpad_val2_indices.push_back(1);
 InsertValueInst* struct_lpad_val2 = InsertValueInst::Create(struct_lpad_val_1597, int32_sel_1596, struct_lpad_val2_indices, "lpad.val2", label_eh_resume_1571);
 ResumeInst::Create(struct_lpad_val2, label_eh_resume_1571);
 
}

// Function: _ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev (func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev)
{
 Function::arg_iterator args = func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev->arg_begin();
 Value* ptr_this_1599 = args++;
 ptr_this_1599->setName("this");
 
 BasicBlock* label_entry_1600 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev,0);
 
 // Block entry (label_entry_1600)
 AllocaInst* ptr_this_addr_1601 = new AllocaInst(PointerTy_154, "this.addr", label_entry_1600);
 ptr_this_addr_1601->setAlignment(8);
 StoreInst* void_1602 = new StoreInst(ptr_this_1599, ptr_this_addr_1601, false, label_entry_1600);
 void_1602->setAlignment(8);
 LoadInst* ptr_this1_1603 = new LoadInst(ptr_this_addr_1601, "this1", false, label_entry_1600);
 CastInst* ptr_1604 = new BitCastInst(ptr_this1_1603, PointerTy_155, "", label_entry_1600);
 CallInst* void_1605 = CallInst::Create(func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev, ptr_1604, "", label_entry_1600);
 void_1605->setCallingConv(CallingConv::C);
 void_1605->setTailCall(false);
 AttributeSet void_1605_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1605_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1605->setAttributes(void_1605_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_1600);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv->arg_begin();
 Value* ptr_this_1607 = args++;
 ptr_this_1607->setName("this");
 
 BasicBlock* label_entry_1608 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EE13_M_initializeEv,0);
 
 // Block entry (label_entry_1608)
 AllocaInst* ptr_this_addr_1609 = new AllocaInst(PointerTy_95, "this.addr", label_entry_1608);
 ptr_this_addr_1609->setAlignment(8);
 StoreInst* void_1610 = new StoreInst(ptr_this_1607, ptr_this_addr_1609, false, label_entry_1608);
 void_1610->setAlignment(8);
 LoadInst* ptr_this1_1611 = new LoadInst(ptr_this_addr_1609, "this1", false, label_entry_1608);
 std::vector<Value*> ptr__M_header_1612_indices;
 ptr__M_header_1612_indices.push_back(const_int32_208);
 ptr__M_header_1612_indices.push_back(const_int32_211);
 Instruction* ptr__M_header_1612 = GetElementPtrInst::Create(ptr_this1_1611, ptr__M_header_1612_indices, "_M_header", label_entry_1608);
 std::vector<Value*> ptr__M_color_indices;
 ptr__M_color_indices.push_back(const_int32_208);
 ptr__M_color_indices.push_back(const_int32_208);
 Instruction* ptr__M_color = GetElementPtrInst::Create(ptr__M_header_1612, ptr__M_color_indices, "_M_color", label_entry_1608);
 StoreInst* void_1613 = new StoreInst(const_int32_208, ptr__M_color, false, label_entry_1608);
 void_1613->setAlignment(4);
 std::vector<Value*> ptr__M_header2_indices;
 ptr__M_header2_indices.push_back(const_int32_208);
 ptr__M_header2_indices.push_back(const_int32_211);
 Instruction* ptr__M_header2 = GetElementPtrInst::Create(ptr_this1_1611, ptr__M_header2_indices, "_M_header2", label_entry_1608);
 std::vector<Value*> ptr__M_parent_1614_indices;
 ptr__M_parent_1614_indices.push_back(const_int32_208);
 ptr__M_parent_1614_indices.push_back(const_int32_211);
 Instruction* ptr__M_parent_1614 = GetElementPtrInst::Create(ptr__M_header2, ptr__M_parent_1614_indices, "_M_parent", label_entry_1608);
 StoreInst* void_1615 = new StoreInst(const_ptr_222, ptr__M_parent_1614, false, label_entry_1608);
 void_1615->setAlignment(8);
 std::vector<Value*> ptr__M_header3_indices;
 ptr__M_header3_indices.push_back(const_int32_208);
 ptr__M_header3_indices.push_back(const_int32_211);
 Instruction* ptr__M_header3 = GetElementPtrInst::Create(ptr_this1_1611, ptr__M_header3_indices, "_M_header3", label_entry_1608);
 std::vector<Value*> ptr__M_header4_indices;
 ptr__M_header4_indices.push_back(const_int32_208);
 ptr__M_header4_indices.push_back(const_int32_211);
 Instruction* ptr__M_header4 = GetElementPtrInst::Create(ptr_this1_1611, ptr__M_header4_indices, "_M_header4", label_entry_1608);
 std::vector<Value*> ptr__M_left_1616_indices;
 ptr__M_left_1616_indices.push_back(const_int32_208);
 ptr__M_left_1616_indices.push_back(const_int32_221);
 Instruction* ptr__M_left_1616 = GetElementPtrInst::Create(ptr__M_header4, ptr__M_left_1616_indices, "_M_left", label_entry_1608);
 StoreInst* void_1617 = new StoreInst(ptr__M_header3, ptr__M_left_1616, false, label_entry_1608);
 void_1617->setAlignment(8);
 std::vector<Value*> ptr__M_header5_indices;
 ptr__M_header5_indices.push_back(const_int32_208);
 ptr__M_header5_indices.push_back(const_int32_211);
 Instruction* ptr__M_header5 = GetElementPtrInst::Create(ptr_this1_1611, ptr__M_header5_indices, "_M_header5", label_entry_1608);
 std::vector<Value*> ptr__M_header6_indices;
 ptr__M_header6_indices.push_back(const_int32_208);
 ptr__M_header6_indices.push_back(const_int32_211);
 Instruction* ptr__M_header6 = GetElementPtrInst::Create(ptr_this1_1611, ptr__M_header6_indices, "_M_header6", label_entry_1608);
 std::vector<Value*> ptr__M_right_1618_indices;
 ptr__M_right_1618_indices.push_back(const_int32_208);
 ptr__M_right_1618_indices.push_back(const_int32_229);
 Instruction* ptr__M_right_1618 = GetElementPtrInst::Create(ptr__M_header6, ptr__M_right_1618_indices, "_M_right", label_entry_1608);
 StoreInst* void_1619 = new StoreInst(ptr__M_header5, ptr__M_right_1618, false, label_entry_1608);
 void_1619->setAlignment(8);
 ReturnInst::Create(mod->getContext(), label_entry_1608);
 
}

// Function: _ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev (func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev)
{
 Function::arg_iterator args = func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev->arg_begin();
 Value* ptr_this_1621 = args++;
 ptr_this_1621->setName("this");
 
 BasicBlock* label_entry_1622 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev,0);
 
 // Block entry (label_entry_1622)
 AllocaInst* ptr_this_addr_1623 = new AllocaInst(PointerTy_154, "this.addr", label_entry_1622);
 ptr_this_addr_1623->setAlignment(8);
 StoreInst* void_1624 = new StoreInst(ptr_this_1621, ptr_this_addr_1623, false, label_entry_1622);
 void_1624->setAlignment(8);
 LoadInst* ptr_this1_1625 = new LoadInst(ptr_this_addr_1623, "this1", false, label_entry_1622);
 CastInst* ptr_1626 = new BitCastInst(ptr_this1_1625, PointerTy_155, "", label_entry_1622);
 CallInst* void_1627 = CallInst::Create(func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev, ptr_1626, "", label_entry_1622);
 void_1627->setCallingConv(CallingConv::C);
 void_1627->setTailCall(false);
 AttributeSet void_1627_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1627_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1627->setAttributes(void_1627_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_1622);
 
}

// Function: _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev (func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev)
{
 Function::arg_iterator args = func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev->arg_begin();
 Value* ptr_this_1629 = args++;
 ptr_this_1629->setName("this");
 
 BasicBlock* label_entry_1630 = BasicBlock::Create(mod->getContext(), "entry",func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev,0);
 
 // Block entry (label_entry_1630)
 AllocaInst* ptr_this_addr_1631 = new AllocaInst(PointerTy_155, "this.addr", label_entry_1630);
 ptr_this_addr_1631->setAlignment(8);
 StoreInst* void_1632 = new StoreInst(ptr_this_1629, ptr_this_addr_1631, false, label_entry_1630);
 void_1632->setAlignment(8);
 LoadInst* ptr_this1_1633 = new LoadInst(ptr_this_addr_1631, "this1", false, label_entry_1630);
 ReturnInst::Create(mod->getContext(), label_entry_1630);
 
}

// Function: _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev (func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev)
{
 Function::arg_iterator args = func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev->arg_begin();
 Value* ptr_this_1635 = args++;
 ptr_this_1635->setName("this");
 
 BasicBlock* label_entry_1636 = BasicBlock::Create(mod->getContext(), "entry",func__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKSsiEEEC2Ev,0);
 
 // Block entry (label_entry_1636)
 AllocaInst* ptr_this_addr_1637 = new AllocaInst(PointerTy_155, "this.addr", label_entry_1636);
 ptr_this_addr_1637->setAlignment(8);
 StoreInst* void_1638 = new StoreInst(ptr_this_1635, ptr_this_addr_1637, false, label_entry_1636);
 void_1638->setAlignment(8);
 LoadInst* ptr_this1_1639 = new LoadInst(ptr_this_addr_1637, "this1", false, label_entry_1636);
 ReturnInst::Create(mod->getContext(), label_entry_1636);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev->arg_begin();
 Value* ptr_this_1641 = args++;
 ptr_this_1641->setName("this");
 
 BasicBlock* label_entry_1642 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev,0);
 BasicBlock* label_invoke_cont_1643 = BasicBlock::Create(mod->getContext(), "invoke.cont",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev,0);
 BasicBlock* label_invoke_cont2_1644 = BasicBlock::Create(mod->getContext(), "invoke.cont2",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev,0);
 BasicBlock* label_lpad_1645 = BasicBlock::Create(mod->getContext(), "lpad",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev,0);
 BasicBlock* label_eh_resume_1646 = BasicBlock::Create(mod->getContext(), "eh.resume",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EED2Ev,0);
 
 // Block entry (label_entry_1642)
 AllocaInst* ptr_this_addr_1647 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1642);
 ptr_this_addr_1647->setAlignment(8);
 AllocaInst* ptr_exn_slot_1648 = new AllocaInst(PointerTy_1, "exn.slot", label_entry_1642);
 AllocaInst* ptr_ehselector_slot_1649 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "ehselector.slot", label_entry_1642);
 StoreInst* void_1650 = new StoreInst(ptr_this_1641, ptr_this_addr_1647, false, label_entry_1642);
 void_1650->setAlignment(8);
 LoadInst* ptr_this1_1651 = new LoadInst(ptr_this_addr_1647, "this1", false, label_entry_1642);
 std::vector<Value*> ptr_call_1652_params;
 ptr_call_1652_params.push_back(ptr_this1_1651);
 InvokeInst *ptr_call_1652 = InvokeInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_beginEv, label_invoke_cont_1643, label_lpad_1645, ptr_call_1652_params, "call", label_entry_1642);
 ptr_call_1652->setCallingConv(CallingConv::C);AttributeSet ptr_call_1652_PAL;
 ptr_call_1652->setAttributes(ptr_call_1652_PAL);
 
 
 // Block invoke.cont (label_invoke_cont_1643)
 std::vector<Value*> void_1653_params;
 void_1653_params.push_back(ptr_this1_1651);
 void_1653_params.push_back(ptr_call_1652);
 InvokeInst *void_1653 = InvokeInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E, label_invoke_cont2_1644, label_lpad_1645, void_1653_params, "", label_invoke_cont_1643);
 void_1653->setCallingConv(CallingConv::C);AttributeSet void_1653_PAL;
 void_1653->setAttributes(void_1653_PAL);
 
 
 // Block invoke.cont2 (label_invoke_cont2_1644)
 std::vector<Value*> ptr__M_impl_1654_indices;
 ptr__M_impl_1654_indices.push_back(const_int32_208);
 ptr__M_impl_1654_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl_1654 = GetElementPtrInst::Create(ptr_this1_1651, ptr__M_impl_1654_indices, "_M_impl", label_invoke_cont2_1644);
 CallInst* void_1655 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev, ptr__M_impl_1654, "", label_invoke_cont2_1644);
 void_1655->setCallingConv(CallingConv::C);
 void_1655->setTailCall(false);
 AttributeSet void_1655_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1655_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1655->setAttributes(void_1655_PAL);
 
 ReturnInst::Create(mod->getContext(), label_invoke_cont2_1644);
 
 // Block lpad (label_lpad_1645)
 LandingPadInst* struct_1657 = LandingPadInst::Create(StructTy_43, const_ptr_213, 0, "", label_lpad_1645);
 struct_1657->setCleanup(true);
 std::vector<unsigned> ptr_1658_indices;
 ptr_1658_indices.push_back(0);
 ExtractValueInst* ptr_1658 = ExtractValueInst::Create(struct_1657, ptr_1658_indices, "", label_lpad_1645);
 StoreInst* void_1659 = new StoreInst(ptr_1658, ptr_exn_slot_1648, false, label_lpad_1645);
 std::vector<unsigned> int32_1660_indices;
 int32_1660_indices.push_back(1);
 ExtractValueInst* int32_1660 = ExtractValueInst::Create(struct_1657, int32_1660_indices, "", label_lpad_1645);
 StoreInst* void_1661 = new StoreInst(int32_1660, ptr_ehselector_slot_1649, false, label_lpad_1645);
 std::vector<Value*> ptr__M_impl3_indices;
 ptr__M_impl3_indices.push_back(const_int32_208);
 ptr__M_impl3_indices.push_back(const_int32_208);
 Instruction* ptr__M_impl3 = GetElementPtrInst::Create(ptr_this1_1651, ptr__M_impl3_indices, "_M_impl3", label_lpad_1645);
 CallInst* void_1662 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev, ptr__M_impl3, "", label_lpad_1645);
 void_1662->setCallingConv(CallingConv::C);
 void_1662->setTailCall(false);
 AttributeSet void_1662_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1662_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1662->setAttributes(void_1662_PAL);
 
 BranchInst::Create(label_eh_resume_1646, label_lpad_1645);
 
 // Block eh.resume (label_eh_resume_1646)
 LoadInst* ptr_exn_1664 = new LoadInst(ptr_exn_slot_1648, "exn", false, label_eh_resume_1646);
 LoadInst* int32_sel_1665 = new LoadInst(ptr_ehselector_slot_1649, "sel", false, label_eh_resume_1646);
 std::vector<unsigned> struct_lpad_val_1666_indices;
 struct_lpad_val_1666_indices.push_back(0);
 InsertValueInst* struct_lpad_val_1666 = InsertValueInst::Create(const_struct_214, ptr_exn_1664, struct_lpad_val_1666_indices, "lpad.val", label_eh_resume_1646);
 std::vector<unsigned> struct_lpad_val4_indices;
 struct_lpad_val4_indices.push_back(1);
 InsertValueInst* struct_lpad_val4 = InsertValueInst::Create(struct_lpad_val_1666, int32_sel_1665, struct_lpad_val4_indices, "lpad.val4", label_eh_resume_1646);
 ResumeInst::Create(struct_lpad_val4, label_eh_resume_1646);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E->arg_begin();
 Value* ptr_this_1668 = args++;
 ptr_this_1668->setName("this");
 Value* ptr___x_1669 = args++;
 ptr___x_1669->setName("__x");
 
 BasicBlock* label_entry_1670 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,0);
 BasicBlock* label_while_cond_1671 = BasicBlock::Create(mod->getContext(), "while.cond",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,0);
 BasicBlock* label_while_body_1672 = BasicBlock::Create(mod->getContext(), "while.body",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,0);
 BasicBlock* label_while_end_1673 = BasicBlock::Create(mod->getContext(), "while.end",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E,0);
 
 // Block entry (label_entry_1670)
 AllocaInst* ptr_this_addr_1674 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1670);
 ptr_this_addr_1674->setAlignment(8);
 AllocaInst* ptr___x_addr_1675 = new AllocaInst(PointerTy_88, "__x.addr", label_entry_1670);
 ptr___x_addr_1675->setAlignment(8);
 AllocaInst* ptr___y_1676 = new AllocaInst(PointerTy_88, "__y", label_entry_1670);
 ptr___y_1676->setAlignment(8);
 StoreInst* void_1677 = new StoreInst(ptr_this_1668, ptr_this_addr_1674, false, label_entry_1670);
 void_1677->setAlignment(8);
 StoreInst* void_1678 = new StoreInst(ptr___x_1669, ptr___x_addr_1675, false, label_entry_1670);
 void_1678->setAlignment(8);
 LoadInst* ptr_this1_1679 = new LoadInst(ptr_this_addr_1674, "this1", false, label_entry_1670);
 BranchInst::Create(label_while_cond_1671, label_entry_1670);
 
 // Block while.cond (label_while_cond_1671)
 LoadInst* ptr_1681 = new LoadInst(ptr___x_addr_1675, "", false, label_while_cond_1671);
 ptr_1681->setAlignment(8);
 ICmpInst* int1_cmp_1682 = new ICmpInst(*label_while_cond_1671, ICmpInst::ICMP_NE, ptr_1681, const_ptr_223, "cmp");
 BranchInst::Create(label_while_body_1672, label_while_end_1673, int1_cmp_1682, label_while_cond_1671);
 
 // Block while.body (label_while_body_1672)
 LoadInst* ptr_1684 = new LoadInst(ptr___x_addr_1675, "", false, label_while_body_1672);
 ptr_1684->setAlignment(8);
 CastInst* ptr_1685 = new BitCastInst(ptr_1684, PointerTy_2, "", label_while_body_1672);
 CallInst* ptr_call_1686 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base, ptr_1685, "call", label_while_body_1672);
 ptr_call_1686->setCallingConv(CallingConv::C);
 ptr_call_1686->setTailCall(false);
 AttributeSet ptr_call_1686_PAL;
 ptr_call_1686->setAttributes(ptr_call_1686_PAL);
 
 std::vector<Value*> void_1687_params;
 void_1687_params.push_back(ptr_this1_1679);
 void_1687_params.push_back(ptr_call_1686);
 CallInst* void_1687 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E, void_1687_params, "", label_while_body_1672);
 void_1687->setCallingConv(CallingConv::C);
 void_1687->setTailCall(false);
 AttributeSet void_1687_PAL;
 void_1687->setAttributes(void_1687_PAL);
 
 LoadInst* ptr_1688 = new LoadInst(ptr___x_addr_1675, "", false, label_while_body_1672);
 ptr_1688->setAlignment(8);
 CastInst* ptr_1689 = new BitCastInst(ptr_1688, PointerTy_2, "", label_while_body_1672);
 CallInst* ptr_call2_1690 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base, ptr_1689, "call2", label_while_body_1672);
 ptr_call2_1690->setCallingConv(CallingConv::C);
 ptr_call2_1690->setTailCall(false);
 AttributeSet ptr_call2_1690_PAL;
 ptr_call2_1690->setAttributes(ptr_call2_1690_PAL);
 
 StoreInst* void_1691 = new StoreInst(ptr_call2_1690, ptr___y_1676, false, label_while_body_1672);
 void_1691->setAlignment(8);
 LoadInst* ptr_1692 = new LoadInst(ptr___x_addr_1675, "", false, label_while_body_1672);
 ptr_1692->setAlignment(8);
 std::vector<Value*> void_1693_params;
 void_1693_params.push_back(ptr_this1_1679);
 void_1693_params.push_back(ptr_1692);
 CallInst* void_1693 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E, void_1693_params, "", label_while_body_1672);
 void_1693->setCallingConv(CallingConv::C);
 void_1693->setTailCall(false);
 AttributeSet void_1693_PAL;
 void_1693->setAttributes(void_1693_PAL);
 
 LoadInst* ptr_1694 = new LoadInst(ptr___y_1676, "", false, label_while_body_1672);
 ptr_1694->setAlignment(8);
 StoreInst* void_1695 = new StoreInst(ptr_1694, ptr___x_addr_1675, false, label_while_body_1672);
 void_1695->setAlignment(8);
 BranchInst::Create(label_while_cond_1671, label_while_body_1672);
 
 // Block while.end (label_while_end_1673)
 ReturnInst::Create(mod->getContext(), label_while_end_1673);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev->arg_begin();
 Value* ptr_this_1698 = args++;
 ptr_this_1698->setName("this");
 
 BasicBlock* label_entry_1699 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13_Rb_tree_implIS6_Lb0EED2Ev,0);
 
 // Block entry (label_entry_1699)
 AllocaInst* ptr_this_addr_1700 = new AllocaInst(PointerTy_95, "this.addr", label_entry_1699);
 ptr_this_addr_1700->setAlignment(8);
 StoreInst* void_1701 = new StoreInst(ptr_this_1698, ptr_this_addr_1700, false, label_entry_1699);
 void_1701->setAlignment(8);
 LoadInst* ptr_this1_1702 = new LoadInst(ptr_this_addr_1700, "this1", false, label_entry_1699);
 CastInst* ptr_1703 = new BitCastInst(ptr_this1_1702, PointerTy_154, "", label_entry_1699);
 CallInst* void_1704 = CallInst::Create(func__ZNSaISt13_Rb_tree_nodeISt4pairIKSsiEEED2Ev, ptr_1703, "", label_entry_1699);
 void_1704->setCallingConv(CallingConv::C);
 void_1704->setTailCall(false);
 AttributeSet void_1704_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1704_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1704->setAttributes(void_1704_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_1699);
 
}

// Function: _ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E (func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E)
{
 Function::arg_iterator args = func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E->arg_begin();
 Value* ptr_this_1706 = args++;
 ptr_this_1706->setName("this");
 Value* ptr___p_1707 = args++;
 ptr___p_1707->setName("__p");
 
 BasicBlock* label_entry_1708 = BasicBlock::Create(mod->getContext(), "entry",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E,0);
 BasicBlock* label_invoke_cont_1709 = BasicBlock::Create(mod->getContext(), "invoke.cont",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E,0);
 BasicBlock* label_invoke_cont2_1710 = BasicBlock::Create(mod->getContext(), "invoke.cont2",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E,0);
 BasicBlock* label_lpad_1711 = BasicBlock::Create(mod->getContext(), "lpad",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E,0);
 BasicBlock* label_eh_resume_1712 = BasicBlock::Create(mod->getContext(), "eh.resume",func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E,0);
 
 // Block entry (label_entry_1708)
 AllocaInst* ptr_this_addr_1713 = new AllocaInst(PointerTy_27, "this.addr", label_entry_1708);
 ptr_this_addr_1713->setAlignment(8);
 AllocaInst* ptr___p_addr_1714 = new AllocaInst(PointerTy_88, "__p.addr", label_entry_1708);
 ptr___p_addr_1714->setAlignment(8);
 AllocaInst* ptr_temp_lvalue_1715 = new AllocaInst(StructTy_class_std__allocator_4, "temp.lvalue", label_entry_1708);
 ptr_temp_lvalue_1715->setAlignment(1);
 AllocaInst* ptr_exn_slot_1716 = new AllocaInst(PointerTy_1, "exn.slot", label_entry_1708);
 AllocaInst* ptr_ehselector_slot_1717 = new AllocaInst(IntegerType::get(mod->getContext(), 32), "ehselector.slot", label_entry_1708);
 StoreInst* void_1718 = new StoreInst(ptr_this_1706, ptr_this_addr_1713, false, label_entry_1708);
 void_1718->setAlignment(8);
 StoreInst* void_1719 = new StoreInst(ptr___p_1707, ptr___p_addr_1714, false, label_entry_1708);
 void_1719->setAlignment(8);
 LoadInst* ptr_this1_1720 = new LoadInst(ptr_this_addr_1713, "this1", false, label_entry_1708);
 std::vector<Value*> void_1721_params;
 void_1721_params.push_back(ptr_temp_lvalue_1715);
 void_1721_params.push_back(ptr_this1_1720);
 CallInst* void_1721 = CallInst::Create(func__ZNKSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE13get_allocatorEv, void_1721_params, "", label_entry_1708);
 void_1721->setCallingConv(CallingConv::C);
 void_1721->setTailCall(false);
 AttributeSet void_1721_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::StructRet);
    PAS = AttributeSet::get(mod->getContext(), 1U, B);
   }
  
  Attrs.push_back(PAS);
  void_1721_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1721->setAttributes(void_1721_PAL);
 
 CastInst* ptr_1722 = new BitCastInst(ptr_temp_lvalue_1715, PointerTy_147, "", label_entry_1708);
 LoadInst* ptr_1723 = new LoadInst(ptr___p_addr_1714, "", false, label_entry_1708);
 ptr_1723->setAlignment(8);
 std::vector<Value*> ptr__M_value_field_1724_indices;
 ptr__M_value_field_1724_indices.push_back(const_int32_208);
 ptr__M_value_field_1724_indices.push_back(const_int32_211);
 Instruction* ptr__M_value_field_1724 = GetElementPtrInst::Create(ptr_1723, ptr__M_value_field_1724_indices, "_M_value_field", label_entry_1708);
 std::vector<Value*> ptr_call_1725_params;
 ptr_call_1725_params.push_back(ptr__M_value_field_1724);
 InvokeInst *ptr_call_1725 = InvokeInst::Create(func__ZSt11__addressofISt4pairIKSsiEEPT_RS3_, label_invoke_cont_1709, label_lpad_1711, ptr_call_1725_params, "call", label_entry_1708);
 ptr_call_1725->setCallingConv(CallingConv::C);AttributeSet ptr_call_1725_PAL;
 ptr_call_1725->setAttributes(ptr_call_1725_PAL);
 
 
 // Block invoke.cont (label_invoke_cont_1709)
 std::vector<Value*> void_1726_params;
 void_1726_params.push_back(ptr_1722);
 void_1726_params.push_back(ptr_call_1725);
 InvokeInst *void_1726 = InvokeInst::Create(func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_, label_invoke_cont2_1710, label_lpad_1711, void_1726_params, "", label_invoke_cont_1709);
 void_1726->setCallingConv(CallingConv::C);AttributeSet void_1726_PAL;
 void_1726->setAttributes(void_1726_PAL);
 
 
 // Block invoke.cont2 (label_invoke_cont2_1710)
 CallInst* void_1727 = CallInst::Create(func__ZNSaISt4pairIKSsiEED2Ev, ptr_temp_lvalue_1715, "", label_invoke_cont2_1710);
 void_1727->setCallingConv(CallingConv::C);
 void_1727->setTailCall(false);
 AttributeSet void_1727_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1727_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1727->setAttributes(void_1727_PAL);
 
 LoadInst* ptr_1728 = new LoadInst(ptr___p_addr_1714, "", false, label_invoke_cont2_1710);
 ptr_1728->setAlignment(8);
 std::vector<Value*> void_1729_params;
 void_1729_params.push_back(ptr_this1_1720);
 void_1729_params.push_back(ptr_1728);
 CallInst* void_1729 = CallInst::Create(func__ZNSt8_Rb_treeISsSt4pairIKSsiESt10_Select1stIS2_ESt4lessISsESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E, void_1729_params, "", label_invoke_cont2_1710);
 void_1729->setCallingConv(CallingConv::C);
 void_1729->setTailCall(false);
 AttributeSet void_1729_PAL;
 void_1729->setAttributes(void_1729_PAL);
 
 ReturnInst::Create(mod->getContext(), label_invoke_cont2_1710);
 
 // Block lpad (label_lpad_1711)
 LandingPadInst* struct_1731 = LandingPadInst::Create(StructTy_43, const_ptr_213, 0, "", label_lpad_1711);
 struct_1731->setCleanup(true);
 std::vector<unsigned> ptr_1732_indices;
 ptr_1732_indices.push_back(0);
 ExtractValueInst* ptr_1732 = ExtractValueInst::Create(struct_1731, ptr_1732_indices, "", label_lpad_1711);
 StoreInst* void_1733 = new StoreInst(ptr_1732, ptr_exn_slot_1716, false, label_lpad_1711);
 std::vector<unsigned> int32_1734_indices;
 int32_1734_indices.push_back(1);
 ExtractValueInst* int32_1734 = ExtractValueInst::Create(struct_1731, int32_1734_indices, "", label_lpad_1711);
 StoreInst* void_1735 = new StoreInst(int32_1734, ptr_ehselector_slot_1717, false, label_lpad_1711);
 CallInst* void_1736 = CallInst::Create(func__ZNSaISt4pairIKSsiEED2Ev, ptr_temp_lvalue_1715, "", label_lpad_1711);
 void_1736->setCallingConv(CallingConv::C);
 void_1736->setTailCall(false);
 AttributeSet void_1736_PAL;
 {
  SmallVector<AttributeSet, 4> Attrs;
  AttributeSet PAS;
   {
    AttrBuilder B;
    B.addAttribute(Attribute::NoUnwind);
    PAS = AttributeSet::get(mod->getContext(), ~0U, B);
   }
  
  Attrs.push_back(PAS);
  void_1736_PAL = AttributeSet::get(mod->getContext(), Attrs);
  
 }
 void_1736->setAttributes(void_1736_PAL);
 
 BranchInst::Create(label_eh_resume_1712, label_lpad_1711);
 
 // Block eh.resume (label_eh_resume_1712)
 LoadInst* ptr_exn_1738 = new LoadInst(ptr_exn_slot_1716, "exn", false, label_eh_resume_1712);
 LoadInst* int32_sel_1739 = new LoadInst(ptr_ehselector_slot_1717, "sel", false, label_eh_resume_1712);
 std::vector<unsigned> struct_lpad_val_1740_indices;
 struct_lpad_val_1740_indices.push_back(0);
 InsertValueInst* struct_lpad_val_1740 = InsertValueInst::Create(const_struct_214, ptr_exn_1738, struct_lpad_val_1740_indices, "lpad.val", label_eh_resume_1712);
 std::vector<unsigned> struct_lpad_val3_indices;
 struct_lpad_val3_indices.push_back(1);
 InsertValueInst* struct_lpad_val3 = InsertValueInst::Create(struct_lpad_val_1740, int32_sel_1739, struct_lpad_val3_indices, "lpad.val3", label_eh_resume_1712);
 ResumeInst::Create(struct_lpad_val3, label_eh_resume_1712);
 
}

// Function: _ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_ (func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_)
{
 Function::arg_iterator args = func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_->arg_begin();
 Value* ptr_this_1742 = args++;
 ptr_this_1742->setName("this");
 Value* ptr___p_1743 = args++;
 ptr___p_1743->setName("__p");
 
 BasicBlock* label_entry_1744 = BasicBlock::Create(mod->getContext(), "entry",func__ZN9__gnu_cxx13new_allocatorISt4pairIKSsiEE7destroyEPS3_,0);
 
 // Block entry (label_entry_1744)
 AllocaInst* ptr_this_addr_1745 = new AllocaInst(PointerTy_147, "this.addr", label_entry_1744);
 ptr_this_addr_1745->setAlignment(8);
 AllocaInst* ptr___p_addr_1746 = new AllocaInst(PointerTy_58, "__p.addr", label_entry_1744);
 ptr___p_addr_1746->setAlignment(8);
 StoreInst* void_1747 = new StoreInst(ptr_this_1742, ptr_this_addr_1745, false, label_entry_1744);
 void_1747->setAlignment(8);
 StoreInst* void_1748 = new StoreInst(ptr___p_1743, ptr___p_addr_1746, false, label_entry_1744);
 void_1748->setAlignment(8);
 LoadInst* ptr_this1_1749 = new LoadInst(ptr_this_addr_1745, "this1", false, label_entry_1744);
 LoadInst* ptr_1750 = new LoadInst(ptr___p_addr_1746, "", false, label_entry_1744);
 ptr_1750->setAlignment(8);
 CallInst* void_1751 = CallInst::Create(func__ZNSt4pairIKSsiED2Ev, ptr_1750, "", label_entry_1744);
 void_1751->setCallingConv(CallingConv::C);
 void_1751->setTailCall(false);
 AttributeSet void_1751_PAL;
 void_1751->setAttributes(void_1751_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_1744);
 
}

// Function: _GLOBAL__I_a (func__GLOBAL__I_a)
{
 
 BasicBlock* label_entry_1753 = BasicBlock::Create(mod->getContext(), "entry",func__GLOBAL__I_a,0);
 
 // Block entry (label_entry_1753)
 CallInst* void_1754 = CallInst::Create(func___cxx_global_var_init, "", label_entry_1753);
 void_1754->setCallingConv(CallingConv::C);
 void_1754->setTailCall(false);
 AttributeSet void_1754_PAL;
 void_1754->setAttributes(void_1754_PAL);
 
 CallInst* void_1755 = CallInst::Create(func___cxx_global_var_init1, "", label_entry_1753);
 void_1755->setCallingConv(CallingConv::C);
 void_1755->setTailCall(false);
 AttributeSet void_1755_PAL;
 void_1755->setAttributes(void_1755_PAL);
 
 ReturnInst::Create(mod->getContext(), label_entry_1753);
 
}

return mod;
}
